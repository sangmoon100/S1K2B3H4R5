/* ======================= Program Header ======================================
 PROGRAM-NAME   : PKW1030G(단기계약직 급여 계산)
 SYSTEM-NAME    : 급여
 SUBSYSTEM-NAME : 단기계약직 급여
 Programmer     : 이랑교
 Version        : 1.00
 Date           : 1999.06.01

Update Contents
   Version    date(yy.mm.dd)     programmer      description     relevant doc.no
   1.00       1999.06.01         이랑교          최초개발본      설계명세서
  30.00       2000.04.20     유효성         -휴일수당,야간수당 및 
                                                  주휴,생휴,월차수당 적용에 따른 수정 

  30.10       2001.06.20     유효성         -국민건강보험, 고용보험 적용에 따른 수정
  30.20       2001.08.30         유효성         1.휴일근무시 식사시간 제외 추가   전(2001-3450)
                                        2.19:00~08:00 근무가 9시간이상일때는 1시간 제외        
  30.30       2002.03.18         유효성         소득세법 변경에 따른 수정 
                      (근로소득공제액 60000원으로 변경)
              2002.12.11         박수향(parksh)  소득세법 변경에 따른 수정 근로소득공제세율 10%-> 9%변경                                        
  30.40       2003.12.02         강륜종          소득세법 변경에 따른 수정 
                      (근로소득공제액 80000원으로 변경)
                      (근로소득세액공제 45% -> 50% 인상)
  31.00       2004.02.24         강륜종        Oracle8i 업그레이드에 의한 관련 라이브러리 업그레이드.                      
  32.00       2004.12.03         dsa2000       근로소득세액공제 인상 : 테이블에서 읽어와 계산토록 수정.
  33.00       2004.12.28      강륜종(dsa2000)  Rexec 대체서비스를 위한 수정작업.     
  34.00       2005.04.21         dsa2000       주휴 8시간에서 12시간으로 변경.
============================================================================= */

#include  <stdio.h>
#include  <stdlib.h>          
/* Dsa2000  추가.. 2004.02.24.*/
#include "hinsa_string.h"
#include "hinsa_date.h"
#include "hinsa_log.h"
#include "hinsa_oracle.h"
#include "hinsa_common.h"
#include "hinsa_macro.h"

#define  FAIL        -2
/* Dsa2000  추가..End.......*/


/* ===========================================================================
  Function Prototype 정의 
   =========================================================================== */
void   calc_ilpay(void);
void   calc_iltax(void); /* 세액 계산*/
void   print_errmsg(int errcode, char *errmsg);

/* ===========================================================================
  Global Variable
   =========================================================================== */

EXEC SQL  BEGIN DECLARE SECTION;
     char     paydate[8+1];      /* 급여지급일   */
     char     empno[4+1];        /* 사번     */
                                 
     char     frdate[8+1];       /* 급여계산기간From   */
     char     todate[8+1];       /* 급여계산기간To   */
     char     writeman[4+1];     /* 작업자사번   */
     char     batchpayyn[1+1];   /* 일괄급여계산여부  */
     char     frorgnum[3+1];
     char     toorgnum[3+1];
     char     frdeptcode[6+1];
     char     todeptcode[6+1];
              
     char     sqlstr[300+1];
     double   empldrate = 0;     /* 고용보험료율   */        
     double   taxdedbrate;       /*근로소득세액공제율.*/
EXEC SQL  END DECLARE SECTION;
EXEC SQL  INCLUDE sqlca;

int  id;
/*=== dsa2000 2004.12. Rexec대체 서비스를 위한 =============*/
char    log_rundate[16]     = ""; 
char    log_progid[16]      = "";
char    log_writeman[5]     = "";
char    log_buff[100]       = "";
int     seqno = 0; 

void main(int argc, char *argv[])
{          
     char FL_file[255];
     
     if  (argc != 12) { /* /hper8/HINSA/proc/bin/Kbin/pkw1030g 20040210 20040101 20040131 H00 H99 A0000 ZZZZZ Y D006 pkw1030g 2004110100000 */
          printf("[Usage] : pkw1030g  1.급여지급일    2.급여계산기간From    3.급여계산기간To      \n");
          printf("[Usage] :         4.조직차수From  5.조직차수To   6.부서코드From  7.부서코드To \n");
          printf("[Usage] :         8.일괄급여계산여부    9.작업자 10.프로그램ID   11.시작시간  \n");
          exit(1);
     }  
     
     sprintf(paydate,"%s",argv[1]);
     sprintf(frdate,"%s",argv[2]);
     sprintf(todate,"%s",argv[3]);
     sprintf(frorgnum,"%s",argv[4]);
     sprintf(toorgnum,"%s",argv[5]);
     sprintf(frdeptcode,"%s",argv[6]);
     sprintf(todeptcode,"%s",argv[7]);
     sprintf(batchpayyn,"%s",argv[8]);
     sprintf(writeman,"%s",argv[9]);
     
     /*로그 디렉토리 생성 및 로그작업 */
     STRINIT(FL_file);
     strcpy(FL_file,"pkw1030g");
     
     hinsa_get_filename(1, FL_file);
     if  (hinsa_log_open(FL_file) == FAILURE)
     {
          hinsa_exit(0,"로그파일 생성에러로 인한 프로그램 종료...");
          return;
     }
     
     /* Dsa2000  2004.02.24.  **********************************/  
     /*DB_connect(id,0); */
     hinsa_log_print(0,"단기계약직 급여 계산 시작...");
     hinsa_db_connect();  /*DB Connect 실시..*/
     /* Dsa2000  수정 End......................................*/
     
     /*=== dsa2000 2004.12. Rexec대체 서비스를 위한 =============*/
     strcpy(log_writeman, argv[9]);
     strcpy(log_progid,   argv[10]);
     strcpy(log_rundate,  argv[11]);  
      
     EXEC SQL DECLARE log_db DATABASE;    
     hinsa_log_db_connect();
     /*========================================================*/
     
     calc_iltax();
     
     printf("급여 계산 중...\n");
     calc_ilpay();
     
     /* Dsa2000  2004.02.25.  hinsa_exit()에서 DB Commit & DB접속종료함.*/
     if  (sqlca.sqlcode != 0 && sqlca.sqlcode != 1403)
     {
          sprintf(log_buff, "ERROR ====== [작업 실패] ====="); /*dsa2000 Rexec 대체*/
          Write_batlog(seqno++, log_buff);                    /*dsa2000 Rexec 대체*/
          error_quit("[작업 실패]\n");
     }
     else
     {
          sprintf(log_buff, "OK ====== [단기계약직 급여계산 작업성공] =====\n"); /*dsa2000 Rexec 대체*/
          Write_batlog(seqno++, log_buff);                  /*dsa2000 Rexec 대체*/
          hinsa_exit(0,"OK ====== [단기계약직 급여계산 작업성공] =====\n");   
     }   
}

void calc_ilpay(void)
{
     /* 1. 기존자료 삭제 */
     EXEC SQL
     delete  from pkmilpay a
      where  paydate = :paydate
        and  orgnum between :frorgnum and :toorgnum
        and  deptcode between :frdeptcode and :todeptcode
        and  exists 
                     (select  b.empno
                        from  pkhilhis b
                       where  a.empno = b.empno
                         and  upper(batchpayyn) = :batchpayyn);
     if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != 1403))
     {
          print_errmsg(sqlca.sqlcode,"1. 기존자료 삭제 에서 오류...");
          sprintf(log_buff, "1. 기존자료 삭제 에서 오류..."); 
          Write_batlog(seqno++, log_buff); /*dsa2000 Rexec 대체*/
          error_quit("작업실패...");
     } 
     
     EXEC SQL
     INSERT INTO PKMILPAY (
            PAYDATE, EMPNO,  ORGNUM, DEPTCODE, ACNTCODE, FINCODE, 
            CORPCODE ,ACTIVITY ,SERVICE  ,METHOD   ,CUSTOMER ,TELE,   
            PAYBANK, PAYACNT, 
            WRITEMAN, WRITETIME)
     select :paydate, empno, orgnum, deptcode, acntcode, fincode, 
            CORPCODE ,ACTIVITY ,SERVICE  ,METHOD   ,CUSTOMER ,TELE,     
            paybank, payacnt,    
            :writeman, to_char(sysdate,'yyyymmddhh24miss')
       from pkhilhis a
      where upper(batchpayyn) = :batchpayyn
        and orgnum between :frorgnum and :toorgnum
        and deptcode between :frdeptcode and :todeptcode
        and payyn = 'Y'
     /*and     timekind = '0'*/
     /*and  exists (*/
    
     /* 20180831 csi  김기철, 김선일매니저 요청사항   */
     /* 급여지급여부만 가지고 대상 추출               */
     /* 근태 무시                                     */
     /*   
        and  a.empno in (  
                           select b.empno
                            from  pkhilduty b
                           where  b.dufrdate between :frdate and :todate
                             and  upper(b.conyn) = 'Y'
                             and  a.empno = b.empno);
     */
     ;
      
     if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != 1403))
     {
          print_errmsg(sqlca.sqlcode,"2. 대상자료생성 에서 오류...");
          sprintf(log_buff, "2. 대상자료생성 에서 오류..."); 
          Write_batlog(seqno++, log_buff); /*dsa2000 Rexec 대체*/
          error_quit("작업실패...");
     }
     
     /*===================2000-04-20 주휴,월차,생휴수당 추가 =============*/
     /*월차*/
     EXEC SQL  
     UPDATE  PKMILPAY A
        SET  MONTHAMT = ( SELECT DECODE(NVL(FULLYN,'N'),'Y', (NVL(BASEAMT,0) * LEAST(NVL(CONHH,0),8)),   0) 
                           FROM PKHILDUSUM D, PKHILHIS H
                          WHERE D.EMPNO = H.EMPNO
                            AND D.DUYYMM = SUBSTR(:frdate, 1, 6)
                            AND A.EMPNO = D.EMPNO)
      WHERE  A.PAYDATE = :paydate
        and  orgnum between :frorgnum and :toorgnum
        and  deptcode between :frdeptcode and :todeptcode
        and  exists
                    (select b.empno
                      from  pkhilhis b
                     where  a.empno = b.empno
                       and  upper(batchpayyn) = :batchpayyn
                       and  timekind ='0' );
     
     if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != 1403))
     {
          print_errmsg(sqlca.sqlcode," 월차수당 계산 에서 오류...");
          error_quit("작업실패...");
     }
     
           /*생휴  2008.06.13 삭제 인력팀 김미진씨 통해서
           EXEC SQL
     UPDATE PKMILPAY A
     SET HEALTHAMT = ( SELECT DECODE( NVL(HEALTH ,0), '0',(NVL(BASEAMT,0) * LEAST(NVL(CONHH,0),8) ),0)
                   FROM PKHILDUSUM D, PKHILHIS H
              WHERE D.EMPNO = H.EMPNO
              AND D.DUYYMM = SUBSTR(:frdate, 1, 6)
              AND A.EMPNO = D.EMPNO)
     WHERE  A.PAYDATE = :paydate
     and  orgnum between :frorgnum and :toorgnum
     and  deptcode between :frdeptcode and :todeptcode
     AND     A.EMPNO IN (SELECT EMPNO FROM PKHILHIS WHERE SUBSTR(JUMINID, 8,1) IN ('2','4'))
     and  exists
      (select    b.empno
       from  pkhilhis b
       where  a.empno = b.empno
       and  upper(batchpayyn) = :batchpayyn
       AND TIMEKIND = '0' ) ;
     */
     
     EXEC SQL
     UPDATE  PKMILPAY A
        SET  HEALTHAMT = 0
      WHERE  A.PAYDATE = :paydate
        and  orgnum between :frorgnum and :toorgnum
        and  deptcode between :frdeptcode and :todeptcode
        AND  A.EMPNO IN (SELECT EMPNO FROM PKHILHIS WHERE SUBSTR(JUMINID, 8,1) IN ('2','4'))
        and  exists
                     (select  b.empno
                        from  pkhilhis b
                       where  a.empno = b.empno
                         and  upper(batchpayyn) = :batchpayyn
                         AND  TIMEKIND = '0' ) ;
       
     if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != 1403))
     {
          print_errmsg(sqlca.sqlcode,"  생휴 수당 계산 에서 오류...");
          error_quit("작업실패...");
     }
           
           /*주휴   8시간에서 12시간으로 변경 dsa2000 반영(2005.04.21). */
           /*주휴   12시간에서 8시간으로 변경 dsa2000 반영(2012.04.04).김현순 매니져 요청 수정 */
     EXEC SQL
     UPDATE  PKMILPAY A
      /*SET  WEEKAMT = ( SELECT  NVL(WEEKCNT,0) * NVL(BASEAMT,0) * LEAST(NVL(CONHH, 0), 8) 8시간에서 12시간으로 변경*/
        SET  WEEKAMT = ( SELECT  NVL(WEEKCNT,0) * NVL(BASEAMT,0) * decode(CONHH,0,0,8)
                           FROM  PKHILDUSUM D, PKHILHIS H
                          WHERE  D.EMPNO = H.EMPNO
                            AND  D.DUYYMM = SUBSTR(:frdate, 1, 6)
                            AND  A.EMPNO = D.EMPNO)
      WHERE  A.PAYDATE = :paydate
        and  orgnum between :frorgnum and :toorgnum
        and  deptcode between :frdeptcode and :todeptcode  
        and  exists
                    (select  b.empno
                       from  pkhilhis b
                      where  a.empno = b.empno
                        and  upper(batchpayyn) = :batchpayyn
                        AND  TIMEKIND = '0') ;
           
     if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != 1403))
     {
          print_errmsg(sqlca.sqlcode," 주휴 수당 계산 에서 오류...");
          error_quit("작업실패...");
     }
           
  
/*================*/  
  
     /* 3.1  총 근무 시간/수당 계산 */
     EXEC SQL
     UPDATE  PKMILPAY A
        SET  (BASEHH, EXTHH, BASEAMT,EXTAMT,
              NIGHTHH,  HOLIHH,  HOLIEXTHH,
              NIGHTAMT, HOLIAMT, HOLIEXTAMT,
              TOTMM,RESTMM,
              LABINAMT ,INDED,TAXINAMT,
              CALCTAX  ,LABTAXDED,
              INTAX,JUTAX,
              MEALHH, MEALAMT,
              EXCEPHH, EXCEPAMT  ) =
             (SELECT NVL(SUM(B.BASEHH ),0),NVL(SUM(B.EXTHH ),0),
                     NVL(SUM(B.BASEAMT),0),NVL(SUM(B.EXTAMT),0),
                     NVL(SUM(B.NIGHTHH),0),NVL(SUM(B.HOLIHH),0),NVL(SUM(B.HOLIEXTHH),0),
                     NVL(SUM(B.NIGHTAMT),0),NVL(SUM(B.HOLIAMT),0), NVL(SUM(B.HOLIEXTAMT),0),
                     NVL(SUM(B.TOTMM ) ,0),NVL(SUM(B.RESTMM),0),
                     NVL(SUM(B.LABINAMT),0),nvl(SUM(B.INDED),0),
                     NVL(SUM(B.TAXINAMT),0),
                     NVL(SUM(B.CALCTAX) ,0),nvl(SUM(B.LABTAXDED),0),
                     NVL(SUM(B.INTAX),0), NVL(SUM(B.JUTAX ),0),
                     SUM(NVL(B.MEALHH,0)), SUM(NVL(B.MEALAMT ,0)),
                     SUM(NVL(B.EXCEPHH,0)), SUM(NVL(B.EXCEPAMT ,0))
               FROM  PKHILDUTY B
              WHERE  B.DUFRDATE BETWEEN :frdate AND :todate
                AND  UPPER(B.CONYN) = 'Y'
                AND  A.EMPNO = B.EMPNO)
      WHERE  PAYDATE = :paydate
        and  orgnum   between :frorgnum and :toorgnum
        and  deptcode between :frdeptcode and :todeptcode
        and  exists
                    (select  c.empno
                       from  pkhilhis c
                      where  a.empno = c.empno
                        and  upper(batchpayyn) = :batchpayyn);
     
     if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != 1403))
     {
          print_errmsg(sqlca.sqlcode,"3.1  총 근무 시간/수당 계산 에서 오류...");
          error_quit("작업실패...");
     }
     
     EXEC SQL
     UPDATE  PKMILPAY A
        SET  DUTYAMT = NVL(BASEAMT,0) + NVL(EXTAMT,0) +
             NVL(NIGHTAMT,0) + NVL(HOLIAMT,0) + NVL(HOLIEXTAMT,0) -
             NVL(MEALAMT,0) - NVL(EXCEPAMT,0) 
      WHERE  PAYDATE = :paydate
        and  orgnum   between :frorgnum and :toorgnum
        and  deptcode between :frdeptcode and :todeptcode
        and  exists
                    (select    c.empno
                       from  pkhilhis c
                      where  a.empno = c.empno
                        and  upper(batchpayyn) = :batchpayyn);
     
     if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != 1403))
     {
          print_errmsg(sqlca.sqlcode,"  DUTYAMT 계산 에서 오류...");
          error_quit("작업실패...");
     }
     
     EXEC SQL
     UPDATE  PKHILDUTY B
        SET  PAYDATE  = :paydate 
      WHERE  B.DUFRDATE BETWEEN :frdate AND :todate
        AND  EMPNO IN (SELECT  EMPNO
                         FROM  PKMILPAY A
                        WHERE  ORGNUM   BETWEEN :frorgnum AND :toorgnum
                          AND  DEPTCODE BETWEEN :frdeptcode AND :todeptcode
                          AND  PAYDATE= :paydate );

     if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != 1403))
     {
          print_errmsg(sqlca.sqlcode,"3.1.2   근태table에 급여지급확정 error ");
          error_quit("작업실패...");
     }
     
     /* 3.2  지급총액계산 */
     EXEC SQL
     update  pkmilpay a
        set  taxpaysum    =  nvl(DUTYAMT,0) + nvl(taxpay,0) + nvl(WEEKAMT,0) 
                          +  nvl(MONTHAMT,0) + nvl(HEALTHAMT,0),
             notaxpaysum  =  nvl(notaxpay,0),
             paysum       =  nvl(DUTYAMT,0) + nvl(taxpay,0) + nvl(WEEKAMT,0) + nvl(MONTHAMT,0) 
                          +  nvl(HEALTHAMT,0) + nvl(notaxpay,0)
      where  paydate = :paydate
        and  orgnum between :frorgnum and :toorgnum
        and  deptcode between :frdeptcode and :todeptcode
        and  exists
                    (select  b.empno
                       from  pkhilhis b
                      where  a.empno = b.empno
                        and  upper(batchpayyn) = :batchpayyn);
     
     if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != 1403))
     {
          print_errmsg(sqlca.sqlcode,"3.2  지급총액계산 에서 오류...");
          error_quit("작업실패...");
     }
     
/* =================================================================================
  30.10       2001.06.20     유효성         -국민건강보험, 고용보험 적용에 따른 수정                                               
  주휴,생휴,월차수당 적용에 따른 수정                                                   
==================================================================================== */
/**국민건강보험계산**/
    EXEC SQL
    update  pkmilpay a
       set  meddamt = (select nvl(b.medamt ,0)
                         from pkhilhis b
                        where a.empno = b.empno)  
     where  paydate = :paydate
       and  orgnum between :frorgnum and :toorgnum
       and  deptcode between :frdeptcode and :todeptcode
       and  exists
                   (select  b.empno
                      from  pkhilhis b
                     where  a.empno = b.empno
                       and  upper(batchpayyn) = :batchpayyn
                       and  b.confrdate <=concat(substr(:paydate,1,6),'01')
                   );
    
     if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != 1403))
     {
          print_errmsg(sqlca.sqlcode," 의료보험계산 에서 오류...");
          error_quit("작업실패...");
     }
     
     
     /**국민연금 계산**/
     EXEC SQL
     update  pkmilpay a
        set  dedamt1 = (select nvl(b.dedamt ,0)
                          from pkhilhis b
                         where a.empno = b.empno)  
      where  paydate = :paydate
        and  orgnum between :frorgnum and :toorgnum
        and  deptcode between :frdeptcode and :todeptcode
        and  exists
                     (select  b.empno
                        from  pkhilhis b
                       where  a.empno = b.empno
                         and  upper(batchpayyn) = :batchpayyn
                         and  b.confrdate <=concat(substr(:paydate,1,6),'01')
                     );
      
     if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != 1403))
     {
          print_errmsg(sqlca.sqlcode," 국민연금계산 에서 오류...");
          error_quit("작업실패...");
     }
     
     
     /**고용보험 계산**/
     EXEC SQL
     select empldrate
       into :empldrate
       from pkcemtbl ;
     if  (sqlca.sqlcode != 0) 
     {
          print_errmsg(sqlca.sqlcode,"고용보험료 계산기준 읽기오류...");
          error_quit("작업실패...");
     }
     
     
     EXEC SQL
     update  pkmilpay a
        set  empldamt = trunc(nvl(FLOOR(taxpaysum * :empldrate),0),-1)
      where  paydate = :paydate
        and  orgnum between :frorgnum and :toorgnum
        and  deptcode between :frdeptcode and :todeptcode
        and  exists
                    (select  b.empno
                       from  pkhilhis b
                      where  a.empno = b.empno
                        and  upper(batchpayyn) = :batchpayyn);
     
     if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != 1403))
     {
          print_errmsg(sqlca.sqlcode," 고용보험계산 에서 오류...");
          error_quit("작업실패...");
     }
     
/*================국민건강보험, 고용보험료 계산 끝=======*/   
  

     /* 3.2  소액 부징수 (소득세) */
     EXEC SQL
     update  pkmilpay a
        set  intax   = 0
      where  paydate = :paydate
        and  orgnum between :frorgnum and :toorgnum
        and  deptcode between :frdeptcode and :todeptcode
        and  exists
                   (select  b.empno
                      from  pkhilhis b
                     where  a.empno = b.empno
                       and  upper(batchpayyn) = :batchpayyn)
                       and  intax < 1000 ;
     
     
     if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != 1403))
     {
          print_errmsg(sqlca.sqlcode,"3.2.2  소액 부징수 (소득세) 에서 오류...");
          error_quit("작업실패...");
     }
     
     
     /* 3.2.3  소액 부징수 (주민세) */
     EXEC SQL
     update  pkmilpay a
        set  jutax   = 0
      where  paydate = :paydate
        and  orgnum between :frorgnum and :toorgnum
        and  deptcode between :frdeptcode and :todeptcode
        and  exists
                     (select  b.empno
                        from  pkhilhis b
                       where  a.empno = b.empno
                         and  upper(batchpayyn) = :batchpayyn)
                         and  intax = 0 ;
     
     
     if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != 1403))
     {
          print_errmsg(sqlca.sqlcode,"3.2.2  소액 부징수 (주민세) 에서 오류...");
          error_quit("작업실패...");
     }
     
     /* 3.4 실지급액 계산*/
     EXEC SQL
     update  pkmilpay a
     /*국민건강보험료, 고용보험료 추가*/
     /*set  dedsum     = dedamt1 + intax + jutax,*/
        set  dedsum    = dedamt1 + intax + jutax + meddamt + empldamt ,
             realpay   = paysum-(dedamt1 + intax + jutax + meddamt + empldamt),
             writeman  = :writeman,
             writetime = to_char(sysdate,'yyyymmddhh24miss')
      where  paydate = :paydate
        and  orgnum between :frorgnum and :toorgnum
        and  deptcode between :frdeptcode and :todeptcode
        and  exists
                    (select  b.empno
                       from  pkhilhis b
                      where  a.empno = b.empno
                        and  upper(batchpayyn) = :batchpayyn);
     
     if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != 1403))
     {
          print_errmsg(sqlca.sqlcode,"3.4 실지급액 계산 에서 오류...");
          error_quit("작업실패...");
     }
}


/* ********************************************************************** *
   세금계산 
* ********************************************************************** */

void calc_iltax(void)
{
/*=2000.7.11. 추가 시작. 급여계산하는 시점의 단기계약직이력(PKHILHIS) 기본급으로 각종 수당 재계산...========*/  
     printf(" 세금계산 중...\n"); 
     EXEC SQL
     UPDATE  PKHILDUTY A  
        SET  (BASEAMT, EXTAMT, HOLIAMT, HOLIEXTAMT, NIGHTAMT, MEALAMT, EXCEPAMT ) 
         =   (SELECT  A.BASEHH    * B.BASEAMT,        
                      A.EXTHH     * B.BASEAMT * 1.5, 
                      A.HOLIHH    * B.BASEAMT * 1.5,  
                      A.HOLIEXTHH * B.BASEAMT * 2.0, 
                      A.NIGHTHH   * B.BASEAMT * 0.5,
                      A.MEALHH    * B.BASEAMT * 1.5,  
                      A.EXCEPHH   * B.BASEAMT * 1.5
                FROM  PKHILHIS B
               WHERE  A.EMPNO = B.EMPNO)                    
      WHERE  ORGNUM   BETWEEN :frorgnum AND :toorgnum
        AND  DEPTCODE BETWEEN :frdeptcode AND :todeptcode
        AND  DUFRDATE BETWEEN :frdate AND :todate
        AND  UPPER(CONYN) = 'Y'
        AND  EXISTS (SELECT  C.EMPNO
                       FROM  PKHILHIS C
                      WHERE  A.EMPNO = C.EMPNO
                        AND  UPPER(C.BATCHPAYYN) = :batchpayyn);      
     
     if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != 1403))
     {
          print_errmsg(sqlca.sqlcode,"일별 수당 계산에서 오류...");
          error_quit("작업실패...");
     }
     
/*========================2000.7.11. 추가 끝================================*/
  
     /* 3.3 세금계산1  */
     EXEC SQL
     update  PKHILDUTY a
     /* 2000-04-24 야근수당,휴일근무수당 추가
     set  taxpaysum   = nvl(baseamt,0)+nvl(extamt,0)*/
        set  taxpaysum   = nvl(baseamt,0)+nvl(extamt,0)+nvl(nightamt,0)+nvl(holiamt,0)
                          +nvl(holiextamt,0)-nvl(mealamt,0)-nvl(excepamt,0)
      where  orgnum   between :frorgnum and :toorgnum
        and  deptcode between :frdeptcode and :todeptcode
        and  dufrdate between :frdate and :todate
        and  upper(conyn) = 'Y'
        and  exists  (select  b.empno
                        from  pkhilhis b
                       where  a.empno = b.empno
                         and  upper(batchpayyn) = :batchpayyn); 
      
     if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != 1403))
     {
          print_errmsg(sqlca.sqlcode,"3.3 세금계산1 에서 오류...");
          error_quit("작업실패...");
     }
     
     /*===========================================================================
     30.40       2003.12.02         강륜종        근로소득공제액  80000원으로 변경
     ============================================================================= */    
     /***  EXEC SQL
       update  PKHILDUTY a
       set  labinamt   = nvl(taxpaysum,0),              
        inded          = 60000,
        taxinamt  = greatest((taxpaysum-60000),0), 
        calctax          = floor(greatest((taxpaysum-60000),0) * 0.09)  2002년에 근로소득공제변경  0.1->0.09 수정 parksh20021211
     ***/

     /* 2018.12.26 eyha 근로소득공제 100000 -> 150000 박윤진M */
     EXEC SQL
     update  PKHILDUTY a
        set  labinamt   = nvl(taxpaysum,0),               /* 과세표준 */
             inded          = 150000,
             taxinamt  = greatest((taxpaysum-150000),0),  /* 근로소득공제 */ 
             /*   calctax          = floor(greatest((taxpaysum-80000),0) * 0.09) */
             calctax          = floor(greatest((taxpaysum-150000),0) * 0.06) /* dsa2000 2005.10.04 세율 인하 2011.01.10 6% 변경 2010년 잘못 적용*/
      where  orgnum   between :frorgnum and :toorgnum
       and   deptcode between :frdeptcode and :todeptcode
       and   dufrdate between :frdate and :todate
       and   upper(conyn) = 'Y'
       and   exists
                    (select   b.empno
                       from  pkhilhis b
                      where  a.empno = b.empno
                        and  upper(batchpayyn) = :batchpayyn);         
     
     if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != 1403))
     {
          print_errmsg(sqlca.sqlcode,"3.3 세금계산1 에서 오류...");
          error_quit("작업실패...");
     }

/*===========================================================================
30.40   2003.12.02  강륜종   근로소득세액공제  0.45=>0.50 로 변경
31.00   2004.12.03  강륜종   근로소득세액공제  하드코딩 안하고 기준테이블에서 읽어 오도록 수정.(taxdedbrate)
============================================================================= */
/*  EXEC SQL
  update  pkhilduty a
  set  labtaxded= ceil(calctax * 0.45),
   intax    = floor((calctax - ceil(calctax * 0.45))/10) * 10
  EXEC SQL
  update  pkhilduty a
  set  labtaxded= ceil(calctax * 0.50),
   intax    = floor((calctax - ceil(calctax * 0.50))/10) * 10   
*/
  /* 3.3 세금계산2   근로소득세액공제  DSA2000  추가..*/
     EXEC SQL 
     select  taxdedbrate/100 
       into  :taxdedbrate
       from  pkcpbas;
     if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != 1403))
     {
          print_errmsg(sqlca.sqlcode,"3.3 세금계산2 근로소득세액공제율 읽기오류....");
          error_quit("작업실패...");
     }
      
     EXEC SQL
     update  pkhilduty a
        set  labtaxded= ceil(calctax * :taxdedbrate),
             intax    = floor((calctax - ceil(calctax * :taxdedbrate))/10) * 10
      where  orgnum   between :frorgnum and :toorgnum
        and  deptcode between :frdeptcode and :todeptcode
        and  dufrdate between :frdate and :todate
        and  upper(conyn) = 'Y'
        and  exists
                     (select  b.empno
                       from  pkhilhis b
                      where  a.empno = b.empno
                        and  upper(batchpayyn) = :batchpayyn);
     
     if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != 1403))
     {
          print_errmsg(sqlca.sqlcode,"3.3 세금계산2 에서 오류...");
          error_quit("작업실패...");
     }
     
     /* 3.3 세금계산3  */
     EXEC SQL
     update  pkhilduty a
        set  jutax  = floor((intax * 0.1 )/10) * 10
      where  orgnum   between :frorgnum and :toorgnum
        and  deptcode between :frdeptcode and :todeptcode
        and  dufrdate between :frdate and :todate
        and  upper(conyn) = 'Y'
        and  exists
                    (select  b.empno
                       from  pkhilhis b
                      where  a.empno = b.empno
                        and  upper(batchpayyn) = :batchpayyn);
                    
     if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != 1403))
     {
          print_errmsg(sqlca.sqlcode,"3.3 세금계산3 에서 오류...");
          error_quit("작업실패...");
     }  
}
/*************************************************************************/

/***************************************************************************
  print_errmsg  Function.
 ***************************************************************************/
void print_errmsg(int errcode, char *errmsg)
{
     printf(" [ERR_CODE] : (%d)\n", errcode);
     printf(" [ERR_POSITION] : (%s)\n",errmsg);
     
     EXEC SQL
     ROLLBACK WORK RELEASE;
}  

/*=== dsa2000 2004.12. Rexec대체 서비스를 위한 =====================================*/
int Write_batlog(int seqno, char *message)
{  
     EXEC SQL AT log_db 
     INSERT INTO PYBATLOG
     VALUES (:log_rundate, :log_progid, :seqno, :log_writeman, :message);

     if ((sqlca.sqlcode != 1403) && (sqlca.sqlcode != 0)) 
     {  
          printf("ERROR_CODE : %d, pybatlog Insert Error. \n", sqlca.sqlcode);   
          return(FAIL);
     }                        
                        
     EXEC SQL AT log_db COMMIT WORK ;  
}
