/* ======================= Program Header =====================================
 PROGRAM-NAME   : PKRT2EAI(INSA->EAI Interface Program)
 PROGRM-Decription : 퇴직테이블을 읽어서 EAI Interface 테이블에 Insert(퇴직자)  (EAI_WORKTAX)
 SYSTEM-NAME    : 급여
 SUBSYSTEM-NAME : 퇴직자 연말정산(근로소득) 
 Programmer     : 강륜종
 Version        : 1.00
 Date           : 2005.07.                                    

근로소득(EAI_WORKTAX)   : /var/mte/adapter/conf/script/PIM/PIM.PIMFI1060B.SND.sh

Update Contents
   Version    date(yy.mm.dd)     programmer      description
   1.00       2005.07.           dsa2000         SAP도입에 따른 개발(pkmp2erprt.pc를 토대로)
============================================================================= */
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <ctype.h>
#include <time.h>
#include "hinsa_macro.h"
#include "hinsa_string.h"
#include "hinsa_date.h"
#include "hinsa_log.h"
#include "hinsa_oracle.h"
#include "hinsa_common.h"

#define   TRUE_RET 25600

void CreateLog(void);
void InitVariables(void);
void Initialize(void);
void WriteLog(char *message);
int  WriteControl(int gubun);
int  WriteEmployee(void);
int  Check_date(void); 


EXEC SQL INCLUDE sqlca;

EXEC SQL BEGIN DECLARE SECTION;
     char    v_dt_create[9];        /* 생성일자 */
     char    v_dt_createhms[15];    /* 생성일시 */
     char    v_cd_data[4] = "D51";  /* Employee Data Code */
     int     v_no_crt_srl = 0;      /* 생성 일련번호 */
     char    v_sscode[3+1] = "A15"; /* 소득관리코드(퇴직정산) */
     char    v_ym_acct[7];          /* 회계년월 */
     int     v_cnt_line = 0;        /* Line건수 */ 
     char    v_ph_proc[2] = "A";    /* 처리단계 */
     char    v_st_proc[2] = "P";    /* 처리상태 (P:Processing, N:Normal Termination, A:Abnormal Termination) */
     char    v_cl_data_use[2] = "A";/* Data 활용구분 */
     char    v_id_crt_user[5];      /* 생성 UserID */
     char    v_paydate[7];          /* 지급년월 */
     char    v_yyyymm[7];           /* 지급년월 */
     char    v_yyyy[5];             /* 지급년 */
     char    v_mm[3];               /* 지급월 */
     double  v_amttot = 0;          /* 과세표준금액총액   */
     double  v_amtin  = 0;          /* 결정소득세총액   */
     double  v_amtju  = 0;          /* 결정주민세총액   */
     double  v_amtnong  = 0;        /* 결정주민세총액   */
     char    v_rst_validation[2] = "A";
EXEC SQL END   DECLARE SECTION;

/****************************************************************************** 
  Other Variables
******************************************************************************/ 
char  *HOMEDIR;
char  logfile[40];
char  logfile_fullname[140];
int   id;
char  buff[1000];
char  log_rundate[16]     = ""; 
char  log_progid[16]      = "";
char  log_writeman[5]     = "";
char  log_buff[100]       = "";
int   seqno = 0; 

/***** Log File Pointer *****/
FILE *fp; 

void main(int argc, char *argv[])
{
     int  ret;
     if  (argc != 5) 
     {    /* pkrt2eai 200507 D006 pkrt2eai 2005073100000*/ 
          printf("[Usage] : pkrt2eai 1.지급년월(YYYYMM) 2.작업자 3.progid 4.시작시간\n");
          fclose(fp);
          exit(1);
     }
     
     sprintf(v_paydate,     argv[1]);         /* 지급년월   */     
     sprintf(v_yyyy,"%4.4s",v_paydate);       /* 지급년     */     
     sprintf(v_mm  ,"%2s",  v_paydate+4);     /* 지급월     */         
     sprintf(v_id_crt_user, argv[2]);         /* 작업자사번 */
      
     hinsa_log_print(0,"ERP 인터페이스 시작...");                
     hinsa_db_connect();  /*DB Connect 실시..*/
                  
     /*=== dsa2000 2004.11. Rexec대체 서비스를 위한 =============*/
     strcpy(log_writeman, argv[2]);
     strcpy(log_progid,   argv[3]);
     strcpy(log_rundate,  argv[4]); 
      
     EXEC SQL DECLARE log_db DATABASE;    
     hinsa_log_db_connect();
     /*========================================================*/
                   
     InitVariables();   /* 변수 초기화 */
     Initialize();    /* 초기화 루틴 */
     CreateLog();
      
     sprintf(buff, "프로그램명 : %s\n", argv[0]);
     WriteLog(buff);
     sprintf(buff, "지급년월  : %s\n", argv[1]);
     WriteLog(buff);         
            
     if (Check_date() != 0) 
     {
          sprintf(log_buff, "지급년월에 해당하는 자료가 없습니다. %s\n", v_paydate);
          WriteLog(log_buff);
          Write_batlog(seqno++, log_buff);   
          fclose(fp);
          printf("지급년월에 해당하는 자료가 없습니다.\n");
          exit(1);
     }         
           
     if (WriteControl(0) == -1) 
     {   /* 초기값 세팅 */
        fclose(fp);
        exit(1);
     }
      
     if (WriteEmployee() == -1)
     {
          WriteControl(2); /* 비정상종료 */
          Write_batlog(seqno++, "ERROR" );   
          error_quit("ERROR ====== [작업 실패] =====\n");    
     }        
     else
     {
          WriteControl(1);  /* 정상종료 */ 
          Write_batlog(seqno++, "OK ====== [작업 완료] =====\n");   
          hinsa_exit(0,"OK ====== [작업 완료] =====\n");    
     }   
      
            
     WriteLog("< Program End......................................... >\n");
     fclose(fp);
     printf("총  건  수    : %d\n", v_cnt_line);
     printf("차감소득세    : %0.0f\n", v_amttot);
     printf("소득세합계    : %0.0f\n", v_amtin);
     printf("주민세합계    : %0.0f\n", v_amtju);
     printf("농특세합계    : %0.0f\n", v_amtnong);
     
     sprintf(log_buff, "총  건  수    : %d\n", v_cnt_line);
     Write_batlog(seqno++, log_buff);   
     sprintf(log_buff, "차감소득세    : %0.0f\n", v_amttot);
     Write_batlog(seqno++, log_buff);   
     sprintf(log_buff, "소득세합계    : %0.0f\n", v_amtin);
     Write_batlog(seqno++, log_buff);   
     sprintf(log_buff, "주민세합계    : %0.0f\n", v_amtju);
     Write_batlog(seqno++, log_buff);   
     sprintf(log_buff, "농특세합계    : %0.0f\n", v_amtnong);
     Write_batlog(seqno++, log_buff);   
      
     if (v_cnt_line == 0)
     {
          printf("실패!!! \n");
          Write_batlog(seqno++, "실패");   
     }   
     else
     {
          printf("OK!!!\n");
          Write_batlog(seqno++, "OK 성공 ");   
      }
}


void CreateLog()
{
     HOMEDIR = hinsa_home();
     strcat(HOMEDIR,"/log/ERPlog/");
     
     /* 로그파일명을 세팅 */
     sprintf(logfile_fullname, "%spkrt2eai%s%02d.log", HOMEDIR, v_dt_create, v_no_crt_srl);
     
     /* 로그파일 오픈 */
     fp = fopen(logfile_fullname, "w+");
      
     if (fp == NULL) {
         printf("로그파일오픈(%s) 에러\n", logfile_fullname);
         exit(1);
     }
}


void InitVariables(void)
{
     memset(logfile, NULL, sizeof(logfile));
     memset(logfile_fullname, NULL, sizeof(logfile_fullname));
     memset(v_dt_create, NULL, sizeof(v_dt_create));
     memset(v_dt_createhms, NULL, sizeof(v_dt_createhms)); 
     memset(v_ym_acct, NULL, sizeof(v_ym_acct));
}


void Initialize(void)
{
     sprintf(v_ym_acct, v_paydate );
     
     EXEC SQL 
     SELECT TO_CHAR(SYSDATE, 'YYYYMMDD') ,
            TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
       INTO :v_dt_create,
            :v_dt_createhms
       FROM DUAL;
      
     if (sqlca.sqlcode != 0)
     {
         printf("ORA-%05d - 현재날짜 가져오기  Error\n", sqlca.sqlcode);
         fclose(fp);
         exit(1);
     }
     
     EXEC SQL
     SELECT NVL(MAX(NO_CRT_SRL)+1,1)
       INTO :v_no_crt_srl 
       FROM EAI_WORKTAX
      WHERE H_YEAR||LPad(H_MONTH,2,'0') = :v_paydate
        AND CD_DATA = :v_cd_data;
      
     if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != -1403) && (sqlca.sqlcode != -1405)) 
     {
         printf("ORA-%05d - MAX Seril# 가져오기  Error\n", sqlca.sqlcode);
         fclose(fp);
         exit(1);
     }   
}


void WriteLog(char *message)
{
 fprintf(fp, "%s", message);
}
          
          
int  WriteControl(int gubun)
{
     sprintf(buff, "< WriteControl Starting (Gubun : %d) >----------------\n", gubun);
     
     if      (gubun == 1) sprintf(v_st_proc, "N");
     else if (gubun == 2) sprintf(v_st_proc, "A");
      
     WriteLog(buff);
     sprintf(buff, "v_dt_create : (%s)\n", v_dt_create);
     WriteLog(buff);
     sprintf(buff, "v_cd_data : (%s)\n", v_cd_data);
     WriteLog(buff);
     sprintf(buff, "v_no_crt_srl : (%d)\n", v_no_crt_srl);
     WriteLog(buff);
     sprintf(buff, "v_ym_acct : (%s)\n", v_ym_acct);
     WriteLog(buff);
     sprintf(buff, "v_ph_proc : (%s)\n", v_ph_proc);
     WriteLog(buff);
     sprintf(buff, "v_st_proc : (%s)\n", v_st_proc);
     WriteLog(buff);
     sprintf(buff, "v_cl_data_use : (%s)\n", v_cl_data_use);
     WriteLog(buff);
     sprintf(buff, "v_id_crt_user : (%s)\n", v_id_crt_user);
     WriteLog(buff);
     sprintf(buff, "v_cnt_line : (%d)\n", v_cnt_line);
     WriteLog(buff);
      
     if      (gubun == 1) printf("OK Program End  ......................................... >\n");
     else if (gubun == 2) printf("Fail Program End......................................... >\n");
      
     return(0);       
}

int  WriteEmployee(void)
{
     WriteLog("< Write EAI_RETIRETAX Starting >-------------------------------\n");
     sprintf(buff, "v_dt_create  : (%s)\n", v_dt_create);
     WriteLog(buff);
     sprintf(buff, "v_cd_data    : (%s)\n", v_cd_data);
     WriteLog(buff);
     sprintf(buff, "v_no_crt_srl : (%d)\n", v_no_crt_srl);
     WriteLog(buff);
     sprintf(buff, "v_rst_validation : (%s)\n", v_rst_validation);
     WriteLog(buff);
     /*
     printf("v_yyyy           : %s \n", v_yyyy);
     printf("v_mm             : %s \n", v_mm);
     printf("v_cd_data        : %s \n", v_cd_data);
     printf("v_no_crt_srl     : %d \n", v_no_crt_srl);
     printf("v_dt_createhms   : %s \n", v_dt_createhms);
     printf("v_sscode         : %s \n", v_sscode);
     printf("v_paydate        : %s \n", v_paydate);
     printf("v_rst_validation : %s \n", v_rst_validation);
     */
     EXEC SQL 
     INSERT INTO EAI_WORKTAX (
            H_YEAR              ,
            H_MONTH             ,
            MDGBN               ,
            CD_DATA             ,
            NO_CRT_SRL          ,
            IFSYS               ,
            H_SSCODE            ,
            H_JIGUB_YMD         ,
            H_EMPNO             ,
            SEQLN               ,
            IFDAT               ,
            H_UNIT              ,
            H_DEPT              ,
            H_JUMIN             ,
            H_ALIEN             ,
            H_JOSEO             ,
            H_REGISTER          ,
            H_BUNRI             ,
            H_NAME              ,
            H_POSTNO            ,
            H_ADDRESS           ,
            H_KSYMD_FROM        ,
            H_KSYMD_TO          ,
            H_KMYMD_FROM        ,
            H_KMYMD_TO          ,
            H_JOO_PAY           ,
            H_JOO_BONUS         ,
            H_JOO_INJUNG        ,
            H_JOO_TEMP1         ,
            H_JOO_TEMP2         ,
            H_JOO_TOTAL         ,
            H_FREE_OVERSEA      ,
            H_FREE_NIGHT        ,
            H_FREE_TECH         ,
            H_FREE_TEMP1        ,
            H_FREE_TEMP2        ,
            H_FREE_TEMP3        ,
            H_FREE_TOTAL        ,
            H_WOLJUNG           ,
            H_BASE_PAY          ,
            H_LABOR_GONG        ,
            H_LABOR_PAY         ,
            H_BASE_ME           ,
            H_BASE_MATE         ,
            H_BASE_SUPPORT_SU   ,
            H_BASE_SUPPORT_MONEY,
            H_BASE_TEMP1        ,
            H_BASE_TEMP2        ,
            H_BASE_TEMP3        ,
            H_BASE_TEMP4        ,
            H_BASE_TEMP5        ,
            H_BASE_TEMP6        ,
            H_ADD_OLD_SU        ,
            H_ADD_OLD_MONEY     ,
            H_ADD_JANG_SU       ,
            H_ADD_JANG_MONEY    ,
            H_ADD_SON_SU        ,
            H_ADD_SON_MONEY     ,
            H_ADD_LADY          ,
            H_ADD_TEMP1         ,
            H_ADD_TEMP2         ,
            H_ADD_TEMP3         ,
            H_ADD_TEMP4         ,
            H_ADD_TEMP5         ,
            H_ADD_TEMP6         ,
            H_SOSUGONG          ,
            H_SPECIAL_INSURANCE ,
            H_SPECIAL_MEDICAL   ,
            H_SPECIAL_EDUCATE   ,
            H_SPECIAL_HOUSE     ,
            H_SPECIAL_DONATE    ,
            H_SPECIAL_SIN       ,
            H_SPECIAL_TEMP1     ,
            H_SPECIAL_TEMP2     ,
            H_SPECIAL_TEMP3     ,
            H_SPECIAL_TEMP4     ,
            H_SPECIAL_TEMP5     ,
            H_SPECIAL_TEMP6     ,
            H_SPECIAL_TOTAL     ,
            H_CHAGAM            ,
            H_PERSON_GONG       ,
            H_WORKING_GONG      ,
            H_JOHAB_GONG        ,
            H_GONG_TEMP1        ,
            H_GONG_TEMP2        ,
            H_GONG_TEMP3        ,
            H_GONG_TEMP4        ,
            H_GONG_TEMP5        ,
            H_GONG_TEMP6        ,
            H_STANDARD          ,
            H_SANCHUL           ,
            H_SGONG_LABOR       ,
            H_SGONG_ASSETS      ,
            H_SGONG_HOUSE       ,
            H_SGONG_OVERSEA     ,
            H_SGONG_STOCK       ,
            H_SGONG_TEMP1       ,
            H_SGONG_TEMP2       ,
            H_SGONG_TEMP3       ,
            H_SGONG_TEMP4       ,
            H_SGONG_TEMP5       ,
            H_SGONG_TEMP6       ,
            H_SGONG_TOTAL       ,
            H_SGM_PAY           ,
            H_SGM_JOGAM         ,
            H_SGM_TEMP1         ,
            H_SGM_TEMP2         ,
            H_SGM_TEMP3         ,
            H_SGM_TEMP4         ,
            H_SGM_TEMP5         ,
            H_SGM_TEMP6         ,
            H_SGM_TOTAL         ,
            H_DECIDE_SO         ,
            H_DECIDE_NONG       ,
            H_DECIDE_JOO        ,
            H_DECIDE_TOTAL      ,
            H_NAP_JONG_SO       ,
            H_NAP_JONG_NONG     ,
            H_NAP_JONG_JOO      ,
            H_NAP_JONG_TOTAL    ,
            H_NAP_HYUN_SO       ,
            H_NAP_HYUN_NONG     ,
            H_NAP_HYUN_JOO      ,
            H_NAP_HYUN_TOTAL    ,
            H_SIL_SO            ,
            H_SIL_NONG          ,
            H_SIL_JOO           ,
            H_SIL_TOTAL         ,
            RST_VALIDATION      ,
            H_SPECIAL_STANDARD  ,
            H_SPECIAL_YK_BO     ,
            H_PERSON_SAVE       ,
            H_SGONG_JOHAP       ,
            H_SGONG_JUNGKEN     ,
            H_GUNMU             ,
            H_SGONG_FOREIGNER   , /*Dsa2000 2004.01.29. 세법변경에 따른 칼럼 추가.(외국인 추가공제)*/
            H_CORPNAME          , /*종근무지 자료 2004년 귀속  dsa2000  2005.02.add*/
            H_CORPNO            , /*종근무지 자료 2004년 귀속  dsa2000  2005.02. add*/         
            H_PAYSUM            , /*종근무지 자료 2004년 귀속  dsa2000  2005.02. add*/         
            H_BONSUM            , /*종근무지 자료 2004년 귀속  dsa2000  2005.02. add*/         
            H_MEDAMT            , /*종근무지 자료 2004년 귀속  dsa2000  2005.02. add*/         
            H_HIREAMT           , /*종근무지 자료 2004년 귀속  dsa2000  2005.02. add*/         
            H_ANUAMT            , /*종근무지 자료 2004년 귀속  dsa2000  2005.02. add*/                  
          /*H_CORPNAME1         ,   종종근무지 자료
            H_CORPNO1           ,
            H_PAYSUM1           ,
            H_BONSUM1           ,
            H_MEDAMT1          ,
            H_HIREAMT1          ,
            H_ANUAMT1           , 
            H_BCOGBONSUM        , /*종전근무지 인정상여 총액 */
            H_FAMI70NO          , /*2004년 귀속  dsa2000  2005.02. add*/         
            H_SPECADDNO         , /*2004년 귀속  dsa2000  2005.02. add*/         
            H_SPECADDDED        , /*2004년 귀속  dsa2000  2005.02. add*/         
            H_SHOSAMT           , /*2004년 귀속  dsa2000  2005.02. add*/         
            H_HOUSEINTAMT2      , /*2004년 귀속  dsa2000  2005.02. add*/        
            CONFM               ,
            ZCONF_DATE          ,
            WT_QSCOD            ,
            MODE_FLAG           ,
            EAI_FLAG            ,
            EAI_DATE            
            )            
     SELECT  
           :v_yyyy                     H_YEAR,                 /*신고년*/        
           :v_mm                       H_MONTH,                /*신고월*/   
            'TX'                       MDGBN,                  /*모듈구분*/
           :v_cd_data                  CD_DATA,                /*자료구분 'D51'*/ 
           :v_no_crt_srl               NO_CRT_SRL,             /*순서*/   
            'HRIS'                     IFSYS,                  /*원천구분*/
           :v_sscode                   H_SSCODE,               /*소득관리코드*/        
            A.SUBDATE                  H_JIGUB_YMD,            /*지급일*//*dsa2000 2004.04.06. 회의결과에 따라 v_paydate  => A.subdate로 변경*/
            A.empno                    H_EMPNO,               /*사번*/   
            rownum                     SEQLN,                  /*라인번호*/
           :v_dt_createhms             IFDAT,                  /*생성일시 */
            '000'                      H_UNIT,                 /*사업장*/
         /*   C.FINCODE                  H_DEPT,                 부서*/   
         /*   DECODE(SUBSTR(D.TRIBEGB,1,1),'2',D.FINCODE, C.FINCODE ) H_DEPT,  /* 이상용 20181113 조직개편 */         
            Case When (XX.Tribegb='2' And YY.Tribegb='2') Then YY.Fincode Else XX.Fincode End  H_DEPT, /* 20181204 JHG 조직개편 */ 
            replace(B.juminid,'-','')  H_JUMIN,                /*주민등록번호*/
            decode(substr(B.juminid,8,1),'5','9','6','9','1') H_ALIEN, /*내외국인 구분 : 외국인(9)*/ 
            '2'                        H_JOSEO,                /*지급조서제출구분*/ 
            '1'                        H_REGISTER,             /*거주자 구분*/   
            '1'                        H_BUNRI,                /*분리과세구분*/ 
            A.korname                  H_NAME,                 /*성 명*/   
            Y.zipno                    H_POSTNO,               /*우편번호*/   
            SUBSTRB(Y.ADDR,1,70)       H_ADDRESS,              /*주소*/   
            NVL(Y.YSFRDATE, :v_yyyy||'0101') H_KSYMD_FROM,     /*귀속일_from*/   
            NVL(Y.YSTODATE, A.RETDATE)       H_KSYMD_TO,       /*귀속일_to*/   
            NVL(Y.YSFRDATE, :v_yyyy||'0101') H_KMYMD_FROM,     /*감면일_from*/             
            NVL(Y.YSTODATE, A.RETDATE)       H_KMYMD_TO,       /*감면일_to*/   
            /* 2014.11.11 하은영 주사업장급여에 비과세금액을 빼게 되어있었음, 주급여에서는 과세총액그대로 표시되어져야함           
            NVL(MPAYSUM, 0) +
            (NVL(NOTAX,0)-NVL(NOTAXEXCEPT,0)) H_JOO_PAY,         주사업장-급여 인정상여 및  */
            NVL(MPAYSUM, 0)            H_JOO_PAY,              /*주사업장-급여 인정상여 및  */
            NVL(MBONSUM, 0)            H_JOO_BONUS,            /*주사업장-상여*/ 
            NVL(MCOGBONSUM, 0)         H_JOO_INJUNG,           /*주사업장-인정상여*/  
            0                          H_JOO_TEMP1,            /*주사업장-temp1*/ 
            0                          H_JOO_TEMP2,            /*주사업장-temp2*/ 
            /* 2014.11.11 하은영 주사업장급여에 비과세금액을 빼게 되어있었음, 주급여에서는 과세총액그대로 표시되어져야함           
            NVL(MPAYSUM,0) + NVL(MBONSUM,0) + NVL(MCOGBONSUM,0)+
            (NVL(NOTAX,0)-NVL(NOTAXEXCEPT,0)) H_JOO_TOTAL,          주사업장-total*/ 
            NVL(MPAYSUM,0) + NVL(MBONSUM,0) + NVL(MCOGBONSUM,0) H_JOO_TOTAL,     /*주사업장-total*/ 
            0                          H_FREE_OVERSEA,
            0                          H_FREE_NIGHT,           /*비과세 야간근로*/ 
            0                          H_FREE_TECH,            /*비과세 기술*/   
            NVL(MNOTAX,0)              H_FREE_TEMP1,           /*비과세 temp1*/   
            0                          H_FREE_TEMP2,           /*비과세 temp2*/   
            0                          H_FREE_TEMP3,           /*비과세 temp3*/   
            NVL(NOTAX,0)               H_FREE_TOTAL,           /*비과세 계*/   
            NVL(LASTMONPAY,0)          H_WOLJUNG,              /*월정급여액*/   
            NVL(TAXGROSS,0)            H_BASE_PAY,             /*과세대상급여*/ 
            NVL(LABORDED,0)            H_LABOR_GONG,           /*근로소득공제*/ 
            NVL(LABORAMT,0)            H_LABOR_PAY,            /*근로소득급여*/ 
            NVL(SELFDED,0)             H_BASE_ME,              /*기본 본인*/   
            NVL(MATEDED,0)             H_BASE_MATE,            /*기본 배우자*/   
          /*NVL(FAMIDED,0)/1000000     H_BASE_SUPPORT_SU,        기본 부양가족 수*/
            NVL(FAMILYNO,0)            H_BASE_SUPPORT_SU,      /*기본 부양가족 수 2009년*/
            NVL(FAMIDED,0)             H_BASE_SUPPORT_MONEY,   /*기본 부양가족 액*/ 
            0                          H_BASE_TEMP1,           /*기본 TEMP1*/   
            0                          H_BASE_TEMP2,           /*기본 TEMP2*/   
            0                          H_BASE_TEMP3,           /*기본 TEMP3*/   
            0                          H_BASE_TEMP4,           /*기본 TEMP4*/   
            0                          H_BASE_TEMP5,           /*기본 TEMP5*/   
            0                          H_BASE_TEMP6,           /*기본 TEMP6*/   
          /*(FAMI65NO+FAMI70NO)        H_ADD_OLD_SU,             추가 경로우대 수*/   
            FAMI70NO                   H_ADD_OLD_SU,           /*추가 경로우대 수 : 65세 경로우대 폐지.2009년.*/   
            NVL(OLDDED,0)              H_ADD_OLD_MONEY,        /*추가 경로우대 금액*/ 
          /*NVL(OBSDED,0)/2000000      H_ADD_JANG_SU,            추가 장애자 수*/ 
            Nvl(OBSTACLENO,0)          H_ADD_JANG_SU,          /*추가 장애자 수 2009년*/ 
            NVL(OBSDED,0)              H_ADD_JANG_MONEY,       /*추가 장애자 금액*/ 
            NVL(CHILDNO,0)             H_ADD_SON_SU,           /*추가 자녀 수*/        
            NVL(CHILDDED,0)            H_ADD_SON_MONEY,        /*추가 자녀 금액*/ 
            NVL(WOMANDED,0)            H_ADD_LADY,             /*추가 부녀자공제*/ 
            0                          H_ADD_TEMP1,            /*추가 TEMP1*/   
            0                          H_ADD_TEMP2,            /*추가 TEMP2*/   
            0                          H_ADD_TEMP3,            /*추가 TEMP3*/   
            0                          H_ADD_TEMP4,            /*추가 TEMP4*/   
            0                          H_ADD_TEMP5,            /*추가 TEMP5*/   
            0                          H_ADD_TEMP6,            /*추가 TEMP6*/   
            NVL(FEWDED, 0)             H_SOSUGONG,             /*소수공제액*/   
            NVL(INSDED ,0)             H_SPECIAL_INSURANCE,    /*특별 보험료*/   
            NVL(HOSDED, 0)             H_SPECIAL_MEDICAL,      /*특별 의료비*/   
            NVL(Y.EDUDED, 0)           H_SPECIAL_EDUCATE,      /*특별 교육비*/   
            NVL(HOUSEDED,0)            H_SPECIAL_HOUSE,        /*특별 주택자금*/ 
            NVL(GIVEDED,0)             H_SPECIAL_DONATE,       /*특별 기부금*/   
            NVL(CREDITDED, 0)          H_SPECIAL_SIN,          /*특별 신용카드*/ 
            0                          H_SPECIAL_TEMP1,        /*특별 TEMP1*/   
            0                          H_SPECIAL_TEMP2,        /*특별 TEMP2*/   
            0                          H_SPECIAL_TEMP3,        /*특별 TEMP3*/   
            0                          H_SPECIAL_TEMP4,        /*특별 TEMP4*/   
            0                          H_SPECIAL_TEMP5,        /*특별 TEMP5*/   
            0                          H_SPECIAL_TEMP6,        /*특별 TEMP6*/   
            NVL(SPECIALDED,0)          H_SPECIAL_TOTAL,        /*특별 계*/   
            0                          H_CHAGAM,               /*차감소득*/   
            NVL(PENDED, 0)             H_PERSON_GONG,          /*개인연금 소득*/ 
            0                          H_WORKING_GONG,         /*현장공제*/   
            nvl(investded,0)           H_JOHAB_GONG,           /*조합출자공제*/ 
            0                          H_GONG_TEMP1,           /*공제 TEMP1*/   
            0                          H_GONG_TEMP2,           /*공제 TEMP2*/   
            0                          H_GONG_TEMP3,           /*공제 TEMP3*/   
            0                          H_GONG_TEMP4,           /*공제 TEMP4*/   
            0                          H_GONG_TEMP5,           /*공제 TEMP5*/   
            0                          H_GONG_TEMP6,           /*공제 TEMP6*/   
            NVL(TAXLEVEL ,0)           H_STANDARD,             /*과세표준*/   
            NVL(CALCTAX ,0)            H_SANCHUL,              /*산출세액*/   
            NVL(INCOMTDED,0)           H_SGONG_LABOR,          /*세액공제 근로소득*/ 
            NVL(PROPDED, 0)            H_SGONG_ASSETS,         /*세액공제 재형저축*/ 
            NVL(HLOANDED, 0)           H_SGONG_HOUSE,          /*세액공제 주택차입*/ 
            NVL(FORIDED, 0)            H_SGONG_OVERSEA,        /*세액공제 외국납부*/ 
            NVL(STKDED , 0)            H_SGONG_STOCK,          /*세액공제 주식저축*/ 
            0                          H_SGONG_TEMP1,          /*세액공제 TEMP1*/ 
            0                          H_SGONG_TEMP2,          /*세액공제 TEMP2*/ 
            0                          H_SGONG_TEMP3,          /*세액공제 TEMP3*/ 
            nvl(Y.polided,0)           H_SGONG_TEMP4,          /*세액공제 정치자금 dsa2000  2004 add */
            0                          H_SGONG_TEMP5,          /*세액공제 TEMP5*/ 
            0                          H_SGONG_TEMP6,          /*세액공제 TEMP6*/ 
            NVL(TDEDSUM,0)             H_SGONG_TOTAL,          /*세액공제 TOTAL*/ 
            0                          H_SGM_PAY,              /*세액감면 소득세법*/ 
            0                          H_SGM_JOGAM,            /*세액감면 조감법*/ 
            0                          H_SGM_TEMP1,            /*세액감면 TEMP1*/ 
            0                          H_SGM_TEMP2,            /*세액감면 TEMP2*/ 
            0                          H_SGM_TEMP3,            /*세액감면 TEMP3*/ 
            0                          H_SGM_TEMP4,            /*세액감면 TEMP4*/ 
            0                          H_SGM_TEMP5,            /*세액감면 TEMP5*/ 
            0                          H_SGM_TEMP6,            /*세액감면 TEMP6*/ 
            0                          H_SGM_TOTAL,            /*세액감면 TOTAL*/ 
            NVL(DINTAX,0)              H_DECIDE_SO,            /*결정 소득액*/   
            NVL(DNONGTAX, 0)           H_DECIDE_NONG,          /*결정 농특세*/   
            NVL(DJUTAX,0)              H_DECIDE_JOO,           /*결정 주민세*/   
            NVL(DINTAX,0) + NVL(DJUTAX,0) + nvl(DNONGTAX,0)     H_DECIDE_TOTAL,       /*TOTAL*/   
            NVL(BINTAX,0)              H_NAP_JONG_SO,          /*기납부 종 소득세*/ 
            NVL(BNONGTAX,0)            H_NAP_JONG_NONG,        /*기납부 종 농특세*/ 
            NVL(BJUTAX,0)              H_NAP_JONG_JOO,         /*기납부 종 주민세*/   
            NVL(BINTAX,0) + NVL(BJUTAX, 0) + NVL(BNONGTAX, 0)   H_NAP_JONG_TOTAL,     /*기납부 종 TOTAL*/ 
            NVL(MINTAX,0)              H_NAP_HYUN_SO,          /*기납부 현 소득세*/ 
            NVL(MNONGTAX,0)            H_NAP_HYUN_NONG,        /*기납부 현 농특세*/ 
            NVL(MJUTAX ,0)             H_NAP_HYUN_JOO,         /*기납부 현 주민세*/ 
            NVL(MINTAX,0) + NVL(MJUTAX, 0) + NVL(MNONGTAX, 0)   H_NAP_HYUN_TOTAL,     /*기납부 현 TOTAL*/ 
            /*2013.05.06.hjku. 2013 퇴직정산 반영으로 인한 오류 수정*/
            NVL(Y.YINTAX ,0)             H_SIL_SO,               /*차감징수 소득세   control sum */ 
            NVL(Y.YNONGTAX, 0)           H_SIL_NONG,             /*차감징수 농특세*/    
            NVL(Y.YJUTAX ,0)             H_SIL_JOO,              /*차감징수 주민세*/    
            NVL(Y.YINTAX, 0)+ NVL(Y.YJUTAX,0) + NVL(Y.YNONGTAX,0)     H_SIL_TOTAL,          /*차감징수 TOTAL*/     
           :v_rst_validation           RST_VALIDATION    ,
            NVL(STANDDED,0)            H_SPECIAL_STANDARD  ,   /*표준공제*/
            NVL(ANUDED,0)              H_SPECIAL_YK_BO     ,   /*연금보험*/
            NVL(NPENDED,0)             H_PERSON_SAVE       ,   /*연금저축*/
            0                          H_SGONG_JOHAP       ,   /*납세조합*/
            NVL(LSTKDED,0)             H_SGONG_JUNGKEN     ,   /*증권저축*/ 
            NVL(B.BLDCODE, '2C')       H_GUNMU             ,   /*근무지--널이면 본사로 : 급여마스터에서 가져가도록 수정. 2006.10.09*/
            NVL(FOREIGNDED,0)          H_SGONG_FOREIGNER   ,   /*Dsa2000 2004.01.29. 세법변경에 따른 칼럼 추가.(외국인 추가공제)*/
            NVL(BCORPNAME,'')          H_CORPNAME          ,   /*2004년 귀속  dsa2000  2005.02.add*/
            NVL(BCORPNO,'')            H_CORPNO            ,   /*2004년 귀속  dsa2000  2005.02. add*/         
            NVL(BPAYSUM,0)             H_PAYSUM            ,   /*2004년 귀속  dsa2000  2005.02. add*/         
            NVL(BBONSUM,0)             H_BONSUM            ,   /*2004년 귀속  dsa2000  2005.02. add*/         
            NVL(BMEDAMT,0)             H_MEDAMT            ,   /*2004년 귀속  dsa2000  2005.02. add*/         
            NVL(BHIREAMT,0)            H_HIREAMT           ,   /*2004년 귀속  dsa2000  2005.02. add*/         
            NVL(BANUAMT,0)             H_ANUAMT            ,   /*2004년 귀속  dsa2000  2005.02. add*/                  
            NVL(FAMI70NO,0)            H_FAMI70NO          ,   /*추가공제_경로우대 70세이상_수*/          
            NVL(SPECADDNO,0)           H_SPECADDNO         ,   /*특별추가공제(결혼.장례.이사비 공제 건수)*/  
            NVL(SPECADDDED,0)          H_SPECADDDED        ,   /*특별추가공제(결혼.장례.이사비 공제액)*/  
            NVL(SHOSAMT,0)             H_SHOSAMT           ,   /*본인의료비*/       
            NVL(HOUSEINTAMT2,0)        H_HOUSEINTAMT2      ,   /*주택자금이자상환액2*/         
            null                       CONFM               ,   /*확정구분*/                                
            null                       ZCONF_DATE          ,   /*신고일*/                                  
            null                       WT_QSCOD            ,   /*원천세키*/                                
            'I'                        MODE_FLAG           ,   /*EAI추출구분(I,U,D)*/
            'N'                        EAI_FLAG            ,   /*EAI추출여부*/
            null                       EAI_DATE                /*EAI추출시간*/
       FROM PKHRTHIS A, PKHRYHIS Y, PKMPMAS B, 
         /*   PYCDEPT C, PYCDEPT D 20181204 JHG 조직개편 */
                  (Select Orgnum, Deptcode, Fincode, Substr(Tribegb,1,1) Tribegb From Pycdept ) XX,  /* 20181204 JHG 조직개편 */  
                  (Select Orgnum, Deptcode, Fincode, Substr(Tribegb,1,1) Tribegb From Pycdept ) YY   /* 20181204 JHG 조직개편 */ 
      WHERE A.EMPNO   = B.EMPNO
        and A.empno   = Y.empno
        and A.subdate like :v_paydate||'%' 
		    and A.retdate = Y.retdate /*2013.03.06. hjku. 퇴직근로정산이나 퇴직정산이 두개이상인 대상자 전송오류 발생하여 수정 정문선M*/
/*		and a.paysum <> 280150
		and a.paysum <> 434751     임시 주석 KTH   */
       /* AND A.ORGNUM   = C.ORGNUM
        AND A.DEPTCODE = C.DEPTCODE         
        AND B.ORGNUM   = D.ORGNUM
        AND B.JOBDEPT  = D.DEPTCODE  20181204 JHG 조직개편  */
        AND (XX.Deptcode = B.Deptcode AND XX.ORGNUM = B.ORGNUM)  /* 20181204 JHG 조직개편 */  
        AND (YY.Deptcode = B.Jobdept  AND YY.ORGNUM = B.ORGNUM)  /* 20181204 JHG 조직개편 */
        AND TAXGROSS  <>  0;
     
      
     if  (sqlca.sqlcode != 0) 
     {     /* 에러이면 */
          sprintf(log_buff, "ORA-%05d - Insert EAI_WORKTAX Error--------\n", sqlca.sqlcode);
          printf(log_buff, "ORA-%05d - Insert EAI_WORKTAX Error--------\n", sqlca.sqlcode);
          WriteLog(log_buff);
          Write_batlog(seqno++, log_buff);   
          EXEC SQL ROLLBACK WORK;
          return(-1);   
     } 
     else 
     {    /* 에러가 아니면 */
          v_cnt_line = sqlca.sqlerrd[2];
          WriteLog("Insert EAI_RETIRETAX Success\n");
          sprintf(log_buff, "Process Count : %d\n", v_cnt_line);
          WriteLog(log_buff);
          Write_batlog(seqno++, log_buff);   
          EXEC SQL COMMIT WORK;
     }
     
     /******************************************************************************************/   
     EXEC SQL                
     SELECT SUM(NVL(Y.YINTAX,0)),  SUM(NVL(Y.YJUTAX,0)),  SUM(NVL(Y.YNONGTAX,0)),  SUM(NVL(Y.yintax,0))
       INTO :v_amtin,           :v_amtju,            :v_amtnong,            :v_amttot
       FROM PKhrthis A ,PKMPMAS B, PKHRYHIS Y
      WHERE A.subdate  like :v_paydate||'%'
        AND A.EMPNO = B.EMPNO
        AND A.EMPNO = Y.EMPNO ;
     
            
     if   (sqlca.sqlcode != 0) 
     {    /* 에러이면 */
          v_cnt_line = 0;
          sprintf(log_buff, "ORA-%05d - Fetch 통계_Error\n", sqlca.sqlcode);
          printf("ORA-%05d - Fetch 통계_Error\n", sqlca.sqlcode);
          WriteLog(log_buff);
          Write_batlog(seqno++, log_buff);   
          EXEC SQL ROLLBACK WORK;   
          return(-1);
     }          
     
     WriteLog("Insert ERP EAI_RETIRETAX Success\n");
     sprintf(log_buff, "Process Count : %d\n", v_cnt_line);
     WriteLog(log_buff);
     Write_batlog(seqno++, log_buff);   
     
     EXEC SQL COMMIT WORK;
     WriteLog("< Write EAI_RETIRETAX Ending >-------------------------\n");
                    
     return(0);
}

int Check_date()
{
   EXEC SQL
   SELECT nvl(subdate,'000000'), SUBSTR(subdate,1,4),  SUBSTR(subdate, 5, 2)
     INTO :v_yyyymm, :v_yyyy, :v_mm
     FROM PKHRTHIS
    WHERE subdate like :v_paydate||'%'
      AND ROWNUM = 1;
    
   if ( sqlca.sqlcode == -1403 )
   { 
       return(-1);
   }
   
   if ( sqlca.sqlcode != 0 )
   { 
       return(1);
   }              
   
   return(0);
} 

/*=== dsa2000 2004.10. Rexec대체 서비스를 위한 Write_batlog()  ===================*/
int  Write_batlog(int seqno, char *message)
{ 
     EXEC SQL AT log_db 
     INSERT INTO PYBATLOG
     VALUES (:log_rundate, :log_progid, :seqno, :log_writeman, :message);

     if ((sqlca.sqlcode != 1403) && (sqlca.sqlcode != 0)) 
     { 
          printf("ERROR_CODE : %d, pybatlog Insert Error. \n", sqlca.sqlcode);
          return(-1);
     }                        
                        
     EXEC SQL AT log_db COMMIT WORK ; 
}