/* ======================= Program Header =====================================
 PROGRAM-NAME   : PKMP2ERP1(INSA->ERP Interface Program)
 PROGRM-Decription : 급여테이블을 읽어서 ERP쪽 Interface 테이블에 Insert
 USAGE          : pkmp2erp1 DBUserID 작업자사번 지급년월
 SYSTEM-NAME    : 급여
 SUBSYSTEM-NAME : 재직자 근로소득(급여)
 Programmer     : 이랑교
 Version        : 1.030
 Date           : 1999.03.10                                     

Update Contents
   Version    date(yy.mm.dd)     programmer      description
   1.00       1999.02.08         송두호          최초작성 
   1.03       1999.03.10         이랑교		hit 조형래 요청사항
						h_deday = 지급년월+'25'  l -al pkmp2erp1*
   1.10       2000.02.11         유효성		휴직자 부서코드조정 
   2.00       2002.01.02         유효성         소득세법 개정에 따른 필드추가
                                                (표준공제, 연금보험, 연금저축,납세조합, 증권저축)
   3.00       2002.01.16         유효성         근무지 필드 추가                                                       
                                                 -개인별 인사마스터의 근무지를 넘긴다.
   4.00       2002.07.03         유효성         전(2002-2355)
                                                 HIT_CRTL의 회계일자(YM_ACCT)를 H_JIGUB_YMD컬럼과 같이 지급일로 수정                                                 
              2004.01.29.        강륜종(dsa2000) 세법변경에 따른 칼럼 추가.(H_SGONG_FOREIGNER) 
   4.01       2004.02.19         강륜종          Oracle8i 업그레이드에 의한 관련 라이브러리 업그레이드.
   5.00       2004.04.26         강륜종          MIS2 장비에 맞게 경로 및 환경 설정...  
   10.00      2004.11.     강륜종(dsa2000) Rexec대체 서비스를 위한 수정작업. 
============================================================================= */

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <ctype.h>
#include <time.h>
#include "hinsa_macro.h"
#include "hinsa_string.h"
#include "hinsa_date.h"
#include "hinsa_log.h"
#include "hinsa_oracle.h"
#include "hinsa_common.h"

void CreateLog(void);
void InitVariables(void);
void Initialize(void);
void WriteLog(char *message);
int  WriteControl(int gubun);
int  WriteEmployee(void);
int  Check_date(void);


EXEC SQL INCLUDE sqlca;

EXEC SQL BEGIN DECLARE SECTION;
/****************************************************************************** 
  Interface Control Table Variables
******************************************************************************/ 
char	v_dt_create[9];			/* 생성일자 */
char	v_cd_data[5] = "TX04";		/* Employee Data Code */
int	v_no_crt_srl = 0;		/* 생성 일련번호 */
char	v_sscode[3+1] = "A10";		/* 일반/계약직구분 */
/*2001-11-06 퇴직자 근로소득세 'A20'에서 'A15'로 변경
char	v_sscodeys[3+1] = "A20";	 연말정산,퇴직정산 */
char	v_sscodeys[3+1] = "A15";	/* 연말정산,퇴직정산 */
char	v_sscodeil[3+1] = "A40";	/* 사원급여/계약직급여구분:3개월미만 */
char	v_ym_acct[7];			/* 회계년월 */
int	v_cnt_line = 0;			/* Line건수 */ 
char	v_ph_proc[2] = "A";		/* 처리단계 */
char	v_st_proc[2] = "P";		/* 처리상태 (P:Processing, N:Normal Termination, A:Abnormal Termination) */
char	v_cl_data_use[2] = "A";		/* Data 활용구분 */
char	v_id_crt_user[5];		/* 생성 UserID */
char	v_paydate[7];                   /* 지급년월 */

char	v_orgnum[4];                   /* 휴직조직차수 */
char	v_deptcode[6];                   /* 휴직부서코드 */

char	v_yyyymm[7];                    /* 지급년월 */
char    v_yyyy[5]; 			/* 지급년 */
char    v_mm[3];			/* 지급월 */
double   v_amttot = 0;                   /* 과세표준금액총액   */
double   v_amtin  = 0;			/* 결정소득세총액   */
double   v_amtju  = 0;			/* 결정주민세총액   */
double   v_amttot1 = 0;                   /* 과세표준금액총액   */
double   v_amtin1  = 0;			/* 결정소득세총액   */
double   v_amtju1  = 0;			/* 결정주민세총액   */
double   v_amttot2 = 0;                   /* 과세표준금액총액   */
double   v_amtin2  = 0;			/* 결정소득세총액   */
double   v_amtju2  = 0;			/* 결정주민세총액   */

/****************************************************************************** 
  Interface Employee Table Variables
******************************************************************************/ 
char	v_rst_validation[2] = "A";

EXEC SQL END   DECLARE SECTION;

/****************************************************************************** 
  Other Variables
******************************************************************************/ 
/*char	logdir[100] = "/hper/insa/ERP/log/";*/
char    *HOMEDIR;
char	logfile[40];
char	logfile_fullname[140];
int	id;
char	buff[1000];

/*=== dsa2000 2004.11. Rexec대체 서비스를 위한 =============*/
char    log_rundate[16]     = ""; 
char    log_progid[16]      = "";
char    log_writeman[5]     = "";
char    log_buff[100]       = "";
int     seqno = 0; 
/***** Log File Pointer *****/
FILE *fp;	

void main(int argc, char *argv[])
{
        if (argc != 7) {      /* pkmp2erp1 200311 H07 EK140 D006 pkmp2erp1 2004110100000*/
	   printf("[Usage] : pkmpyserp 1.지급년월(YYYYMM) 2.휴직자orgnum 3.휴직자deptcode \n");
	   printf("[Usage] :           4.작업자 5.progid 6.시작시간\n");
	   fclose(fp);
	   exit(1);
	}
	
	sprintf(v_paydate,     argv[1]);        /* 지급년월   */     
	sprintf(v_orgnum,      argv[2]);        /* 휴직자 조직차수   */     
	sprintf(v_deptcode,    argv[3]);        /* 휴직자 부서코드   */     	        
	sprintf(v_id_crt_user, argv[4]);	/* 작업자사번 */
	
	
	/* Dsa2000  2004.02.26.	**********************************/
	/* DB_connect(id,0); */
	hinsa_log_print(0,"ERP 인터페이스 시작...");        
        hinsa_db_connect();  /*DB Connect 실시..*/
	/*dsa2000  수정..End......................................*/
	
	/*=== dsa2000 2004.11. Rexec대체 서비스를 위한 =============*/
	strcpy(log_writeman, argv[4]);
	strcpy(log_progid,   argv[5]);
	strcpy(log_rundate,  argv[6]);	
		
	EXEC SQL DECLARE log_db DATABASE;    
	hinsa_log_db_connect();
	/*========================================================*/
	
	InitVariables();		/* 변수 초기화 */
	
	Initialize();			/* 초기화 루틴 */

	CreateLog();
	
	printf("작업 시작......................................... >\n");
	printf("기준년월 : %s \n", v_paydate);
	
        if(Check_date() != 0) {
    	        sprintf(buff, "지급년월에 해당하는 자료가 없습니다. %s\n", v_paydate);
		WriteLog(buff);
		fclose(fp);
                printf("지급년월에 해당하는 자료가 없습니다.\n");
                exit(1);
        }     

	if (WriteControl(0) == -1) {		/* 초기값 세팅 */
		fclose(fp);
		exit(1);
	}        	
	
	/*=========================================================================*/
	if (WriteEmployee() == -1)
	{
		sprintf(log_buff, "ERROR ====== [작업 실패] =====\n");
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		WriteControl(2);	/* 비정상종료 */
		error_quit("ERROR ====== [작업 실패] =====\n");		/*Dsa2000*/
	}        
	else
	{
		WriteLog("< Program End......................................... >\n");
		fclose(fp);
        	printf("총  건  수   : %d\n", v_cnt_line);
		printf("과세표준금액 : %0.0f\n", v_amttot);
		printf("소득세합계   : %0.0f\n", v_amtin);
		printf("주민세합계   : %0.0f\n", v_amtju);
	
		sprintf(log_buff, "총  건  수   : %d\n", v_cnt_line);
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		sprintf(log_buff, "과세표준금액 : %0.0f\n", v_amttot);
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		sprintf(log_buff, "소득세합계   : %0.0f\n", v_amtin);
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		sprintf(log_buff, "주민세합계   : %0.0f\n", v_amtju);
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		
			
		sprintf(log_buff, "OK ====== [작업 완료] =====\n");
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		WriteControl(1); 	/* 정상종료 */	
		hinsa_exit(0,"OK ====== [작업 완료] =====\n");		/*Dsa2000*/
	}	
}


void CreateLog()
{
	/*2004.04.26 logdir => HOMEDIR*/
	HOMEDIR = hinsa_home();
	strcat(HOMEDIR,"/log/ERPlog/");
	
	/* 로그파일명을 세팅 */
	sprintf(logfile_fullname, "%spkmp2erp1%s%02d.log", HOMEDIR, v_dt_create, v_no_crt_srl); 
	/* 로그파일 오픈 */
	fp = fopen(logfile_fullname, "w+");

	if (fp == NULL) {
		printf("로그파일오픈(%s) 에러\n", logfile_fullname);
		exit(1);
	}
}



void InitVariables(void)
{
	memset(logfile, NULL, sizeof(logfile));
	memset(logfile_fullname, NULL, sizeof(logfile_fullname));

	memset(v_dt_create, NULL, sizeof(v_dt_create));
	memset(v_ym_acct, NULL, sizeof(v_ym_acct));
}

void Initialize(void)
{
/*===========================================================================	
4.00    2002.07.03         유효성         전(2002-2355)
        HIT_CRTL의 회계일자(YM_ACCT)를   H_JIGUB_YMD컬럼과 같이 지급일로 수정                                                 
============================================================================= */
/*	EXEC SQL 
	SELECT	TO_CHAR(SYSDATE, 'YYYYMMDD') DT_CREATE,  
		TO_CHAR(SYSDATE, 'YYYYMM') YM_ACCT	
	INTO    :v_dt_create, :v_ym_acct
	FROM	DUAL; */	
	
	sprintf(v_ym_acct, v_paydate );
	
	EXEC SQL 
	SELECT	TO_CHAR(SYSDATE, 'YYYYMMDD') DT_CREATE
	INTO   	:v_dt_create
	FROM	DUAL;

	if (sqlca.sqlcode != 0)
	{
		printf("ORA-%05d - 현재날짜 가져오기  Error\n", sqlca.sqlcode);
		fclose(fp);
		exit(1);
	}	
	
	EXEC SQL 
	SELECT	NVL(MAX(NO_CRT_SRL),0) /*MAX(NO_CRT_SRL)*/
	INTO	:v_no_crt_srl	
	FROM	HIT_CTRL@HAIS 	/*
	FROM	HIT_CTRL_TEST   /* 테스트시에 사용 */
	WHERE	DT_CREATE = TO_DATE(:v_dt_create, 'YYYYMMDD')
	  AND	CD_DATA = :v_cd_data;
	
	if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != -1403) && (sqlca.sqlcode != -1405)) {
		printf("ORA-%05d - MAX Seril# 가져오기  Error\n", sqlca.sqlcode);
		fclose(fp);
		exit(1);
	} 
	v_no_crt_srl++;	/* 현재날짜의 생성일련번호 + 1 */
}

void WriteLog(char *message)
{
	fprintf(fp, "%s", message);
}

int WriteControl(int gubun)
{
	sprintf(buff, "< WriteControl Starting (Gubun : %d) >----------------\n", gubun);
	
	if (gubun == 1)
		sprintf(v_st_proc, "N");
	else if (gubun == 2)
		sprintf(v_st_proc, "A");

	WriteLog(buff);
	sprintf(buff, "v_dt_create : (%s)\n", v_dt_create);
	WriteLog(buff);
	sprintf(buff, "v_cd_data : (%s)\n", v_cd_data);
	WriteLog(buff);
	sprintf(buff, "v_no_crt_srl : (%d)\n", v_no_crt_srl);
	WriteLog(buff);
	sprintf(buff, "v_ym_acct : (%s)\n", v_ym_acct);
	WriteLog(buff);
	sprintf(buff, "v_ph_proc : (%s)\n", v_ph_proc);
	WriteLog(buff);
	sprintf(buff, "v_st_proc : (%s)\n", v_st_proc);
	WriteLog(buff);
	sprintf(buff, "v_cl_data_use : (%s)\n", v_cl_data_use);
	WriteLog(buff);
	sprintf(buff, "v_id_crt_user : (%s)\n", v_id_crt_user);
	WriteLog(buff);
	sprintf(buff, "v_cnt_line : (%d)\n", v_cnt_line);
	WriteLog(buff);

	if (gubun == 0) {	/* 작업시작시 Control Table Insert */
		
		EXEC SQL
		INSERT INTO HIT_CTRL@HAIS   /*
		INSERT INTO HIT_CTRL_TEST   /* 테스트시에 사용 */
			(DT_CREATE, CD_DATA, NO_CRT_SRL, YM_ACCT,
			PH_PROC, ST_PROC, CL_DATA_USE, ID_CRT_USER)
		VALUES	(TO_DATE(:v_dt_create, 'YYYYMMDD'), 
			:v_cd_data, :v_no_crt_srl, :v_ym_acct,
			:v_ph_proc, :v_st_proc, :v_cl_data_use, :v_id_crt_user);

	} else if (gubun == 1) {	/* 정상종료시 Control Table Update */
	
		EXEC SQL
		UPDATE	HIT_CTRL@HAIS  /*
		UPDATE HIT_CTRL_TEST   /* 테스트시에 사용 */
		SET	CNT_LINE = :v_cnt_line,		/* 처리건수 */
			ST_PROC = :v_st_proc,		/* 처리상태 "N" */	
                        AMT_TOT = :v_amttot,            /* 과세표준금액총액 */
			DT_CRT_COMP = SYSDATE		/* 작업완료일자 */
		WHERE	DT_CREATE  = TO_DATE(:v_dt_create, 'YYYYMMDD')
		  AND	CD_DATA    = :v_cd_data
		  AND	NO_CRT_SRL = :v_no_crt_srl;

	} else if (gubun == 2) {	/* 비정상종료시 Control Table Update */

		EXEC SQL
		UPDATE	HIT_CTRL@HAIS  /*
		UPDATE HIT_CTRL_TEST   /* 테스트시에 사용 */
		SET	ST_PROC = :v_st_proc,	/* 처리상태를 "A"로 세팅 */	
                        AMT_TOT = :v_amttot     /* 총액 */
		WHERE	DT_CREATE = TO_DATE(:v_dt_create, 'YYYYMMDD')
		  AND	CD_DATA = :v_cd_data
		  AND	NO_CRT_SRL = :v_no_crt_srl;

	}

	if (sqlca.sqlcode != 0) {
		sprintf(log_buff, "ORA-%05d - Control Table Error ( Gubun : %d )\n",sqlca.sqlcode, gubun);
		WriteLog(log_buff);
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/

		EXEC SQL ROLLBACK WORK;
		printf("Fail Program End(Control Table Error)........................ >\n");
		return(-1);
	} else {
		sprintf(log_buff, "< WriteControl Ending (Gubun : %d) >------------------\n", gubun);
		WriteLog(log_buff);
		
		EXEC SQL COMMIT WORK;

		if (gubun == 1) 
		{
			printf("OK Program End......................................... >\n");
		}			
		else if (gubun == 2)
		{
			printf("Fail Program End......................................... >\n");
		}			

		return(0);
	}
}

int WriteEmployee(void)
{
	WriteLog("< Write HTX_V_VAT04 Starting >-------------------------------\n");

	sprintf(buff, "v_dt_create : (%s)\n", v_dt_create);
	WriteLog(buff);
	sprintf(buff, "v_cd_data : (%s)\n", v_cd_data);
	WriteLog(buff);
	sprintf(buff, "v_no_crt_srl : (%d)\n", v_no_crt_srl);
	WriteLog(buff);
	sprintf(buff, "v_rst_validation : (%s)\n", v_rst_validation);
	WriteLog(buff);


	EXEC SQL INSERT INTO HTX_V_VAT04 (
	DT_CREATE           ,
	CD_DATA             ,
	NO_CRT_SRL          ,
	H_YEAR              ,
	H_MONTH             ,
	H_SSCODE	    ,
	H_JIGUB_YMD	    ,
	H_UNIT	            ,
	H_DEPT	            ,
	H_EMPNO	            ,
	H_JUMIN	            ,
	H_ALIEN	            ,
	H_JOSEO             ,
	H_REGISTER          ,
	H_BUNRI             ,
	H_NAME              ,
	H_POSTNO            ,
	H_ADDRESS           ,
	H_KSYMD_FROM        ,
	H_KSYMD_TO          ,
	H_KMYMD_FROM        ,
	H_KMYMD_TO          ,
	H_JOO_PAY           ,
	H_JOO_BONUS         ,
	H_JOO_INJUNG        ,
	H_JOO_TEMP1         ,
	H_JOO_TEMP2         ,
	H_JOO_TOTAL         ,
	H_FREE_OVERSEA      ,
	H_FREE_NIGHT        ,
	H_FREE_TECH         ,
	H_FREE_TEMP1        ,
	H_FREE_TEMP2        ,
	H_FREE_TEMP3        ,
	H_FREE_TOTAL        ,
	H_WOLJUNG           ,
	H_BASE_PAY          ,
	H_LABOR_GONG        ,
	H_LABOR_PAY         ,
	H_BASE_ME           ,
	H_BASE_MATE         ,
	H_BASE_SUPPORT_SU   ,
	H_BASE_SUPPORT_MONEY,
	H_BASE_TEMP1        ,
	H_BASE_TEMP2        ,
	H_BASE_TEMP3        ,
	H_BASE_TEMP4        ,
	H_BASE_TEMP5        ,
	H_BASE_TEMP6        ,
	H_ADD_OLD_SU        ,
	H_ADD_OLD_MONEY     ,
	H_ADD_JANG_SU       ,
	H_ADD_JANG_MONEY    ,
	H_ADD_SON_SU        ,
	H_ADD_SON_MONEY     ,
	H_ADD_LADY          ,
	H_ADD_TEMP1         ,
	H_ADD_TEMP2         ,
	H_ADD_TEMP3         ,
	H_ADD_TEMP4         ,
	H_ADD_TEMP5         ,
	H_ADD_TEMP6         ,
	H_SOSUGONG          ,
	H_SPECIAL_INSURANCE ,
	H_SPECIAL_MEDICAL   ,
	H_SPECIAL_EDUCATE   ,
	H_SPECIAL_HOUSE     ,
	H_SPECIAL_DONATE    ,
	H_SPECIAL_SIN       ,
	H_SPECIAL_TEMP1     ,
	H_SPECIAL_TEMP2     ,
	H_SPECIAL_TEMP3     ,
	H_SPECIAL_TEMP4     ,
	H_SPECIAL_TEMP5     ,
	H_SPECIAL_TEMP6     ,
	H_SPECIAL_TOTAL     ,
	H_CHAGAM            ,
	H_PERSON_GONG       ,
	H_WORKING_GONG      ,
	H_JOHAB_GONG        ,
	H_GONG_TEMP1        ,
	H_GONG_TEMP2        ,
	H_GONG_TEMP3        ,
	H_GONG_TEMP4        ,
	H_GONG_TEMP5        ,
	H_GONG_TEMP6        ,
	H_STANDARD          ,
	H_SANCHUL           ,
	H_SGONG_LABOR       ,
	H_SGONG_ASSETS      ,
	H_SGONG_HOUSE       ,
	H_SGONG_OVERSEA     ,
	H_SGONG_STOCK       ,
	H_SGONG_TEMP1       ,
	H_SGONG_TEMP2       ,
	H_SGONG_TEMP3       ,
	H_SGONG_TEMP4       ,
	H_SGONG_TEMP5       ,
	H_SGONG_TEMP6       ,
	H_SGONG_TOTAL       ,
	H_SGM_PAY           ,
	H_SGM_JOGAM         ,
	H_SGM_TEMP1         ,
	H_SGM_TEMP2         ,
	H_SGM_TEMP3         ,
	H_SGM_TEMP4         ,
	H_SGM_TEMP5         ,
	H_SGM_TEMP6         ,
	H_SGM_TOTAL         ,
	H_DECIDE_SO         ,
	H_DECIDE_NONG       ,
	H_DECIDE_JOO        ,
	H_DECIDE_TOTAL      ,
	H_NAP_JONG_SO       ,
	H_NAP_JONG_NONG     ,
	H_NAP_JONG_JOO      ,
	H_NAP_JONG_TOTAL    ,
	H_NAP_HYUN_SO       ,
	H_NAP_HYUN_NONG     ,
	H_NAP_HYUN_JOO      ,
	H_NAP_HYUN_TOTAL    ,
	H_SIL_SO            ,
	H_SIL_NONG          ,
	H_SIL_JOO           ,
	H_SIL_TOTAL         ,
	RST_VALIDATION      ,
/* ===========================================================================
   Version    date(yy.mm.dd)     programmer      description
     2.00      2002.01.02         유효성         소득세법 개정에 따른 필드추가
                                                (표준공제, 연금보험, 연금저축,납세조합, 증권저축)
   ========================================================================== */
        H_SPECIAL_STANDARD  ,
        H_SPECIAL_YK_BO     ,
        H_PERSON_SAVE       ,
        H_SGONG_JOHAP       ,
        H_SGONG_JUNGKEN     ,
/* ===========================================================================
   Version    date(yy.mm.dd)     programmer      description
     3.00       2002.01.16         유효성         근무지 필드 추가                                                       
                                                 -개인별 인사마스터의 근무지를 넘긴다.
============================================================================= */
        H_GUNMU             ,
        H_SGONG_FOREIGNER    /*Dsa2000 2004.01.29. 세법변경에 따른 칼럼 추가.(외국인 추가공제)*/        
	)	
	SELECT 
	TO_DATE(:v_dt_create, 'YYYYMMDD') DT_CREATE,         /*생성일*/
	:v_cd_data 	   CD_DATA,             	     /*자료구분*/	
	:v_no_crt_srl	   NO_CRT_SRL,           	     /*순서*/		
	:v_yyyy    	   H_YEAR,                           /*신고년*/     		
	:v_mm      	   H_MONTH,                          /*신고월*/		
	:v_sscode          H_SSCODE,	                     /*소득관리코드*/
	REPLACE(:v_paydate||'25',' ','')  H_JIGUB_YMD,       /*지급일*/	
	'000'              H_UNIT,	       		     /*사업장*/
	C.FINCODE   	   H_DEPT,	       		     /*부서*/		
	A.empno            H_EMPNO,	       		     /*사번*/		
	nvl(B.juminid, '00000000000000')  H_JUMIN,           /*주민등록번호*/
	'1'                   H_ALIEN,	                     /*내외국인 구분*/	
	'2'                   H_JOSEO,                       /*지급조서제출구분*/	
	'1'                   H_REGISTER,                    /*거주자 구분*/		
	'1'                   H_BUNRI,                       /*분리과세구분*/	
	A.korname             H_NAME,                        /*성 명*/		
	B.zipno               H_POSTNO,                      /*우편번호*/		
	SUBSTRB(B.addr,1,70)  H_ADDRESS,                     /*주소*/		
	REPLACE(:v_paydate||'01',' ','')      H_KSYMD_FROM,         /*귀속일_from*/		
	to_char(last_day(TO_DATE(paydate,'YYYYMM')),'YYYYMMDD')   H_KSYMD_TO,     /*귀속일_to*/		
	REPLACE(:v_paydate||'01',' ','')      H_KMYMD_FROM,         /*감면일_from*/             
	to_char(last_day(TO_DATE(paydate,'YYYYMM')),'YYYYMMDD')   H_KMYMD_TO,     /*감면일_to*/          	
	/*01/17/2000 1:16오후
	TAXPAYSUM          H_JOO_PAY,            주사업장-급여*/	
	NVL(PAYSUM, 0)    H_JOO_PAY,            /*주사업장-급여*/	
	0                 H_JOO_BONUS,          /*주사업장-상여*/	
	0                 H_JOO_INJUNG,         /*주사업장-인정상여*/ 	
	0                 H_JOO_TEMP1,          /*주사업장-temp1*/	
	0                 H_JOO_TEMP2,          /*주사업장-temp2*/	
	0                 H_JOO_TOTAL,          /*주사업장-total*/	
	0		  H_FREE_OVERSEA,
	0                 H_FREE_NIGHT,         /*비과세 야간근로*/	
	0                 H_FREE_TECH,          /*비과세 기술*/		
	NVL(NOTAXPAYSUM,0)       H_FREE_TEMP1,         /*비과세 temp1*/		
	0                 	 H_FREE_TEMP2,         /*비과세 temp2*/		
	0                 	 H_FREE_TEMP3,         /*비과세 temp3*/		
	NVL(NOTAXPAYSUM,0)       H_FREE_TOTAL,         /*비과세 계*/		
	NVL(TAXPAYSUM,0)         H_WOLJUNG,            /*월정급여액*/		
/*01/17/2000 1:15오후 
	NVL(TAXGROSS,0)          H_BASE_PAY,           과세대상급여	*/
	NVL(TAXPAYSUM,0)         H_BASE_PAY,           /*과세대상급여*/	
	NVL(LABINDED,0)          H_LABOR_GONG,         /*근로소득공제*/	
	NVL(LABINAMT,0)          H_LABOR_PAY,          /*근로소득급여*/	
	NVL(BASICDED,0)          H_BASE_ME,            /*기본 본인*/		
	NVL(MATEDED,0)           H_BASE_MATE,          /*기본 배우자*/		
	NVL(FAMIDED,0)/1000000   H_BASE_SUPPORT_SU,    /*기본 부양가족 수*/	
	NVL(FAMIDED,0)           H_BASE_SUPPORT_MONEY, /*기본 부양가족 액*/	
	0                 H_BASE_TEMP1,         /*기본 TEMP1*/		
	0                 H_BASE_TEMP2,         /*기본 TEMP2*/		
	0                 H_BASE_TEMP3,         /*기본 TEMP3*/		
	0                 H_BASE_TEMP4,         /*기본 TEMP4*/		
	0                 H_BASE_TEMP5,         /*기본 TEMP5*/		
	0                 H_BASE_TEMP6,         /*기본 TEMP6*/		
	NVL(SILVERDED,0)/1000000  H_ADD_OLD_SU,         /*추가 경로우대 수*/  	
	NVL(SILVERDED,0)         H_ADD_OLD_MONEY,      /*추가 경로우대 금액*/	
	NVL(OBSDED,0)/1000000    H_ADD_JANG_SU,        /*추가 장애자 수*/	
	NVL(OBSDED,0)            H_ADD_JANG_MONEY,     /*추가 장애자 금액*/	
	NVL(EDUDED,0)/1000000    H_ADD_SON_SU,         /*추가 자녀 수*/       	
	NVL(EDUDED,0)            H_ADD_SON_MONEY,      /*추가 자녀 금액*/	
	NVL(WOMANDED,0)          H_ADD_LADY,           /*추가 부녀자공제*/	
	0                 H_ADD_TEMP1,          /*추가 TEMP1*/		
	0                 H_ADD_TEMP2,          /*추가 TEMP2*/		
	0                 H_ADD_TEMP3,          /*추가 TEMP3*/		
	0                 H_ADD_TEMP4,          /*추가 TEMP4*/		
	0                 H_ADD_TEMP5,          /*추가 TEMP5*/		
	0                 H_ADD_TEMP6,          /*추가 TEMP6*/		
	0                 H_SOSUGONG,           /*소수공제액*/		
	0                 H_SPECIAL_INSURANCE,  /*특별 보험료*/		
	0                 H_SPECIAL_MEDICAL,    /*특별 의료비*/		
	0                 H_SPECIAL_EDUCATE,    /*특별 교육비*/		
	0                 H_SPECIAL_HOUSE,      /*특별 주택자금*/	
	0                 H_SPECIAL_DONATE,     /*특별 기부금*/		
	0                 H_SPECIAL_SIN,        /*특별 신용카드*/	
	0                 H_SPECIAL_TEMP1,      /*특별 TEMP1*/		
	0                 H_SPECIAL_TEMP2,      /*특별 TEMP2*/		
	0                 H_SPECIAL_TEMP3,      /*특별 TEMP3*/		
	0                 H_SPECIAL_TEMP4,      /*특별 TEMP4*/		
	0                 H_SPECIAL_TEMP5,      /*특별 TEMP5*/		
	0                 H_SPECIAL_TEMP6,      /*특별 TEMP6*/		
	0                 H_SPECIAL_TOTAL,      /*특별 계*/		
	NVL(INDED ,0)     H_CHAGAM,             /*차감소득*/		
	0                 H_PERSON_GONG,        /*개인연금 소득*/	
	0                 H_WORKING_GONG,       /*현장공제*/		
	0                 H_JOHAB_GONG,         /*조합출자공제*/	
	0                 H_GONG_TEMP1,         /*공제 TEMP1*/		
	0                 H_GONG_TEMP2,         /*공제 TEMP2*/		
	0                 H_GONG_TEMP3,         /*공제 TEMP3*/		
	0                 H_GONG_TEMP4,         /*공제 TEMP4*/		
	0                 H_GONG_TEMP5,         /*공제 TEMP5*/		
	0                 H_GONG_TEMP6,         /*공제 TEMP6*/		
	NVL(TAXINAMT,0)   H_STANDARD,           /*과세표준*/		
	NVL(CALCTAX ,0)   H_SANCHUL,            /*산출세액*/		
	NVL(LABTAXDED,0)  H_SGONG_LABOR,        /*세액공제 근로소득*/	
	0                 H_SGONG_ASSETS,       /*세액공제 재형저축*/	
	0                 H_SGONG_HOUSE,        /*세액공제 주택차입*/	
	0                 H_SGONG_OVERSEA,      /*세액공제 외국납부*/	
	0                 H_SGONG_STOCK,        /*세액공제 주식저축*/	
	0                 H_SGONG_TEMP1,        /*세액공제 TEMP1*/	
	0                 H_SGONG_TEMP2,        /*세액공제 TEMP2*/	
	0                 H_SGONG_TEMP3,        /*세액공제 TEMP3*/	
	0                 H_SGONG_TEMP4,        /*세액공제 TEMP4*/	
	0                 H_SGONG_TEMP5,        /*세액공제 TEMP5*/	
	0                 H_SGONG_TEMP6,        /*세액공제 TEMP6*/	
	NVL(LABTAXDED,0)  H_SGONG_TOTAL,        /*세액공제 TOTAL*/	
	0                 H_SGM_PAY,            /*세액감면 소득세법*/	
	0                 H_SGM_JOGAM,          /*세액감면 조감법*/	
	0                 H_SGM_TEMP1,          /*세액감면 TEMP1*/	
	0                 H_SGM_TEMP2,          /*세액감면 TEMP2*/	
	0                 H_SGM_TEMP3,          /*세액감면 TEMP3*/	
	0                 H_SGM_TEMP4,          /*세액감면 TEMP4*/	
	0                 H_SGM_TEMP5,          /*세액감면 TEMP5*/	
	0                 H_SGM_TEMP6,          /*세액감면 TEMP6*/	
	0                 H_SGM_TOTAL,          /*세액감면 TOTAL*/	
	NVL(INTAX,0)      H_DECIDE_SO,          /*결정 소득액*/		
	0                 H_DECIDE_NONG,        /*결정 농특세*/		
	NVL(JUTAX,0)      H_DECIDE_JOO,         /*결정 주민세*/		
	NVL(INTAX,0) + NVL(JUTAX,0)     H_DECIDE_TOTAL,       /*TOTAL*/		
	0                 H_NAP_JONG_SO,        /*기납부 종 소득세*/	
	0                 H_NAP_JONG_NONG,      /*기납부 종 농특세*/	
	0                 H_NAP_JONG_JOO,       /*기납부 종 주민세*/	
	0                 H_NAP_JONG_TOTAL,     /*기납부 종 TOTAL*/	
	0	          H_NAP_HYUN_SO,        /*기납부 현 소득세*/	
	0                 H_NAP_HYUN_NONG,      /*기납부 현 농특세*/	
	0                 H_NAP_HYUN_JOO,       /*기납부 현 주민세*/	
	0                 H_NAP_HYUN_TOTAL,     /*기납부 현 TOTAL*/	
	NVL(INTAX ,0)     H_SIL_SO,             /*차감징수 소득세   control sum */	
	0                 H_SIL_NONG,           /*차감징수 농특세*/   	
	NVL(JUTAX ,0)            H_SIL_JOO,            /*차감징수 주민세*/   	
	NVL(INTAX ,0)+ NVL(JUTAX,0)      H_SIL_TOTAL,          /*차감징수 TOTAL*/     
	:v_rst_validation                RST_VALIDATION,	
/* ===========================================================================
   Version    date(yy.mm.dd)     programmer      description
     2.00      2002.01.02         유효성         소득세법 개정에 따른 필드추가
                                                (표준공제, 연금보험, 연금저축,납세조합, 증권저축)
   ========================================================================== */
        NVL(SPEDED,0)     H_SPECIAL_STANDARD  ,  /*표준공제*/
        0                 H_SPECIAL_YK_BO     ,  /*연금보험*/
        0                 H_PERSON_SAVE       ,  /*연금저축*/
        0                 H_SGONG_JOHAP       ,  /*납세조합*/
        0                 H_SGONG_JUNGKEN     ,   /*증권저축*/		
/* ===========================================================================
   Version    date(yy.mm.dd)     programmer      description
     3.00       2002.01.16         유효성         근무지 필드 추가                                                       
                                                 -개인별 인사마스터의 근무지를 넘긴다.
============================================================================= */
        NVL(JOBPLACE, 'A1')   H_GUNMU      , /*근무지--널이면 본사로 */
        0                     H_SGONG_FOREIGNER  /*Dsa2000 2004.01.29. 세법변경에 따른 칼럼 추가.(외국인 추가공제)*/	        
	FROM    PYCDEPT C, PKHPHIS A ,PKMPMAS B, PIMPMAS M 
	WHERE   A.PAYDATE  = :v_paydate
	AND	A.EMPNO    = B.EMPNO	
	AND     A.EMPNO    = M.EMPNO(+) 
	AND    decode(substr(a.pstate,1,1),'7',:v_orgnum, a.orgnum) = c.orgnum
	AND    decode(substr(a.pstate,1,1),'7',:v_deptcode, a.deptcode) = c.deptcode
	UNION
	SELECT 
	TO_DATE(:v_dt_create, 'YYYYMMDD') DT_CREATE,            /*생성일*/
	:v_cd_data 	   CD_DATA,             		/*자료구분*/	
	:v_no_crt_srl	   NO_CRT_SRL,           		/*순서*/		
	:v_yyyy    	   H_YEAR,              /*신고년*/     		
	:v_mm      	   H_MONTH,             /*신고월*/		
	:v_sscodeil        H_SSCODE,	       /*소득관리코드*/
	PAYDATE      	   H_JIGUB_YMD,	       /*지급일*/	
	'000'              H_UNIT,	       /*사업장*/
	A.FINCODE   	   H_DEPT,	       /*부서*/		
	A.empno            H_EMPNO,	       /*사번*/		
	NVL(B.juminid,'00000000000000')  H_JUMIN,	       /*주민등록번호*/
	'1'                H_ALIEN,	       /*내외국인 구분*/	
	'2'                H_JOSEO,             /*지급조서제출구분*/	
	'1'                H_REGISTER,           /*거주자 구분*/		
	'1'                H_BUNRI,              /*분리과세구분*/	
	NVL(korname,'        ')   H_NAME,               /*성 명*/		
	''              H_POSTNO,             /*우편번호*/		
	SUBSTRB(addr,1,70)  H_ADDRESS,            /*주소*/			
	/*SUBSTR(paydate,1,6)||'01'      H_KSYMD_FROM,         귀속일_from		
	  paydate   H_KSYMD_TO,     귀속일_to        */	 
	to_char(add_months(to_date(SUBSTR(paydate,1,6),'YYYYMM'), -1), 'YYYYMM')||'01'       H_KSYMD_FROM,         /*귀속일_from*/	
	to_char(last_day(add_months(to_date(SUBSTR(paydate,1,6),'YYYYMM'), -1)), 'YYYYMMDD')  H_KSYMD_TO,	
	to_char(add_months(to_date(SUBSTR(paydate,1,6),'YYYYMM'), -1), 'YYYYMM')||'01'       H_KMYMD_FROM,         /*감면일_from*/             
	to_char(last_day(add_months(to_date(SUBSTR(paydate,1,6),'YYYYMM'), -1)), 'YYYYMMDD')   H_KMYMD_TO,         /*감면일_to*/          	
	TAXPAYSUM         H_JOO_PAY,            /*주사업장-급여*/	
	0                 H_JOO_BONUS,          /*주사업장-상여*/	
	0                 H_JOO_INJUNG,         /*주사업장-인정상여*/ 	
	0                 H_JOO_TEMP1,          /*주사업장-temp1*/	
	0                 H_JOO_TEMP2,          /*주사업장-temp2*/	
	0                 H_JOO_TOTAL,          /*주사업장-total*/	
	0		  H_FREE_OVERSEA,
	0                 H_FREE_NIGHT,         /*비과세 야간근로*/	
	0                 H_FREE_TECH,          /*비과세 기술*/		
	NVL(NOTAXPAYSUM,0)       H_FREE_TEMP1,         /*비과세 temp1*/		
	0                 H_FREE_TEMP2,         /*비과세 temp2*/		
	0                 H_FREE_TEMP3,         /*비과세 temp3*/		
	NVL(NOTAXPAYSUM,0)       H_FREE_TOTAL,         /*비과세 계*/		
	NVL(TAXPAYSUM,0)         H_WOLJUNG,            /*월정급여액*/		
	NVL(LABINAMT,0)          H_BASE_PAY,           /*과세대상급여*/	
	NVL(INDED,0)          H_LABOR_GONG,         /*근로소득공제*/	
	NVL(LABINAMT - INDED,0)          H_LABOR_PAY,          /*근로소득급여*/	
	0          	  H_BASE_ME,            /*기본 본인*/		
	0           	  H_BASE_MATE,          /*기본 배우자*/		
	0   		  H_BASE_SUPPORT_SU,    /*기본 부양가족 수*/	
	0           	  H_BASE_SUPPORT_MONEY, /*기본 부양가족 액*/	
	0                 H_BASE_TEMP1,         /*기본 TEMP1*/		
	0                 H_BASE_TEMP2,         /*기본 TEMP2*/		
	0                 H_BASE_TEMP3,         /*기본 TEMP3*/		
	0                 H_BASE_TEMP4,         /*기본 TEMP4*/		
	0                 H_BASE_TEMP5,         /*기본 TEMP5*/		
	0                 H_BASE_TEMP6,         /*기본 TEMP6*/		
	0  		  H_ADD_OLD_SU,         /*추가 경로우대 수*/  	
	0         	  H_ADD_OLD_MONEY,      /*추가 경로우대 금액*/	
	0    		  H_ADD_JANG_SU,        /*추가 장애자 수*/	
	0            	  H_ADD_JANG_MONEY,     /*추가 장애자 금액*/	
	0    		  H_ADD_SON_SU,         /*추가 자녀 수*/       	
	0            	  H_ADD_SON_MONEY,      /*추가 자녀 금액*/	
	0          	  H_ADD_LADY,           /*추가 부녀자공제*/	
	0                 H_ADD_TEMP1,          /*추가 TEMP1*/		
	0                 H_ADD_TEMP2,          /*추가 TEMP2*/		
	0                 H_ADD_TEMP3,          /*추가 TEMP3*/		
	0                 H_ADD_TEMP4,          /*추가 TEMP4*/		
	0                 H_ADD_TEMP5,          /*추가 TEMP5*/		
	0                 H_ADD_TEMP6,          /*추가 TEMP6*/		
	0                 H_SOSUGONG,           /*소수공제액*/		
	0	       	  H_SPECIAL_INSURANCE,  /*특별 보험료*/		
	0                 H_SPECIAL_MEDICAL,    /*특별 의료비*/		
	0                 H_SPECIAL_EDUCATE,    /*특별 교육비*/		
	0                 H_SPECIAL_HOUSE,      /*특별 주택자금*/	
	0                 H_SPECIAL_DONATE,     /*특별 기부금*/		
	0                 H_SPECIAL_SIN,        /*특별 신용카드*/	
	0                 H_SPECIAL_TEMP1,      /*특별 TEMP1*/		
	0                 H_SPECIAL_TEMP2,      /*특별 TEMP2*/		
	0                 H_SPECIAL_TEMP3,      /*특별 TEMP3*/		
	0                 H_SPECIAL_TEMP4,      /*특별 TEMP4*/		
	0                 H_SPECIAL_TEMP5,      /*특별 TEMP5*/		
	0                 H_SPECIAL_TEMP6,      /*특별 TEMP6*/		
	0		  H_SPECIAL_TOTAL,      /*특별 계*/		
	NVL(INDED ,0)     H_CHAGAM,             /*차감소득*/		
	0                 H_PERSON_GONG,        /*개인연금 소득*/	
	0                 H_WORKING_GONG,       /*현장공제*/		
	0                 H_JOHAB_GONG,         /*조합출자공제*/	
	0                 H_GONG_TEMP1,         /*공제 TEMP1*/		
	0                 H_GONG_TEMP2,         /*공제 TEMP2*/		
	0                 H_GONG_TEMP3,         /*공제 TEMP3*/		
	0                 H_GONG_TEMP4,         /*공제 TEMP4*/		
	0                 H_GONG_TEMP5,         /*공제 TEMP5*/		
	0                 H_GONG_TEMP6,         /*공제 TEMP6*/		
	NVL(TAXINAMT,0)   H_STANDARD,           /*과세표준*/		
	NVL(CALCTAX ,0)   H_SANCHUL,            /*산출세액*/		
	NVL(LABTAXDED,0)  H_SGONG_LABOR,        /*세액공제 근로소득*/	
	0                 H_SGONG_ASSETS,       /*세액공제 재형저축*/	
	0                 H_SGONG_HOUSE,        /*세액공제 주택차입*/	
	0                 H_SGONG_OVERSEA,      /*세액공제 외국납부*/	
	0                 H_SGONG_STOCK,        /*세액공제 주식저축*/	
	0                 H_SGONG_TEMP1,        /*세액공제 TEMP1*/	
	0                 H_SGONG_TEMP2,        /*세액공제 TEMP2*/	
	0                 H_SGONG_TEMP3,        /*세액공제 TEMP3*/	
	0                 H_SGONG_TEMP4,        /*세액공제 TEMP4*/	
	0                 H_SGONG_TEMP5,        /*세액공제 TEMP5*/	
	0                 H_SGONG_TEMP6,        /*세액공제 TEMP6*/	
	NVL(LABTAXDED,0)  H_SGONG_TOTAL,        /*세액공제 TOTAL*/	
	0                 H_SGM_PAY,            /*세액감면 소득세법*/	
	0                 H_SGM_JOGAM,          /*세액감면 조감법*/	
	0                 H_SGM_TEMP1,          /*세액감면 TEMP1*/	
	0                 H_SGM_TEMP2,          /*세액감면 TEMP2*/	
	0                 H_SGM_TEMP3,          /*세액감면 TEMP3*/	
	0                 H_SGM_TEMP4,          /*세액감면 TEMP4*/	
	0                 H_SGM_TEMP5,          /*세액감면 TEMP5*/	
	0                 H_SGM_TEMP6,          /*세액감면 TEMP6*/	
	0                 H_SGM_TOTAL,          /*세액감면 TOTAL*/	
	NVL(INTAX,0)      H_DECIDE_SO,          /*결정 소득액*/		
	0                 H_DECIDE_NONG,        /*결정 농특세*/		
	NVL(JUTAX,0)             H_DECIDE_JOO,         /*결정 주민세*/		
	NVL(INTAX,0) + NVL(JUTAX,0)     H_DECIDE_TOTAL,       /*TOTAL*/		
	0                 H_NAP_JONG_SO,        /*기납부 종 소득세*/	
	0                 H_NAP_JONG_NONG,      /*기납부 종 농특세*/	
	0                 H_NAP_JONG_JOO,       /*기납부 종 주민세*/	
	0                 H_NAP_JONG_TOTAL,     /*기납부 종 TOTAL*/	
	0	          H_NAP_HYUN_SO,        /*기납부 현 소득세*/	
	0                 H_NAP_HYUN_NONG,      /*기납부 현 농특세*/	
	0                 H_NAP_HYUN_JOO,      /*기납부 현 주민세*/	
	0                 H_NAP_HYUN_TOTAL,     /*기납부 현 TOTAL*/	
	NVL(INTAX ,0)     H_SIL_SO,             /*차감징수 소득세   control sum */	
	0                 H_SIL_NONG,           /*차감징수 농특세*/   	
	NVL(JUTAX ,0)            H_SIL_JOO,            /*차감징수 주민세*/   	
	NVL(INTAX ,0)+ NVL(JUTAX,0)      H_SIL_TOTAL,          /*차감징수 TOTAL*/     
	:v_rst_validation                RST_VALIDATION,
/* ===========================================================================
   Version    date(yy.mm.dd)     programmer      description
     2.00      2002.01.02         유효성         소득세법 개정에 따른 필드추가
                                                (표준공제, 연금보험, 연금저축,납세조합, 증권저축)
   ========================================================================== */
        0                 H_SPECIAL_STANDARD  ,  /*표준공제*/
        0                 H_SPECIAL_YK_BO     ,  /*연금보험*/
        0                 H_PERSON_SAVE       ,  /*연금저축*/
        0                 H_SGONG_JOHAP       ,  /*납세조합*/
        0                 H_SGONG_JUNGKEN     ,   /*증권저축*/		
/* ===========================================================================
   Version    date(yy.mm.dd)     programmer      description
     3.00       2002.01.16         유효성         근무지 필드 추가                                                       
                                                 -개인별 인사마스터의 근무지를 넘긴다.
============================================================================= */
        NVL(PLACECODE, 'A1')  H_GUNMU      , /*근무지--널이면 본사로 */        
        0                     H_SGONG_FOREIGNER  /*Dsa2000 2004.01.29. 세법변경에 따른 칼럼 추가.(외국인 추가공제)*/      
	FROM    PKHILPAY A ,PKHILHIS B, PYCDEPT C
	WHERE   SUBSTR(A.PAYDATE,1,6) LIKE  :v_paydate		
	AND	A.EMPNO  = B.EMPNO(+)
	AND     A.ORGNUM = C.ORGNUM
	AND     A.DEPTCODE = C.DEPTCODE ;

	if (sqlca.sqlcode != 0) {	/* 에러이면 */
		sprintf(log_buff, "ORA-%05d - Insert TEMP HTX_V_VAT04 Error--------\n", sqlca.sqlcode);
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		
		printf(log_buff, "ORA-%05d - Insert TEMP HTX_V_VAT04 Error--------\n", sqlca.sqlcode);
		WriteLog(log_buff);
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		EXEC SQL ROLLBACK WORK;
		return(-1);
		
	} else {			/* 에러가 아니면 */
		v_cnt_line = sqlca.sqlerrd[2];
		WriteLog("Insert TEMP HTX_V_VAT04 Success\n");
		sprintf(log_buff, "Process Count : %d\n", v_cnt_line);
		WriteLog(log_buff);
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		EXEC SQL COMMIT WORK;
	}

	EXEC SQL INSERT INTO HTX_V_VAT04@HAIS (  /*
	EXEC SQL INSERT INTO HTX_V_VAT04_TEST (  /* 테스트시에 사용 */
	DT_CREATE           ,
	CD_DATA             ,
	NO_CRT_SRL          ,
	H_YEAR              ,
	H_MONTH             ,
	H_SSCODE	    ,
	H_JIGUB_YMD	    ,
	H_UNIT	            ,
	H_DEPT	            ,
	H_EMPNO	            ,
	H_JUMIN	            ,
	H_ALIEN	            ,
	H_JOSEO             ,
	H_REGISTER          ,
	H_BUNRI             ,
	H_NAME              ,
	H_POSTNO            ,
	H_ADDRESS           ,
	H_KSYMD_FROM        ,
	H_KSYMD_TO          ,
	H_KMYMD_FROM        ,
	H_KMYMD_TO          ,
	H_JOO_PAY           ,
	H_JOO_BONUS         ,
	H_JOO_INJUNG        ,
	H_JOO_TEMP1         ,
	H_JOO_TEMP2         ,
	H_JOO_TOTAL         ,
	H_FREE_OVERSEA      ,
	H_FREE_NIGHT        ,
	H_FREE_TECH         ,
	H_FREE_TEMP1        ,
	H_FREE_TEMP2        ,
	H_FREE_TEMP3        ,
	H_FREE_TOTAL        ,
	H_WOLJUNG           ,
	H_BASE_PAY          ,
	H_LABOR_GONG        ,
	H_LABOR_PAY         ,
	H_BASE_ME           ,
	H_BASE_MATE         ,
	H_BASE_SUPPORT_SU   ,
	H_BASE_SUPPORT_MONEY,
	H_BASE_TEMP1        ,
	H_BASE_TEMP2        ,
	H_BASE_TEMP3        ,
	H_BASE_TEMP4        ,
	H_BASE_TEMP5        ,
	H_BASE_TEMP6        ,
	H_ADD_OLD_SU        ,
	H_ADD_OLD_MONEY     ,
	H_ADD_JANG_SU       ,
	H_ADD_JANG_MONEY    ,
	H_ADD_SON_SU        ,
	H_ADD_SON_MONEY     ,
	H_ADD_LADY          ,
	H_ADD_TEMP1         ,
	H_ADD_TEMP2         ,
	H_ADD_TEMP3         ,
	H_ADD_TEMP4         ,
	H_ADD_TEMP5         ,
	H_ADD_TEMP6         ,
	H_SOSUGONG          ,
	H_SPECIAL_INSURANCE ,
	H_SPECIAL_MEDICAL   ,
	H_SPECIAL_EDUCATE   ,
	H_SPECIAL_HOUSE     ,
	H_SPECIAL_DONATE    ,
	H_SPECIAL_SIN       ,
	H_SPECIAL_TEMP1     ,
	H_SPECIAL_TEMP2     ,
	H_SPECIAL_TEMP3     ,
	H_SPECIAL_TEMP4     ,
	H_SPECIAL_TEMP5     ,
	H_SPECIAL_TEMP6     ,
	H_SPECIAL_TOTAL     ,
	H_CHAGAM            ,
	H_PERSON_GONG       ,
	H_WORKING_GONG      ,
	H_JOHAB_GONG        ,
	H_GONG_TEMP1        ,
	H_GONG_TEMP2        ,
	H_GONG_TEMP3        ,
	H_GONG_TEMP4        ,
	H_GONG_TEMP5        ,
	H_GONG_TEMP6        ,
	H_STANDARD          ,
	H_SANCHUL           ,
	H_SGONG_LABOR       ,
	H_SGONG_ASSETS      ,
	H_SGONG_HOUSE       ,
	H_SGONG_OVERSEA     ,
	H_SGONG_STOCK       ,
	H_SGONG_TEMP1       ,
	H_SGONG_TEMP2       ,
	H_SGONG_TEMP3       ,
	H_SGONG_TEMP4       ,
	H_SGONG_TEMP5       ,
	H_SGONG_TEMP6       ,
	H_SGONG_TOTAL       ,
	H_SGM_PAY           ,
	H_SGM_JOGAM         ,
	H_SGM_TEMP1         ,
	H_SGM_TEMP2         ,
	H_SGM_TEMP3         ,
	H_SGM_TEMP4         ,
	H_SGM_TEMP5         ,
	H_SGM_TEMP6         ,
	H_SGM_TOTAL         ,
	H_DECIDE_SO         ,
	H_DECIDE_NONG       ,
	H_DECIDE_JOO        ,
	H_DECIDE_TOTAL      ,
	H_NAP_JONG_SO       ,
	H_NAP_JONG_NONG     ,
	H_NAP_JONG_JOO      ,
	H_NAP_JONG_TOTAL    ,
	H_NAP_HYUN_SO       ,
	H_NAP_HYUN_NONG     ,
	H_NAP_HYUN_JOO      ,
	H_NAP_HYUN_TOTAL    ,
	H_SIL_SO            ,
	H_SIL_NONG          ,
	H_SIL_JOO           ,
	H_SIL_TOTAL         ,
	RST_VALIDATION      ,
/* ===========================================================================
   Version    date(yy.mm.dd)     programmer      description
     2.00      2002.01.02         유효성         소득세법 개정에 따른 필드추가
                                                (표준공제, 연금보험, 연금저축,납세조합, 증권저축)
   ========================================================================== */
        H_SPECIAL_STANDARD  ,  /*표준공제*/
        H_SPECIAL_YK_BO     ,  /*연금보험*/
        H_PERSON_SAVE       ,  /*연금저축*/
        H_SGONG_JOHAP       ,  /*납세조합*/
        H_SGONG_JUNGKEN     ,  /*증권저축*/		
        H_GUNMU             ,  /*근무지*/
        H_SGONG_FOREIGNER      /*Dsa2000 2004.01.29. 세법변경에 따른 칼럼 추가.(외국인 추가공제)*/        
	   
	) SELECT
		DT_CREATE           ,
		CD_DATA             ,
		NO_CRT_SRL          ,
		H_YEAR              ,
		H_MONTH             ,
		H_SSCODE	    ,
		H_JIGUB_YMD	    ,
		H_UNIT	            ,
		H_DEPT	            ,
		H_EMPNO	            ,
		H_JUMIN	            ,
		H_ALIEN	            ,
		H_JOSEO             ,
		H_REGISTER          ,
		H_BUNRI             ,
		H_NAME              ,
		H_POSTNO            ,
		H_ADDRESS           ,
		H_KSYMD_FROM        ,
		H_KSYMD_TO          ,
		H_KMYMD_FROM        ,
		H_KMYMD_TO          ,
		H_JOO_PAY           ,
		H_JOO_BONUS         ,
		H_JOO_INJUNG        ,
		H_JOO_TEMP1         ,
		H_JOO_TEMP2         ,
		H_JOO_TOTAL         ,
		H_FREE_OVERSEA      ,
		H_FREE_NIGHT        ,
		H_FREE_TECH         ,
		H_FREE_TEMP1        ,
		H_FREE_TEMP2        ,
		H_FREE_TEMP3        ,
		H_FREE_TOTAL        ,
		H_WOLJUNG           ,
		H_BASE_PAY          ,
		H_LABOR_GONG        ,
		H_LABOR_PAY         ,
		H_BASE_ME           ,
		H_BASE_MATE         ,
		H_BASE_SUPPORT_SU   ,
		H_BASE_SUPPORT_MONEY,
		H_BASE_TEMP1        ,
		H_BASE_TEMP2        ,
		H_BASE_TEMP3        ,
		H_BASE_TEMP4        ,
		H_BASE_TEMP5        ,
		H_BASE_TEMP6        ,
		H_ADD_OLD_SU        ,
		H_ADD_OLD_MONEY     ,
		H_ADD_JANG_SU       ,
		H_ADD_JANG_MONEY    ,
		H_ADD_SON_SU        ,
		H_ADD_SON_MONEY     ,
		H_ADD_LADY          ,
		H_ADD_TEMP1         ,
		H_ADD_TEMP2         ,
		H_ADD_TEMP3         ,
		H_ADD_TEMP4         ,
		H_ADD_TEMP5         ,
		H_ADD_TEMP6         ,
		H_SOSUGONG          ,
		H_SPECIAL_INSURANCE ,
		H_SPECIAL_MEDICAL   ,
		H_SPECIAL_EDUCATE   ,
		H_SPECIAL_HOUSE     ,
		H_SPECIAL_DONATE    ,
		H_SPECIAL_SIN       ,
		H_SPECIAL_TEMP1     ,
		H_SPECIAL_TEMP2     ,
		H_SPECIAL_TEMP3     ,
		H_SPECIAL_TEMP4     ,
		H_SPECIAL_TEMP5     ,
		H_SPECIAL_TEMP6     ,
		H_SPECIAL_TOTAL     ,
		H_CHAGAM            ,
		H_PERSON_GONG       ,
		H_WORKING_GONG      ,
		H_JOHAB_GONG        ,
		H_GONG_TEMP1        ,
		H_GONG_TEMP2        ,
		H_GONG_TEMP3        ,
		H_GONG_TEMP4        ,
		H_GONG_TEMP5        ,
		H_GONG_TEMP6        ,
		H_STANDARD          ,
		H_SANCHUL           ,
		H_SGONG_LABOR       ,
		H_SGONG_ASSETS      ,
		H_SGONG_HOUSE       ,
		H_SGONG_OVERSEA     ,
		H_SGONG_STOCK       ,
		H_SGONG_TEMP1       ,
		H_SGONG_TEMP2       ,
		H_SGONG_TEMP3       ,
		H_SGONG_TEMP4       ,
		H_SGONG_TEMP5       ,
		H_SGONG_TEMP6       ,
		H_SGONG_TOTAL       ,
		H_SGM_PAY           ,
		H_SGM_JOGAM         ,
		H_SGM_TEMP1         ,
		H_SGM_TEMP2         ,
		H_SGM_TEMP3         ,
		H_SGM_TEMP4         ,
		H_SGM_TEMP5         ,
		H_SGM_TEMP6         ,
		H_SGM_TOTAL         ,
		H_DECIDE_SO         ,
		H_DECIDE_NONG       ,
		H_DECIDE_JOO        ,
		H_DECIDE_TOTAL      ,
		H_NAP_JONG_SO       ,
		H_NAP_JONG_NONG     ,
		H_NAP_JONG_JOO      ,
		H_NAP_JONG_TOTAL    ,
		H_NAP_HYUN_SO       ,
		H_NAP_HYUN_NONG     ,
		H_NAP_HYUN_JOO      ,
		H_NAP_HYUN_TOTAL    ,
		H_SIL_SO            ,
		H_SIL_NONG          ,
		H_SIL_JOO           ,
		H_SIL_TOTAL         ,
		RST_VALIDATION      ,
/* ===========================================================================
   Version    date(yy.mm.dd)     programmer      description
     2.00      2002.01.02         유효성         소득세법 개정에 따른 필드추가
                                                (표준공제, 연금보험, 연금저축,납세조합, 증권저축)
   ========================================================================== */
                H_SPECIAL_STANDARD  ,  /*표준공제*/
                H_SPECIAL_YK_BO     ,  /*연금보험*/
                H_PERSON_SAVE       ,  /*연금저축*/
                H_SGONG_JOHAP       ,  /*납세조합*/
                H_SGONG_JUNGKEN     ,  /*증권저축*/	
                H_GUNMU             ,  /*근무지*/
                H_SGONG_FOREIGNER      /*Dsa2000 2004.01.29. 세법변경에 따른 칼럼 추가.(외국인 추가공제)*/				    
                
	FROM	HTX_V_VAT04
	WHERE	DT_CREATE = TO_DATE(:v_dt_create, 'YYYYMMDD')
	  AND	CD_DATA = :v_cd_data
	  AND	NO_CRT_SRL = :v_no_crt_srl;

	if (sqlca.sqlcode != 0) {	/* 에러이면 */
		v_cnt_line = 0;
		sprintf(log_buff, "ORA-%05d - Insert ERP HTX_V_VAT04 Error\n", sqlca.sqlcode);
		WriteLog(log_buff);
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		EXEC SQL ROLLBACK WORK;		
		return(-1);
	} else {			/* 에러가 아니면 */
		if (v_cnt_line != sqlca.sqlerrd[2]) {
			printf("TEMP/ERP테이블에 Insert된 건수가 다릅니다.cnt%d err%d\n",
			           v_cnt_line , sqlca.sqlerrd[2]);	
			WriteLog("TEMP/ERP테이블에 Insert된 건수가 다릅니다.\n");
			
			sprintf(log_buff, "TEMP/ERP테이블에 Insert된 건수가 다릅니다.cnt%d err%d\n",
			           v_cnt_line , sqlca.sqlerrd[2]);	
			Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
			EXEC SQL ROLLBACK WORK; 
			return(-1);
		}
		
		WriteLog("Insert ERP HTX_V_VAT04 Success\n");
		sprintf(buff, "Process Count : %d\n", v_cnt_line);
		WriteLog(buff);
		EXEC SQL COMMIT WORK;

		WriteLog("< Write HTX_V_VAT04 Ending >-------------------------\n");
               
                EXEC SQL                
		SELECT  SUM(INTAX), SUM(INTAX),SUM(JUTAX)
		INTO	:v_amttot1, :v_amtin1, :v_amtju1
		FROM 	PKHPHIS A ,PKMPMAS B
		WHERE   A.PAYDATE  = :v_paydate
		AND	A.EMPNO = B.EMPNO;
	
       		
       		EXEC SQL                
		SELECT  SUM(NVL(INTAX,0)), SUM(NVL(INTAX,0)),SUM(NVL(JUTAX,0))
		INTO	:v_amttot2, :v_amtin2, :v_amtju2
		FROM 	PKHILPAY A ,PKHILHIS B
		WHERE   SUBSTR(A.PAYDATE,1,6) LIKE  :v_paydate
		AND	A.EMPNO  = B.EMPNO(+);
       		
       		v_amttot = v_amttot1 + v_amttot2;
       		v_amtin = v_amtin1 + v_amtin2;
       		v_amtju = v_amtju1 + v_amtju2;      		
       		
       		
		return(0);
	}
}

int Check_date()
{
	EXEC SQL
	SELECT  nvl(PAYDATE,'000000'), SUBSTR(PAYDATE,1,4),  SUBSTR(PAYDATE, 5, 2)
	INTO	:v_yyyymm, :v_yyyy, :v_mm
	FROM	PKHPHIS
        WHERE   PAYDATE = :v_paydate
	  AND	ROWNUM = 1;

	if ( sqlca.sqlcode == -1403 )
	{	
		return(-1);
	}
	if ( sqlca.sqlcode != 0 )
	{	
		return(1);
	}              
               return(0);
}

/*=== dsa2000 2004.10. Rexec대체 서비스를 위한 Write_batlog()  ===================*/
int Write_batlog(int seqno, char *message)
{
        EXEC SQL AT log_db 
        INSERT INTO PYBATLOG
        VALUES (:log_rundate, :log_progid, :seqno, :log_writeman, :message);

        if ((sqlca.sqlcode != 1403) && (sqlca.sqlcode != 0)) 
	{	
		printf("ERROR_CODE : %d, pybatlog Insert Error. \n", sqlca.sqlcode);
		return(-1);
	}                        
                        
        EXEC SQL AT log_db COMMIT WORK ;	
}