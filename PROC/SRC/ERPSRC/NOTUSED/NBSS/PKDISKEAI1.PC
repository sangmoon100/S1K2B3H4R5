/* ======================= Program Header =====================================
 PROGRAM-NAME      : pkdiskerp1 (INSA->ERP Interface Program)
 PROGRM-Decription : 전산매체 작성을 위한 디스켓 작성을 위해 ERP쪽 Interface 테이블에 Insert
 SYSTEM-NAME       : 재/퇴직자 연말정산결과 NBSS로 인터페이스 
 SUBSYSTEM-NAME    : SUBDATE가 아닌 RETDATE 기준으로 전송
 Programmer        : 강륜종
 Version           : 10.00
 Date              : 2004.04.13.

Update Contents
   Version    date(yy.mm.dd)  programmer   description
    10.0       2004.04.        강륜종      연말정산 결과를 1년에 한번 인터페이스 하기위해 
                                           pkmpyserp.pc 프로그램에 전근무지 관련 칼럼을 추가하여 이 프로그램을 만듬.
    11.00      2004.04.26      강륜종      MIS2 장비에 맞게 경로 및 환경 설정...
    12.00      2005.01.17      dsa2000     Rexec대체 서비스를 위한 수정작업. 
    13.00      2005.02.04.     dsa2000     2004년 귀속 연말정산 칼럼 반영.     
=============================================================================== */
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <ctype.h>
#include <time.h>
#include "hinsa_macro.h"
#include "hinsa_string.h"
#include "hinsa_date.h"
#include "hinsa_log.h"
#include "hinsa_oracle.h"
#include "hinsa_common.h"

void CreateLog(void);
void InitVariables(void);
void Initialize(void);
void WriteLog(char *message);
int  WriteEmployee(void);

EXEC SQL INCLUDE sqlca;

EXEC SQL BEGIN DECLARE SECTION;
/****************************************************************************** 
  Interface Control Table Variables
******************************************************************************/ 
char	v_dt_create[9];			/* 생성일자 */
char	v_cd_data[5]    = "TX09";	/* Employee Data Code */
int	v_no_crt_srl    = 0;		/* 생성 일련번호 */
char	v_sscode[3+1]   = "A10";	/* 일반/계약직구분 */
char	v_sscodeys[3+1] = "A20";	/* 연말정산,퇴직정산 */
char	v_sscodeil[3+1] = "A40";	/* 사원급여/계약직급여구분:3개월미만 */
char	v_ym_acct[7];			/* 회계년월 */
int	v_cnt_line = 0;			/* Line건수 */ 
char	v_ph_proc[2] = "A";		/* 처리단계 */
char	v_st_proc[2] = "P";		/* 처리상태 (P:Processing, N:Normal Termination, A:Abnormal Termination) */
char	v_cl_data_use[2] = "A";		/* Data 활용구분 */
char	v_id_crt_user[5];		/* 생성 UserID */
char	v_paydate[7];                   /* 지급년월 */
char    v_yyyy[5]; 			/* 지급년 */
double  v_amttot = 0;                   /* 과세표준금액총액   */
double  v_amtin  = 0;			/* 결정소득세총액   */
double  v_amtju  = 0;			/* 결정주민세총액   */
double  v_amtnong  = 0;  		/* 결정주민세총액   */
char	v_orgnum[4];                    /* 휴직조직차수 dsa2000 */  
char	v_deptcode[6];                  /* 휴직부서코드 dsa2000 */

/****************************************************************************** 
  Interface Employee Table Variables
******************************************************************************/ 
char	v_rst_validation[2] = "A";

EXEC SQL END   DECLARE SECTION;

/****************************************************************************** 
  Other Variables
******************************************************************************/ 
/*char	logdir[100] = "/hper/insa/ERP/log/";*/
char    *HOMEDIR;
char	logfile[40];
char	logfile_fullname[140];
int	id;

/*=== dsa2000 2004.11. Rexec대체 서비스를 위한 =============*/
char    log_rundate[16]     = ""; 
char    log_progid[16]      = "";
char    log_writeman[5]     = "";
char    log_buff[200]       = "";
int     seqno = 0; 

/***** Log File Pointer *****/
FILE *fp;	

void main(int argc, char *argv[])
{
        if (argc != 7) {  /* pkdiskeai1 2006 H12 GNGG0 1821 pkdiskeai1 20070215 */ 
		printf("사용법 : pkdiskeai1 1.지급년(YYYY) 2.휴직자orgnum 3.휴직자deptcode \n");
		printf("사용법 :                 4.작업자 5.progid 6.시작시간\n");
		fclose(fp);
		exit(1);
	}
        
	/* DB 접속 */
	hinsa_log_print(0,"ERP 인터페이스 시작...");        
        hinsa_db_connect();  /*DB Connect 실시..*/
	
	/*=== dsa2000 2005.01. Rexec대체 서비스를 위한 =============*/
	strcpy(log_writeman, argv[4]);
	strcpy(log_progid,   argv[5]);
	strcpy(log_rundate,  argv[6]);	
		
	EXEC SQL DECLARE log_db DATABASE;    
	hinsa_log_db_connect();
	/*========================================================*/
	
	InitVariables();		/* 변수 초기화 */
	
	Initialize();			/* 초기화 루틴 */
		
	CreateLog();
	
	sprintf(v_yyyy,         argv[1]);        /* 지급년   */     
        sprintf(v_orgnum,       argv[2]);        /* 휴직자 조직차수  dsa2000  2004.01.29 추가*/     
	sprintf(v_deptcode,     argv[3]);        /* 휴직자 부서코드  dsa2000  2004.01.29 추가*/     
	sprintf(v_id_crt_user,  argv[4]);	 /* 작업자사번 */
       	
	if (WriteEmployee() == -1)
            error_quit("ERROR ===== [작업 실패] ===== \n");    
	else
	{
	    WriteLog("< Program End..................................... >\n");
	    fclose(fp);
            printf("총  건  수    : %d\n", v_cnt_line);
            printf("차감소득세    : %0.0f\n", v_amttot);
	    printf("소득세합계    : %0.0f\n", v_amtin);
	    printf("주민세합계    : %0.0f\n", v_amtju);
	    printf("농특세합계    : %0.0f\n", v_amtnong);
	    		
	    sprintf(log_buff, "총  건  수    : %d\n", v_cnt_line);
	    Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
	    sprintf(log_buff, "차감소득세    : %0.0f\n", v_amttot);
	    Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
	    sprintf(log_buff, "소득세합계    : %0.0f\n", v_amtin);
	    Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
	    sprintf(log_buff, "주민세합계    : %0.0f\n", v_amtju);
	    Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
	    sprintf(log_buff, "농특세합계    : %0.0f\n", v_amtnong);
	    Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
	    
	    Write_batlog(seqno++, "OK  ===== [작업 완료] ===== \n");   /*dsa2000 Rexec 대체*/	
	    hinsa_exit(0,"OK  ===== [작업 완료] ===== \n");	    
	}	
}

void InitVariables(void)
{
	memset(logfile, NULL, sizeof(logfile));
	memset(logfile_fullname, NULL, sizeof(logfile_fullname));
	memset(v_dt_create, NULL, sizeof(v_dt_create));
	memset(v_ym_acct, NULL, sizeof(v_ym_acct));
}

void Initialize(void)
{
	EXEC SQL 
	SELECT	TO_CHAR(SYSDATE, 'YYYYMMDD') DT_CREATE,  
		TO_CHAR(SYSDATE, 'YYYYMM')   YM_ACCT	
	INTO   	:v_dt_create, :v_ym_acct
	FROM	DUAL;

	if (sqlca.sqlcode != 0)
	{
		printf("ORA-%05d - 현재날짜 가져오기  Error\n", sqlca.sqlcode);
		fclose(fp);
		exit(1);
	}

	EXEC SQL 
	SELECT	NVL(MAX(NO_CRT_SRL),0)
	INTO	:v_no_crt_srl	
	FROM	EAI_YDISK22
	WHERE	DT_CREATE = TO_DATE(:v_dt_create, 'YYYYMMDD')
	  AND	CD_DATA   = :v_cd_data;

	if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != -1403) && (sqlca.sqlcode != -1405)) 
	{
		printf("ORA-%05d - MAX Seril# 가져오기  Error\n", sqlca.sqlcode);
		Write_batlog(seqno++, "MAX Seril# 가져오기  Error\n");   /*dsa2000 Rexec 대체*/	
		fclose(fp);
		exit(1);
	} 
	
	v_no_crt_srl++;	   /* 생성일련번호 + 1 */
}

void CreateLog()
{	/*2004.04.26 logdir => HOMEDIR*/
	HOMEDIR = hinsa_home();
	strcat(HOMEDIR,"/log/ERPlog/");

	/* 로그파일명을 세팅 */
	sprintf(logfile_fullname, "%sdiskeai1_%s%02d.log", HOMEDIR, v_dt_create, v_no_crt_srl); 
	
	/* 로그파일 오픈 */
	fp = fopen(logfile_fullname, "w+");

	if (fp == NULL) {
		printf("로그파일오픈(%s) 에러\n", logfile_fullname);
		Write_batlog(seqno++, "로그파일오픈 에러\n");   /*dsa2000 Rexec 대체*/	
		exit(1);
	}
}

void WriteLog(char *message)
{
	fprintf(fp, "%s", message);
}


int WriteEmployee(void)
{
	WriteLog("< WriteEAI_YDISK22 Starting >-------------------------------\n");

	sprintf(log_buff, "v_dt_create : (%s)\n", v_dt_create);
	WriteLog(log_buff);
	sprintf(log_buff, "v_cd_data : (%s)\n", v_cd_data);
	WriteLog(log_buff);
	sprintf(log_buff, "v_no_crt_srl : (%d)\n", v_no_crt_srl);
	WriteLog(log_buff);
	sprintf(log_buff, "v_rst_validation : (%s)\n", v_rst_validation);
	WriteLog(log_buff);
	
	/*
	printf("생성일   v_dt_create  : %s\n",    v_dt_create);
	printf("자료구분 v_cd_data    : %s\n",    v_cd_data);
	printf("순서     v_no_crt_srl : %d\n",    v_no_crt_srl);
	printf("생성일   v_orgnum     : %s %s\n", v_orgnum, v_deptcode);
	Delete from EAI_YDISK20;
	*/
	
	EXEC SQL INSERT INTO EAI_YDISK20 (
	     /*DT_CREATE           ,
	     CD_DATA             ,
	     NO_CRT_SRL          ,*/
	     H_YEAR              ,
	     H_MONTH             ,
	     H_SSCODE	         ,
	     H_JIGUB_YMD	 ,
	     H_UNIT	         ,
	     H_DEPT	         ,
	     H_EMPNO	         ,
	     H_NAME              ,
	     H_JUMIN	         ,
	     H_REGISTER          ,
	     H_FORITAX1          ,
	     H_GUNMU             ,
	     H_POSTNO            ,
	     H_ADDRESS           ,
	     H_KSYMD_FROM        ,
	     H_KSYMD_TO          ,
	     H_KMYMD_FROM        ,
	     H_KMYMD_TO          ,
	     H_JOO_PAY           ,
	     H_JOO_BONUS         ,
	     H_JOO_INJUNG        ,
	     H_JOO_GITA          ,
	     H_JOO_TOTAL         ,
	     H_FREE_OVERSEA      ,
	     H_FREE_NIGHT        ,
	     H_FREE1        ,
	     H_FREE2        ,
	     H_FREE_TOTAL        ,
	     H_WOLJUNG           ,
	     H_BASE_PAY          ,
	     H_LABOR_GONG        ,
	     H_LABOR_PAY         ,
	     H_BASE_ME           ,
	     H_BASE_MATE         ,
	     H_BASE_SUPPORT_SU   ,
	     H_BASE_SUPPORT_MONEY,
	     H_ADD_OLD_SU        ,
	     H_ADD_OLD_MONEY     ,
	     H_ADD_JANG_SU       ,
	     H_ADD_JANG_MONEY    ,
	     H_ADD_SON_SU        ,
	     H_ADD_SON_MONEY     ,
	     H_ADD_LADY          ,
	     H_SOSUGONG          ,
	     H_SPECIAL_INSURANCE ,
	     H_SPECIAL_MEDICAL   ,
	     H_SPECIAL_EDUCATE   ,
	     H_SPECIAL_HOUSE     ,
	     H_SPECIAL_DONATE    ,
	     H_SPECIAL_SIN       ,
	     H_SPECADDDED        ,
             H_SPECIAL_TOTAL     ,
	     H_PERSON_GONG       ,
	     H_JOHAB_GONG        ,
	     H_COSTOCK_GONG      ,
	     H_STANDARD          ,
	     H_SANCHUL           ,
	     H_SGONG_LABOR       ,
	     H_SGONG_ASSETS      ,
	     H_SGONG_HOUSE       ,
	     H_SGONG_OVERSEA     ,
	     H_SGONG_STOCK       ,
	     H_SGONG_POLI        ,
	     H_SGONG_TOTAL       ,
	     H_SGM_PAY           ,
	     H_SGM_JOGAM         ,
	     H_SGM_TOTAL         ,
	     H_DECIDE_SO         ,
	     H_DECIDE_NONG       ,
	     H_DECIDE_JOO        ,
	     H_DECIDE_TOTAL      ,
	     H_NAP_JONG_SO       ,
	     H_NAP_JONG_NONG     ,
	     H_NAP_JONG_JOO      ,
	     H_NAP_JONG_TOTAL    ,
	     H_NAP_HYUN_SO       ,
	     H_NAP_HYUN_NONG     ,
	     H_NAP_HYUN_JOO      ,
	     H_NAP_HYUN_TOTAL    ,
	     H_SIL_SO            ,
	     H_SIL_NONG          ,
	     H_SIL_JOO           ,
	     H_SIL_TOTAL         ,
	     H_SPECIAL_STANDARD  ,
             H_SPECIAL_YK_BO     ,
             H_PERSON_SAVE       ,
             H_BCORPNAME         ,
  	     H_BCORPNAME1        ,
    	     H_BCORPNO           ,
    	     H_BCORPNO1          ,
    	     H_BPAYSUM           ,  
    	     H_BPAYSUM1          , 
    	     H_BBONSUM           ,
    	     H_BBONSUM1          ,  
    	     H_BMEDAMT           ,  
    	     H_BMEDAMT1          ,  
    	     H_BHIREAMT          ,  
    	     H_BHIREAMT1         ,  
    	     H_BANUAMT           ,  
    	     H_BANUAMT1          ,
    	     H_BCOGBONSUM         
        )	
	SELECT 	
	     /*TO_DATE(:v_dt_create, 'YYYYMMDD') DT_CREATE,   /*생성일*/
	     /*:v_cd_data 	   CD_DATA,                 /*자료구분*/	
	     /*:v_no_crt_srl	   NO_CRT_SRL,              /*순서*/			     
	     :v_yyyy    	   H_YEAR,                  /*신고년*/     		
	     '12'       	   H_MONTH,                 /*신고월*/		
	     'A20'                 H_SSCODE,	            /*소득관리코드*/
	     A.subdate             H_JIGUB_YMD,	            /*지급일*/	
	     '000'                 H_UNIT,	            /*사업장*/
	     decode(a.orgnum , :v_orgnum, C.FINCODE, :v_deptcode)   H_DEPT, /*휴직자 부서: 인력개발팀*/   
	     A.empno               H_EMPNO,	            /*사번*/		
	     A.korname             H_NAME,                  /*성 명*/		
	     replace(B.juminid,'-','')  H_JUMIN,	    /*주민등록번호*/
	     '1'                   H_REGISTER,              /*거주자 구분*/		
	     '2'                   H_FORITAX1,              /*외국인 단일세율적용여부 1:적용, 2미적용*/	
	     NVL(JOBPLACE, 'A1')   H_GUNMU             ,    /*근무지--널이면 본사로 */
	     A.zipno               H_POSTNO,                /*우편번호*/		
	     SUBSTRB(A.ADDR,1,70)  H_ADDRESS,               /*주소*/		
	     A.YSFRDATE            H_KSYMD_FROM,            /*귀속일_from*/		
	     A.YSTODATE            H_KSYMD_TO,              /*귀속일_to*/		
	     '00000000'            H_KMYMD_FROM,            /*감면일_from A.YSFRDATE */             
	     '00000000'            H_KMYMD_TO,              /*감면일_to   A.YSTODATE*/          		
	     NVL(MPAYSUM, 0)       H_JOO_PAY,               /*주사업장-급여*/	
	     NVL(MBONSUM, 0)       H_JOO_BONUS,             /*주사업장-상여*/	
	     NVL(MCOGBONSUM, 0)    H_JOO_INJUNG,            /*주사업장-인정상여*/ 	
	     NVL(MGITASODK, 0)     H_JOO_GITA,              /*주사업장-GITA*/	
	     NVL(MPAYSUM,0) + NVL(MBONSUM,0)+ NVL(MCOGBONSUM,0)+ NVL(MGITASODK,0)  H_JOO_TOTAL, /*주사업장-total*/	
	     0		           H_FREE_OVERSEA,          /*국외근로소득*/
	     0                     H_FREE_NIGHT,            /*비과세 야간근로*/	
	     NVL(MNOTAX+BNOTAX,0)  H_FREE1,                 /*기타 비과세 1*/		
	     0                     H_FREE2,                 /*기타 비과세 2*/		
	     NVL(NOTAX,0)          H_FREE_TOTAL,            /*비과세 계*/		
	     NVL(LASTMONPAY,0)     H_WOLJUNG,               /*월정급여액*/		
	     NVL(TAXGROSS,0)       H_BASE_PAY,              /*과세대상급여*/	
	     NVL(LABORDED,0)       H_LABOR_GONG,            /*근로소득공제*/	
	     NVL(LABORAMT,0)       H_LABOR_PAY,             /*근로소득급여*/	
	     NVL(SELFDED,0)        H_BASE_ME,               /*기본 본인*/		
	     NVL(MATEDED,0)        H_BASE_MATE,             /*기본 배우자*/		
	     NVL(FAMIDED,0)/1000000 H_BASE_SUPPORT_SU,      /*기본 부양가족 수*/	
	     NVL(FAMIDED,0)        H_BASE_SUPPORT_MONEY,    /*기본 부양가족 액*/	
	     (FAMI65NO+FAMI70NO)   H_ADD_OLD_SU,            /*추가 경로우대 수*/  	
	     NVL(OLDDED,0)         H_ADD_OLD_MONEY,         /*추가 경로우대 금액*/	
	     NVL(OBSDED,0)/2000000 H_ADD_JANG_SU,           /*추가 장애자 수*/	
	     NVL(OBSDED,0)         H_ADD_JANG_MONEY,        /*추가 장애자 금액*/	
	     NVL(CHILDNO,0)        H_ADD_SON_SU,            /*추가 자녀 수*/       	
	     NVL(CHILDDED,0)       H_ADD_SON_MONEY,         /*추가 자녀 금액*/	
	     NVL(WOMANDED,0)       H_ADD_LADY,              /*추가 부녀자공제*/	
	     NVL(FEWDED, 0)        H_SOSUGONG,              /*소수공제액*/		
	     NVL(INSDED ,0)        H_SPECIAL_INSURANCE,     /*특별 보험료*/		
	     NVL(HOSDED, 0)        H_SPECIAL_MEDICAL,       /*특별 의료비*/		
	     NVL(EDUDED, 0)        H_SPECIAL_EDUCATE,       /*특별 교육비*/		
	     NVL(HOUSEDED,0)       H_SPECIAL_HOUSE,         /*특별 주택자금*/	
	     NVL(GIVEDED,0)        H_SPECIAL_DONATE,        /*특별 기부금*/		
	     NVL(CREDITDED, 0)     H_SPECIAL_SIN,           /*특별 신용카드*/	
	     nvl(SPECADDDED,0)     H_SPECADDDED        ,    /*혼인 이사 장례비 공제*/
	     NVL(SPECIALDED,0)     H_SPECIAL_TOTAL,         /*특별 계*/		
	     NVL(PENDED, 0)        H_PERSON_GONG,           /*개인연금 소득*/	
	     NVL(TINVESTDED,0)     H_JOHAB_GONG,            /*조합출자공제 parksh 20030129 INVESTDED->TINVESTDED */	
	     NVL(COSTOCKDED,0)     H_COSTOCK_GONG,          /*우리사주출연금 공제금 */
	     NVL(TAXLEVEL ,0)      H_STANDARD,              /*과세표준*/		
	     NVL(CALCTAX ,0)       H_SANCHUL,               /*산출세액*/		
	     NVL(INCOMTDED,0)      H_SGONG_LABOR,           /*세액공제 근로소득*/	
	     NVL(PROPDED, 0)       H_SGONG_ASSETS,          /*세액공제 재형저축*/	
	     NVL(HLOANDED, 0)      H_SGONG_HOUSE,           /*세액공제 주택차입*/	
	     NVL(FORIDED, 0)       H_SGONG_OVERSEA,         /*세액공제 외국납부*/	
	     NVL(STKDED , 0)       H_SGONG_STOCK,           /*세액공제 주식저축*/	
	     nvl(polided,0)        H_SGONG_POLI,            /*세액공제 정치자금 dsa2000  2004 add */	
	     NVL(TDEDSUM,0)        H_SGONG_TOTAL,           /*세액공제 TOTAL*/	
	     0                     H_SGM_PAY,               /*세액감면 소득세법*/	
	     0                     H_SGM_JOGAM,             /*세액감면 조감법*/	
	     0                     H_SGM_TOTAL,             /*세액감면 TOTAL*/	
	     NVL(DINTAX,0)         H_DECIDE_SO,             /*결정 소득액*/		
	     NVL(DNONGTAX,0)       H_DECIDE_NONG,           /*결정 농특세*/		
	     NVL(DJUTAX,0)         H_DECIDE_JOO,            /*결정 주민세*/		
	     NVL(DINTAX,0)   + NVL(DJUTAX,0)   + NVL(DNONGTAX, 0)   H_DECIDE_TOTAL,      /*TOTAL*/		
	     NVL(BINTAX,0)   + NVL(BINTAX1,0)                       H_NAP_JONG_SO,       /*기납부 종 소득세*/	
	     NVL(BNONGTAX,0) + NVL(BNONGTAX1,0)                     H_NAP_JONG_NONG,     /*기납부 종 농특세*/	
	     NVL(BJUTAX,0)   + NVL(BJUTAX1,0)                       H_NAP_JONG_JOO,      /*기납부 종 주민세*/	
	     NVL(BINTAX,0)   + NVL(BJUTAX, 0)  + NVL(BNONGTAX, 0) +
	     NVL(BINTAX1,0)  + NVL(BJUTAX1, 0) + NVL(BNONGTAX1, 0)  H_NAP_JONG_TOTAL,    /*기납부 종 TOTAL*/
	     NVL(MINTAX,0)         H_NAP_HYUN_SO,           /*기납부 현 소득세*/	
	     NVL(MNONGTAX,0)       H_NAP_HYUN_NONG,         /*기납부 현 농특세*/	
	     NVL(MJUTAX ,0)        H_NAP_HYUN_JOO,          /*기납부 현 주민세*/	
	     NVL(MINTAX,0)   + NVL(MJUTAX, 0)  + NVL(MNONGTAX, 0)   H_NAP_HYUN_TOTAL,     /*기납부 현 TOTAL*/	
	     NVL(YINTAX ,0)        H_SIL_SO,                /*차감징수 소득세   control sum */	
	     NVL(YNONGTAX, 0)      H_SIL_NONG,              /*차감징수 농특세*/   	
	     NVL(YJUTAX ,0)        H_SIL_JOO,               /*차감징수 주민세*/   	
	     NVL(YINTAX, 0)  + NVL(YJUTAX,0)   + NVL(YNONGTAX,0)    H_SIL_TOTAL,          /*차감징수 TOTAL*/     
	     NVL(STANDDED,0)       H_SPECIAL_STANDARD  ,    /*표준공제*/
             NVL(ANUDED,0)         H_SPECIAL_YK_BO     ,    /*연금보험*/
             NVL(NPENDED,0)        H_PERSON_SAVE       ,    /*연금저축*/
             nvl(BCORPNAME,'')     H_BCORPNAME         ,    /*종1근무처명  */  
       	     nvl(BCORPNAME1,'')    H_BCORPNAME1        ,    /*종2근무지명  */
             nvl(replace(BCORPNO,'-',''),'')       H_BCORPNO           ,    /*종1사업자번호 */
             nvl(replace(BCORPNO1,'-',''),'')      H_BCORPNO1          ,    /*종2사업자번호 */ 
             nvl(BPAYSUM,0)        H_BPAYSUM           ,    /*종1급여총액  */  
             nvl(BPAYSUM1,0)       H_BPAYSUM1          ,    /*종2급여총액  */
             nvl(BBONSUM,0)        H_BBONSUM           ,    /*종1상여총액  */  
             nvl(BBONSUM1,0)       H_BBONSUM1          ,    /*종2상여총액  */  
             nvl(BMEDAMT,0)        H_BMEDAMT           ,    /*종1 건강보험료 */
    	     nvl(BMEDAMT1,0)       H_BMEDAMT1          ,    /*종2 건강보험료 */  
    	     nvl(BHIREAMT,0)       H_BHIREAMT          ,    /*종1 고용보험료 */  
    	     nvl(BHIREAMT1,0)      H_BHIREAMT1         ,    /*종2 고용보험료 */  
    	     nvl(BANUAMT,0)        H_BANUAMT           ,    /*종1 국민연금료 */  
    	     nvl(BANUAMT1,0)       H_BANUAMT1          ,    /*종2 국민연금료 */    	     
    	     nvl(BCOGBONSUM,0)     H_BCOGBONSUM             /*종 인정상여총액  DSA2000  2005 ADD*/  
	FROM    PYCDEPT C, pkmysmas A ,PKMPMAS B, PIMPMAS M 
	WHERE   A.EMPNO    = B.EMPNO	
	AND     A.EMPNO    = M.EMPNO(+) 
	AND	A.ORGNUM   = C.ORGNUM
	AND	A.DEPTCODE = C.DEPTCODE
	AND     A.EMPNO NOT in ('Q015','Q016','Q017','0673','0092','0013') /*임원제외*/
	Union All    /*=============================재직근로소득과 퇴직근로소득 같이 dsa2000  */
	SELECT 	
	     /*TO_DATE(:v_dt_create, 'YYYYMMDD') DT_CREATE,   /*생성일*/
	     /*:v_cd_data 	       CD_DATA,             /*자료구분*/	
	     /*:v_no_crt_srl	       NO_CRT_SRL,          /*순서*/		
	     :v_yyyy    	       H_YEAR,              /*신고년*/     		
	     '12'       	       H_MONTH,             /*신고월*/		
	     'A15'                     H_SSCODE,	    /*소득관리코드*/
	     A.SUBDATE                 H_JIGUB_YMD,	    /*지급일	*/
	     '000'                     H_UNIT,	            /*사업장*/
	     C.FINCODE   	       H_DEPT,	            /*부서*/		
	     A.empno                   H_EMPNO,	            /*사번*/		
	     A.korname                 H_NAME,              /*성 명*/		
	     replace(B.juminid,'-','') H_JUMIN,             /*주민등록번호*/
	     '1'                      H_REGISTER,           /*거주자 구분*/		
	     '2'                      H_FORITAX1,           /*외국인 단일세율적용여부 1:적용, 2미적용*/
	     NVL(JOBPLACE, 'A1')      H_GUNMU             , /*근무지--널이면 본사로 */
	     Y.zipno                  H_POSTNO,             /*우편번호*/		
	     SUBSTRB(Y.ADDR,1,70)     H_ADDRESS,            /*주소*/		
	     NVL(Y.YSFRDATE, :v_yyyy||'0101') H_KSYMD_FROM, /*귀속일_from*/		
	     NVL(Y.YSTODATE, A.RETDATE)       H_KSYMD_TO,   /*귀속일_to*/		
	     '00000000'               H_KMYMD_FROM,         /*감면일_from NVL(Y.YSFRDATE, :v_yyyy||'0101') dsa2000  2006.02.*/             
	     '00000000'               H_KMYMD_TO,           /*감면일_to NVL(Y.YSTODATE, A.RETDATE) dsa2000  2006.02.*/          		
	     NVL(MPAYSUM, 0)          H_JOO_PAY,            /*주사업장-급여*/	
	     NVL(MBONSUM, 0)          H_JOO_BONUS,          /*주사업장-상여*/	
	     NVL(MCOGBONSUM, 0)       H_JOO_INJUNG,         /*주사업장-인정상여*/ 	
	     0                        H_JOO_GITA,           /*주사업장-기타*/	
	     NVL(MPAYSUM,0) + NVL(MBONSUM,0) + NVL(MCOGBONSUM,0)     H_JOO_TOTAL,  /*주사업장-total*/	
	     0                        H_FREE_OVERSEA,
	     0                        H_FREE_NIGHT,         /*비과세 야간근로*/	
	     NVL(MNOTAX+BNOTAX,0)     H_FREE1,              /*비과세 1*/		
	     0                        H_FREE2,              /*비과세 2*/		
             NVL(NOTAX,0)             H_FREE_TOTAL,         /*비과세 계*/		
	     NVL(LASTMONPAY,0)        H_WOLJUNG,            /*월정급여액*/		
	     NVL(TAXGROSS,0)          H_BASE_PAY,           /*과세대상급여*/	
	     NVL(LABORDED,0)          H_LABOR_GONG,         /*근로소득공제*/	
	     NVL(LABORAMT,0)          H_LABOR_PAY,          /*근로소득급여*/	
	     NVL(SELFDED,0)           H_BASE_ME,            /*기본 본인*/		
	     NVL(MATEDED,0)           H_BASE_MATE,          /*기본 배우자*/		
	     NVL(FAMIDED,0)/1000000   H_BASE_SUPPORT_SU,    /*기본 부양가족 수*/	
	     NVL(FAMIDED,0)           H_BASE_SUPPORT_MONEY, /*기본 부양가족 액*/	
	     (FAMI65NO+FAMI70NO)      H_ADD_OLD_SU,         /*추가 경로우대 수*/  	
	     NVL(OLDDED,0)            H_ADD_OLD_MONEY,      /*추가 경로우대 금액*/	
	     NVL(OBSDED,0)/2000000    H_ADD_JANG_SU,        /*추가 장애자 수*/	
	     NVL(OBSDED,0)            H_ADD_JANG_MONEY,     /*추가 장애자 금액*/	
	     NVL(CHILDNO,0)           H_ADD_SON_SU,         /*추가 자녀 수*/       	
	     NVL(CHILDDED,0)          H_ADD_SON_MONEY,      /*추가 자녀 금액*/	
	     NVL(WOMANDED,0)          H_ADD_LADY,           /*추가 부녀자공제*/	
	     NVL(FEWDED, 0)           H_SOSUGONG,           /*소수공제액*/		
	     NVL(INSDED ,0)           H_SPECIAL_INSURANCE,  /*특별 보험료*/		
	     NVL(HOSDED, 0)           H_SPECIAL_MEDICAL,    /*특별 의료비*/		
	     NVL(Y.EDUDED, 0)         H_SPECIAL_EDUCATE,    /*특별 교육비*/		
	     NVL(HOUSEDED,0)          H_SPECIAL_HOUSE,      /*특별 주택자금*/	
	     NVL(GIVEDED,0)           H_SPECIAL_DONATE,     /*특별 기부금*/		
	     NVL(CREDITDED, 0)        H_SPECIAL_SIN,        /*특별 신용카드*/	
	     SPECADDDED               H_SPECADDDED        , /* 특별공제(결혼.장례.이사소득공제 개인별 공제액)*/         
	     NVL(SPECIALDED,0)        H_SPECIAL_TOTAL,      /*특별 계*/		
	     NVL(PENDED, 0)           H_PERSON_GONG,        /*개인연금 소득*/	
	     nvl(investded,0)         H_JOHAB_GONG,         /*조합출자공제*/	
	     NVL(COSTOCKDED,0)        H_COSTOCK_GONG,          /*우리사주출연금 공제금 */
	     NVL(TAXLEVEL ,0)         H_STANDARD,           /*과세표준*/		
	     NVL(CALCTAX ,0)          H_SANCHUL,            /*산출세액*/		
	     NVL(INCOMTDED,0)         H_SGONG_LABOR,        /*세액공제 근로소득*/	
	     NVL(PROPDED, 0)          H_SGONG_ASSETS,       /*세액공제 재형저축*/	
	     NVL(HLOANDED, 0)         H_SGONG_HOUSE,        /*세액공제 주택차입*/	
	     NVL(FORIDED, 0)          H_SGONG_OVERSEA,      /*세액공제 외국납부*/	
	     NVL(STKDED , 0)          H_SGONG_STOCK,        /*세액공제 주식저축*/	
	     nvl(Y.polided,0)         H_SGONG_POLI,         /*세액공제 정치자금 dsa2000  2004 add */	
	     NVL(TDEDSUM,0)           H_SGONG_TOTAL,        /*세액공제 TOTAL*/	
	     0                        H_SGM_PAY,            /*세액감면 소득세법*/	
	     0                        H_SGM_JOGAM,          /*세액감면 조감법*/	
	     0                        H_SGM_TOTAL,          /*세액감면 TOTAL*/	
	     NVL(DINTAX,0)            H_DECIDE_SO,          /*결정 소득액*/		
	     NVL(DNONGTAX, 0)         H_DECIDE_NONG,        /*결정 농특세*/		
	     NVL(DJUTAX,0)            H_DECIDE_JOO,         /*결정 주민세*/		
	     NVL(DINTAX,0) + NVL(DJUTAX,0) + nvl(DNONGTAX,0)      H_DECIDE_TOTAL,       /*TOTAL*/		
	     NVL(BINTAX,0)                                        H_NAP_JONG_SO,           /*기납부 종 소득세*/	
	     NVL(BNONGTAX,0)                                      H_NAP_JONG_NONG,         /*기납부 종 농특세*/	
	     NVL(BJUTAX,0)                                        H_NAP_JONG_JOO,          /*기납부 종 주민세*/	
	     NVL(BINTAX,0) + NVL(BJUTAX, 0) + NVL(BNONGTAX, 0)    H_NAP_JONG_TOTAL,     /*기납부 종 TOTAL*/	
	     NVL(MINTAX,0)            H_NAP_HYUN_SO,        /*기납부 현 소득세*/	
	     NVL(MNONGTAX,0)          H_NAP_HYUN_NONG,      /*기납부 현 농특세*/	
	     NVL(MJUTAX ,0)           H_NAP_HYUN_JOO,       /*기납부 현 주민세*/	
	     NVL(MINTAX,0) + NVL(MJUTAX, 0) + NVL(MNONGTAX, 0)                  H_NAP_HYUN_TOTAL,     /*기납부 현 TOTAL*/	
	     NVL(YINTAX ,0)           H_SIL_SO,             /*차감징수 소득세   control sum */	
	     NVL(YNONGTAX, 0)         H_SIL_NONG,           /*차감징수 농특세*/   	
	     NVL(YJUTAX ,0)           H_SIL_JOO,            /*차감징수 주민세*/   	
	     NVL(YINTAX, 0)+ NVL(YJUTAX,0) + NVL(YNONGTAX,0)      H_SIL_TOTAL,          /*차감징수 TOTAL*/     
	     NVL(STANDDED,0)          H_SPECIAL_STANDARD  ,  /*표준공제*/
             NVL(ANUDED,0)            H_SPECIAL_YK_BO     ,  /*연금보험*/
             NVL(NPENDED,0)           H_PERSON_SAVE       ,  /*연금저축*/
             nvl(BCORPNAME,'')        H_BCORPNAME         , /*종1근무처명  */  
       	     ' '                      H_BCORPNAME1        , /*종2근무지명  */
             nvl(replace(BCORPNO,'-',''),'')          H_BCORPNO           , /*종1사업자번호 */
             ' '                      H_BCORPNO1          , /*종2사업자번호 */ 
             nvl(BPAYSUM,0)           H_BPAYSUM           , /*종1급여총액  */  
             0                        H_BPAYSUM1          , /*종2급여총액  */
             nvl(BBONSUM,0)           H_BBONSUM           , /*종1상여총액  */  
             0                        H_BBONSUM1          , /*종2상여총액  */  
             nvl(BMEDAMT,0)           H_BMEDAMT           , /*종1 건강보험료 */
    	     0                        H_BMEDAMT1          , /*종2 건강보험료 */  
    	     nvl(BHIREAMT,0)          H_BHIREAMT          , /*종1 고용보험료 */  
    	     0                        H_BHIREAMT1         , /*종2 고용보험료 */  
    	     nvl(BANUAMT,0)           H_BANUAMT           , /*종1 국민연금료 */  
    	     0                        H_BANUAMT1          , /*종2 국민연금료 */
    	     nvl(BCOGBONSUM,0)        H_BCOGBONSUM          /*종 인정상여총액  DSA2000  2005 ADD*/  
	FROM    PYCDEPT C, pkhrthis A , pkhryhis Y, PKMPMAS B, PIMPMAS M  
	WHERE   A.EMPNO    = B.EMPNO
	and     A.empno    = Y.empno
	and     A.EMPNO    = M.EMPNO(+)
	AND	A.ORGNUM   = C.ORGNUM
	AND	A.DEPTCODE = C.DEPTCODE
	AND     A.RETDATE  like :v_yyyy||'%'
	AND     Y.Empno NOT in ('Q015','Q016','Q017','0673','0092','0013')  /*임원제외*/
	AND     Y.Empno NOT in ('P482','Q012','Q013') ; /*사번변경자 제외 */
	
	
	if (sqlca.sqlcode != 0) {	/* 에러이면 */
		sprintf(log_buff, "ORA-%05d - Insert TEMP EAI_YDISK22 Error--------\n", sqlca.sqlcode);		
		printf(log_buff, "ORA-%05d - Insert TEMP EAI_YDISK22 Error--------\n", sqlca.sqlcode);
		WriteLog(log_buff);
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/	
		return(-1);
		
	} 
	else {			/* 에러가 아니면 */
		v_cnt_line = sqlca.sqlerrd[2];
		WriteLog("Insert TEMP EAI_YDISK22 Success\n");
		sprintf(log_buff, "Process Count VAT09 : %d\n", v_cnt_line);
		WriteLog(log_buff);		
	}
	
	
                EXEC SQL                
		SELECT  SUM(NVL(YINTAX,0)), SUM(NVL(YJUTAX,0)),SUM(NVL(YNONGTAX,0)), SUM(NVL(yintax,0))
		INTO	:v_amtin, :v_amtju, :v_amtnong, :v_amttot
		FROM 	PKMYSMAS A ,PKMPMAS B
		WHERE   A.WORKYY = :v_yyyy
		AND	A.EMPNO  = B.EMPNO;
	        
       		
	            if (sqlca.sqlcode != 0) {	/* 에러이면 */
		v_cnt_line = 0;
		sprintf(log_buff, "ORA-%05d - Fetch 통계_Error\n", sqlca.sqlcode);
		printf(log_buff, "ORA-%05d - Fetch 통계_Error\n", sqlca.sqlcode);
		WriteLog(log_buff);
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/	
		return(-1);
	            }       		
		WriteLog("Insert HAIS EAI_YDISK22 Success\n");
		sprintf(log_buff, "Process Count EAI_YDISK22 : %d\n", v_cnt_line);
		WriteLog(log_buff);
		
		WriteLog("< WriteEAI_YDISK22 Ending >-------------------------\n");
                      
		return(0);

}

/*=== dsa2000 2005.01. Rexec대체 서비스를 위한 Write_batlog()  ===================*/
int Write_batlog(int seqno, char *message)
{
	
        EXEC SQL AT log_db 
        INSERT INTO PYBATLOG
        VALUES (:log_rundate, :log_progid, :seqno, :log_writeman, :message);

        if ((sqlca.sqlcode != 1403) && (sqlca.sqlcode != 0)) 
	{	
		printf("ERROR_CODE : %d, pybatlog Insert Error. \n", sqlca.sqlcode);
		return(-1);
	}                        
                        
        EXEC SQL AT log_db COMMIT WORK ;	
}
