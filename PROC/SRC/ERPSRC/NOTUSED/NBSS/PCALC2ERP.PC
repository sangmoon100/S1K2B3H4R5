/* ======================= Program Header =====================================
 PROGRAM-NAME   : PCALC2ERP(INSA->ERP Interface Program)
 PROGRM-Decription : 월급여내역을 계정별로 전표를 생성
 USAGE          : pcalc2erp DBUserID 작업자사번 회계년월
 SYSTEM-NAME    : 급여
 SUBSYSTEM-NAME : 급여
 Programmer     : 이랑교
 Version        : 1.00
 Date           : 1999.02.11

Update Contents

   Version    date(yy.mm.dd)     programmer      description
   1.00       1999.02.11         이랑교          최초작성 
   1.00       2002.03.21         유효성          신재무시스템으로 변경(ERP->HAIS)
   1.01       2004.02.24         강륜종          Oracle8i 업그레이드에 의한 관련 라이브러리 업그레이드.    
   1.02       2004.04.26         강륜종         MIS2 장비에 맞게 경로 및 환경 설정...   
                                                EXEC SQL ROLLBACK WORK; EXEC SQL COMMIT WORK;  주석처리...      
   10.00       2004.11.     강륜종(dsa2000)     Rexec대체 서비스를 위한 수정작업.                                                
============================================================================= */

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <ctype.h>
#include <time.h>
#include "hinsa_macro.h"
#include "hinsa_string.h"
#include "hinsa_date.h"
#include "hinsa_log.h"
#include "hinsa_oracle.h"
#include "hinsa_common.h"

void CreateLog(void);
void InitVariables(void);
void Initialize(void);
void DeleteTmp(void);
void WriteLog(char *message);

int WriteControl(int gubun);
int WritePkmpcalc(void);

EXEC SQL INCLUDE sqlca;

EXEC SQL BEGIN DECLARE SECTION;

/****************************************************************************** 
  Interface Control Table Variables
******************************************************************************/ 
char	v_dt_create[9];			/* 생성일자 */
char	v_cd_data[5] = "GL09";		/* 인건비 Data Code */
int	v_no_crt_srl = 0;		/* 생성 일련번호 */
char	v_ym_acct[7];			/* 회계년월 */
int	v_cnt_line = 0;			/* Line건수 */ 
char	v_ph_proc[2] = "A";		/* 처리단계 */
char	v_st_proc[2] = "P";		/* 처리상태 (P:Processing, N:Normal Termination, A:Abnormal Termination) */
char	v_cl_data_use[2] = "A";		/* Data 활용구분 */
char	v_id_crt_user[5];		/* 생성 UserID */

/****************************************************************************** 
  Interface Table Variables
******************************************************************************/ 
char	v_rst_validation[2] = "A";

/****************************************************************************** 
  CONST Variables
******************************************************************************/ 
char	v_currency[4]	= "KRW";	/*화폐명*/
char	v_corpcode[3]	= "10";		/*회사코드 하나로통신(주)*/
char	v_activity[6]	= "00000";	/*기능(활동)*/
char	v_service[5]	= "0000";	/*서비스*/
char	v_method[2]	= "0";		/*매체*/
char	v_customer[3]	= "00";		/*고객군*/
char	v_tele[4]	= "000";	/*전화국*/
char	v_outaccount[31]= "414-11-00112-0(당좌수표)";	
	/*출금계좌번호 not used 변경시 erp_accno의 acntno를 바꾼다.*/
double	v_amt_tot	= 0;		/* 대변total 금액*/
double	v_amt_tot_cr	= 0;		/* 차변total 금액*/
 
EXEC SQL END   DECLARE SECTION;

/****************************************************************************** 
  Other Variables
******************************************************************************/ 
/*char	logdir[100] = "/hper/insa/ERP/log/";*/
char    *HOMEDIR;
char	logfile[40];
char	logfile_fullname[140];
int	id;
char	buff[1000];
char	arg_ym_acct[7];
char	paydate[9];

/*=== dsa2000 2004.11. Rexec대체 서비스를 위한 =============*/
char    log_rundate[16]     = ""; 
char    log_progid[16]      = "";
char    log_writeman[5]     = "";
char    log_buff[300]       = "";
int     seqno = 0; 

/***** Log File Pointer *****/
FILE *fp;	

void main(int argc, char *argv[])
{
	char curdatetime[15];
	
	/* printf("Program Start......................................... >\n");  */
	if (argc != 6) {  /* /hper8/HINSA/proc/bin/ERPbin/pcalc2erp 200410 20041025 D006 pcalc2erp 2004110100000 */
	   printf("[Usage] : pcalc2erp 1.회계년월(YYYYMM) 2.지급일 3.작업자 4.progid 5.시작시간\n");
	   fclose(fp);
	   exit(1);	 	   
	}
	
	memset(arg_ym_acct, NULL, sizeof(arg_ym_acct));
	sprintf(arg_ym_acct, "%s", argv[1]);

	memset(paydate, NULL, sizeof(paydate));
	sprintf(paydate, "%s", argv[2]);

	/* Dsa2000  2004.02.24.	**********************************/
	/* DB_connect(id,0); */
 	hinsa_log_print(0,"계정/부서별로 전표를 생성 시작...");          
        hinsa_db_connect();  /*DB Connect 실시..*/
	/*dsa2000  수정..End......................................*/ 	
	
	InitVariables();		/* 변수 초기화 */
	Initialize();			/* 초기화 루틴 */
	
	/*=== dsa2000 2004.11. Rexec대체 서비스를 위한 =============*/
	strcpy(log_writeman, argv[3]);
	strcpy(log_progid,   argv[4]);
	strcpy(log_rundate,  argv[5]);	
		
	EXEC SQL DECLARE log_db DATABASE;    
	hinsa_log_db_connect();
	/*========================================================*/

	CreateLog();
	printf("작업 시작......................................... >\n");

	sprintf(buff, "프로그램명 : %s\n", argv[0]);
	WriteLog(buff);
	sprintf(buff, "회계년월 : %s\n", argv[1]);
	WriteLog(buff);

	DeleteTmp();

	sprintf(v_id_crt_user, argv[3]);	/* 작업자사번 */

	if (WriteControl(0) == -1) {		/* 초기값 세팅 */
		fclose(fp);
		exit(1);
	}
	
	if (WritePkmpcalc() == -1)
	{
		WriteControl(2);	/* 비정상종료 */
		sprintf(log_buff, " ERROR ");
           	Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
                error_quit("ERROR ====== [ 작업 실패 ROLLBACK ] =====\n");		/*Dsa2000*/
	}                
	else
	{
		WriteControl(1); 	/* 정상종료 */	
		sprintf(log_buff, "OK ====== [ 작업 완료 COMMIT ] =====");
           	Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
           	
           	/*** 종료시간 Print dsa2000 Add ***************************/
        	EXEC SQL  
        	SELECT TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
          	  INTO :curdatetime
          	  FROM DUAL;

        	sprintf(log_buff, "종료시간 : %.14s \n ",curdatetime);
        	WriteLog(log_buff);
        	Write_batlog(seqno++, log_buff); 
        	/*********************************************************/
        
		hinsa_exit(0,"OK ====== [ 작업 완료 COMMIT ] =====\n");		/*Dsa2000*/
		
	}

	fclose(fp);
	           	
}

void CreateLog()
{
	HOMEDIR = hinsa_home();
	strcat(HOMEDIR,"/log/ERPlog/");
	
	/* 로그파일명을 세팅 */
	sprintf(logfile_fullname, "%spcalc2erp%s%02d.log", HOMEDIR, v_dt_create, v_no_crt_srl); 
	/* 로그파일 오픈 */
	fp = fopen(logfile_fullname, "w+");

	if (fp == NULL) {
		printf("로그파일오픈(%s) 에러\n", logfile_fullname);
		sprintf(log_buff, "로그파일오픈(%s) 에러\n", logfile_fullname);
           	Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		exit(1);
	}
}

void InitVariables(void)
{
	memset(logfile, NULL, sizeof(logfile));
	memset(logfile_fullname, NULL, sizeof(logfile_fullname));

	memset(v_dt_create, NULL, sizeof(v_dt_create));
	memset(v_ym_acct, NULL, sizeof(v_ym_acct));
}

void Initialize(void)
{
	EXEC SQL 
	SELECT	TO_CHAR(SYSDATE, 'YYYYMMDD') DT_CREATE,  
		TO_CHAR(SYSDATE, 'YYYYMM') YM_ACCT	
	INTO   	:v_dt_create, :v_ym_acct
	FROM	DUAL;

	if (strcmp(arg_ym_acct, "000000") != 0)
		sprintf(v_ym_acct, "%s", arg_ym_acct);

	if (sqlca.sqlcode != 0)
	{
		printf("ORA-%05d - 현재날짜 가져오기  Error\n", sqlca.sqlcode);
		fclose(fp);
		exit(1);
	}

	EXEC SQL 
	SELECT	NVL(MAX(NO_CRT_SRL),0) /*MAX(NO_CRT_SRL)*/
	INTO	:v_no_crt_srl	
	FROM	HIT_CTRL@HAIS	/*  FROM	HIT_CTRL_TEST   /* 테스트시에 사용 */
	WHERE	DT_CREATE = TO_DATE(:v_dt_create, 'YYYYMMDD')
	  AND	CD_DATA = :v_cd_data;

	if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != -1403) && (sqlca.sqlcode != -1405)) {
		printf("ORA-%05d - MAX Serial# 가져오기  Error\n", sqlca.sqlcode);
		sprintf(log_buff, "ORA-%05d - MAX Serial# 가져오기  Error\n", sqlca.sqlcode);
           	Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		fclose(fp);
		exit(1);
	} 
	v_no_crt_srl++;	/* 현재날짜의 생성일련번호 + 1 */
	printf("v_no_crt_srl : %d \n",v_no_crt_srl);
}

void WriteLog(char *message)
{
	fprintf(fp, "%s", message);
}

void DeleteTmp(void)
{
	sprintf(buff, "< DeleteTmp Starting >----------------\n");
	WriteLog(buff);

	EXEC SQL
	DELETE FROM ERP_HGL_GL09		/* TEMP Table에서 3년이상 이상 */
	WHERE DT_CREATE < ADD_MONTHS(SYSDATE,-36);  /* 지난 데이타는 삭제한다.*/

	if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != 1403))
	{
		printf("Fail!! < Program failed 1.........................................%d >\n",sqlca.sqlcode);
		sprintf(log_buff, "ORA-%05d - 임시테이블삭제 Error\n", sqlca.sqlcode);
           	Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		WriteLog(log_buff);
		fclose(fp);
		exit(1);
	}

	/*EXEC SQL COMMIT WORK;
	if (sqlca.sqlcode != 0)
	{
		printf("Fail!! < Program failed2......................................... >\n");
		sprintf(buff, "ORA-%05d - 임시테이블삭제 Commit Error\n", sqlca.sqlcode);
		WriteLog(buff);
		fclose(fp);
		exit(1);
	}*/

	sprintf(buff, "< DeleteTmp Ending >----------------\n");
	WriteLog(buff);
}

int WriteControl(int gubun)
{
	sprintf(buff, "< WriteControl Starting (Gubun : %d) >----------------\n", gubun);
	WriteLog(buff);
	
	printf("gubun : %d\n",gubun);
	if (gubun == 1)
		sprintf(v_st_proc, "N");
	else if (gubun == 2)
		sprintf(v_st_proc, "A");

	sprintf(buff, "v_dt_create : (%s)\n", v_dt_create);
	WriteLog(buff);
	sprintf(buff, "v_cd_data : (%s)\n", v_cd_data);
	WriteLog(buff);
	sprintf(buff, "v_no_crt_srl : (%d)\n", v_no_crt_srl);
	WriteLog(buff);
	sprintf(buff, "v_ym_acct : (%s)\n", v_ym_acct);
	WriteLog(buff);
	sprintf(buff, "v_ph_proc : (%s)\n", v_ph_proc);
	WriteLog(buff);
	sprintf(buff, "v_st_proc : (%s)\n", v_st_proc);
	WriteLog(buff);
	sprintf(buff, "v_cl_data_use : (%s)\n", v_cl_data_use);
	WriteLog(buff);
	sprintf(buff, "v_id_crt_user : (%s)\n", v_id_crt_user);
	WriteLog(buff);
	sprintf(buff, "v_cnt_line : (%d)\n", v_cnt_line);
	WriteLog(buff);

	if (gubun == 0) {	/* 작업시작시 Control Table Insert */

		EXEC SQL
		INSERT INTO HIT_CTRL@HAIS   /*	INSERT INTO HIT_CTRL_TEST   /* 테스트시에 사용 */
			(DT_CREATE, CD_DATA, NO_CRT_SRL, YM_ACCT,
			PH_PROC, ST_PROC, CL_DATA_USE,  ID_CRT_USER)
		VALUES	(TO_DATE(:v_dt_create, 'YYYYMMDD'), 
			:v_cd_data, :v_no_crt_srl, :v_ym_acct,
			:v_ph_proc, :v_st_proc, :v_cl_data_use,	:v_id_crt_user);

	} else if (gubun == 1) {	/* 정상종료시 Control Table Update */

		EXEC SQL
		UPDATE	HIT_CTRL@HAIS   /*	UPDATE	HIT_CTRL_TEST   /* 테스트시에 사용 */
		SET	CNT_LINE = :v_cnt_line,		/* 처리건수 */
			AMT_TOT  = :v_amt_tot,		/* TOTAL 금액 */
			ST_PROC  = :v_st_proc,		/* 처리상태 "N" */	
			DT_CRT_COMP = SYSDATE		/* 작업완료일자 */
		WHERE	DT_CREATE = TO_DATE(:v_dt_create, 'YYYYMMDD')
		  AND	CD_DATA = :v_cd_data
		  AND	NO_CRT_SRL = :v_no_crt_srl;

	} else if (gubun == 2) {	/* 비정상종료시 Control Table Update */

		EXEC SQL
		UPDATE	HIT_CTRL@HAIS   /*	UPDATE	HIT_CTRL_TEST   /* 테스트시에 사용 */
		SET	ST_PROC   = :v_st_proc	/* 처리상태를 "A"로 세팅 */	
		WHERE	DT_CREATE = TO_DATE(:v_dt_create, 'YYYYMMDD')
		  AND	CD_DATA   = :v_cd_data
		  AND	NO_CRT_SRL = :v_no_crt_srl;

	}

	if (sqlca.sqlcode != 0) {
		sprintf(log_buff, "ORA-%05d - Control Table Error ( Gubun : %d )\n",sqlca.sqlcode, gubun);
		WriteLog(log_buff);
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		/*EXEC SQL ROLLBACK WORK;*/		
		return(-1);
	} else {
		sprintf(log_buff, "< WriteControl Ending (Gubun : %d) >------------------\n", gubun);
           	WriteLog(log_buff);
           	Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/

		/*EXEC SQL COMMIT WORK;*/

		if (gubun == 1) { 
			printf("OK!! < Program ended successfully........................... >\n");
			printf("\n");
			printf(" =========================================================== \n");
			printf("                           작업결과                          \n");
			printf("  작업일 :[%s] 자료구분[%s] 일련번호[%d]   \n", v_dt_create,v_cd_data,v_no_crt_srl);
			printf(" =========================================================== \n");
			printf("      건 수    대변총액   차변총액  \n");
			printf("        %-4d      %-15.0f    %-15.0f     \n", v_cnt_line,v_amt_tot,v_amt_tot_cr);
			printf(" =========================================================== \n");
			WriteLog("OK!! < Program ended successfully.......................... >\n");
			
			sprintf(log_buff, "OK!! < Program ended successfully........................... >\n");
           		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
           		sprintf(log_buff, " =========================================================== \n");
           		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
           		sprintf(log_buff, "                           작업결과                          \n");
           		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
           		sprintf(log_buff, "  작업일 :[%s] 자료구분[%s] 일련번호[%d]   \n", v_dt_create,v_cd_data,v_no_crt_srl);
           		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
           		sprintf(log_buff, " =========================================================== \n");
           		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
           		sprintf(log_buff, "      건 수    대변총액   차변총액  \n");
           		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
           		sprintf(log_buff, "        %-4d      %-15.0f    %-15.0f     \n", v_cnt_line,v_amt_tot,v_amt_tot_cr);
           		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
           		sprintf(log_buff, " =========================================================== \n");
           		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
           		sprintf(log_buff, "OK!! < Program ended successfully.......................... >\n");
           		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
           	
		} else if (gubun == 2) {
			printf("Fail!! < Program failed.4........................................ >\n");
			sprintf(log_buff, "Fail!! < Program failed......................................... >\n");
           		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
			WriteLog("Fail!! < Program failed......................................... >\n");			
		}
		return(0);
	}
}

int WritePkmpcalc(void)
{
	WriteLog("< WritePkmpcalc Starting >-------------------------------\n");

	sprintf(buff, "v_dt_create : (%s)\n", v_dt_create);
	WriteLog(buff);
	sprintf(buff, "v_cd_data : (%s)\n", v_cd_data);
	WriteLog(buff);
	sprintf(buff, "v_no_crt_srl : (%d)\n", v_no_crt_srl);
	WriteLog(buff);
	sprintf(buff, "v_rst_validation : (%s)\n", v_rst_validation);
	WriteLog(buff);

	EXEC SQL INSERT INTO ERP_HGL_GL09 (	/* Write TEMP Pkmpcalc Table */
		DT_CREATE,
		CD_DATA,
		NO_CRT_SRL,
		HEADER_NAME,
		DT_ACCOUNTING,
		NO_LINE,
		CURRENCY,
		SEGMENT1,
		SEGMENT2,
		SEGMENT3,
		SEGMENT4,
		SEGMENT5,
		SEGMENT6,
		SEGMENT7,
		SEGMENT8,
		ENTERED_DR,
		ENTERED_CR,
		OUT_ACCOUNT,
		RST_VALIDATION )
	SELECT
 		TO_DATE(:v_dt_create, 'YYYYMMDD') DT_CREATE,
		:v_cd_data CD_DATA,                                  
		:v_no_crt_srl,                                       
	/*2000.7.14. 7월,11월 체단비는 header name을 체단비로 변경...	
	        :v_cd_data||'-'||substr(:paydate,1,6)||decode(
							substr(:paydate,7,2),'10','-명절연봉','-급여'),  */
		:v_cd_data||'-'||substr(:paydate,1,6)||decode(
		                                        substr(:paydate,7,2),'10',
		                                         decode(substr(:paydate,5,2),'07','-체단비','11','-체단비','-명절연봉'),'-급여'), 					
		TO_DATE(:paydate, 'YYYYMMDD'),  
		rownum,                                              
		:v_currency,                                         
		:v_corpcode,                                         
		fincode,                                             
		:v_activity,                                         
		accno,                                               
		:v_service,                                          
		:v_method,                                           
		:v_customer,                                         
		:v_tele,                                             
		decode(debityn,'0',nvl(accnosum,0),0) debit,         
		decode(debityn,'1',nvl(accnosum,0),0) credit,        
/* 02/29/2000 9:21오전 계정이 현금.당좌일때만 출금계좌가 나타나게 
		:v_outaccount,           */
		decode(accno,'111120',:v_outaccount,''),
		:v_rst_validation RST_VALIDATION  
	FROM	V_ERP_ACCNO A,                                      
		 (	SELECT ACCNO ACCNOB ,MAX(DEBITYN)  DEBITYN  
			FROM ERP_ACCNO GROUP BY ACCNO )
	WHERE   A.ACCNO = ACCNOB
/* =====================================================================
   Version    date(yy.mm.dd)     programmer      description
   30.00      2000.01.25           유효성       (-) 금액 포함 
============================================================================= */
	/* AND	NVL(ACCNOSUM,0) > 0 ; */
	AND	NVL(ACCNOSUM,0) <> 0 ;  
	
/* printf("\n ssssss ORA-%05d - Insert TEMP 인건비 --------\n", sqlca.sqlcode); */

	if (sqlca.sqlcode != 0) {	/* 에러이면 */
		sprintf(log_buff, "ORA-%05d - Insert TEMP 인건비 Error--------\n", sqlca.sqlcode);
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		WriteLog(log_buff);
		/*EXEC SQL ROLLBACK WORK;*/
		return(-1);
	} else {			/* 에러가 아니면 */
		v_cnt_line = sqlca.sqlerrd[2];
		WriteLog("Insert TEMP 인건비 Success\n");
		sprintf(log_buff, "Process Count : %d\n", v_cnt_line);
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		WriteLog(log_buff);
		/*EXEC SQL COMMIT WORK;*/
	}

	/* **********************************************************************
	* Write ERP 인건비 Table *
	* **********************************************************************/
	EXEC SQL INSERT INTO HGL_GL09@HAIS (    /*EXEC SQL INSERT INTO HGL_GL09 (  /* 테스트시에 사용 */
		DT_CREATE,
		CD_DATA,
		NO_CRT_SRL,
		HEADER_NAME,
		DT_ACCOUNTING,
		NO_LINE,
		CURRENCY,
		SEGMENT1,
		SEGMENT2,
		SEGMENT3,
		SEGMENT4,
		SEGMENT5,
		SEGMENT6,
		SEGMENT7,
		SEGMENT8,
		ENTERED_DR,
		ENTERED_CR,
		OUT_ACCOUNT,
		RST_VALIDATION
	) SELECT
		DT_CREATE,
		CD_DATA,
		NO_CRT_SRL,
		HEADER_NAME,
		DT_ACCOUNTING,
		NO_LINE,
		CURRENCY,
		SEGMENT1,
		SEGMENT2,
		SEGMENT3,
		SEGMENT4,
		SEGMENT5,
		SEGMENT6,
		SEGMENT7,
		SEGMENT8,
		ENTERED_DR,
		ENTERED_CR,
		OUT_ACCOUNT,
		RST_VALIDATION
	FROM	ERP_HGL_GL09
	WHERE	DT_CREATE = TO_DATE(:v_dt_create, 'YYYYMMDD')
	  AND	CD_DATA    = :v_cd_data
	  AND	NO_CRT_SRL = :v_no_crt_srl;


	if (sqlca.sqlcode != 0) {	/* 에러이면 */
		v_cnt_line = 0;

		sprintf(log_buff, "ORA-%05d - Insert ERP 인건비 Error\n", sqlca.sqlcode);
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		WriteLog(log_buff);
		/*EXEC SQL ROLLBACK WORK;*/
		return(-1);
	} else {			/* 에러가 아니면 */
		if (v_cnt_line != sqlca.sqlerrd[2]) {
			sprintf(log_buff, "TEMP/ERP테이블에 Insert된 건수가 다릅니다.\n");
			Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
			WriteLog("TEMP/ERP테이블에 Insert된 건수가 다릅니다.\n");
			/*EXEC SQL ROLLBACK WORK;*/
			return(-1);

		}
		WriteLog("Insert ERP 인건비 Success\n");
		sprintf(log_buff, "Insert ERP 인건비 : Process Count : %d\n", v_cnt_line);
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		WriteLog(log_buff);
		/*EXEC SQL COMMIT WORK;*/

		v_amt_tot = 0;
		v_amt_tot_cr = 0;

		EXEC SQL 
		SELECT	SUM(ENTERED_DR),SUM(ENTERED_CR)
		INTO   	:v_amt_tot  ,:v_amt_tot_cr
		FROM	ERP_HGL_GL09
		WHERE	DT_CREATE = TO_DATE(:v_dt_create, 'YYYYMMDD')
		  AND	CD_DATA    = :v_cd_data
		  AND	NO_CRT_SRL = :v_no_crt_srl;

		sprintf(log_buff, "< Write 인건비 Ending >-------------------------\n");
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		WriteLog("< Write 인건비 Ending >-------------------------\n");
		return(0);
	}

}

/*=== dsa2000 2004.10. Rexec대체 서비스를 위한 Write_batlog()  ===================*/
int Write_batlog(int seqno, char *message)
{
	
        EXEC SQL AT log_db 
        INSERT INTO PYBATLOG
        VALUES (:log_rundate, :log_progid, :seqno, :log_writeman, :message);

        if ((sqlca.sqlcode != 1403) && (sqlca.sqlcode != 0)) 
	{	
		printf("ERROR_CODE : %d, pybatlog Insert Error. \n", sqlca.sqlcode);
		return(-1);
	}                        
                        
        EXEC SQL AT log_db COMMIT WORK ;	
}