/* ======================= Program Header =====================================
 PROGRAM-NAME   : PKMPYSERP(INSA->ERP Interface Program)
 PROGRM-Decription : 연말정산테이블을 읽어서 ERP쪽 Interface 테이블에 Insert
 USAGE          : pkmpyserp DBUserID 작업자사번 지급년월               
 SYSTEM-NAME    : 연말정산 
 SUBSYSTEM-NAME : 
 Programmer     : 유효성 
 Version        : 1.00
 Date           : 2000.2.8.
 
Update Contents
   Version    date(yy.mm.dd)  programmer       description
     2.00      2002.01.02     유효성          소득세법 개정에 따른 필드추가
                                             (표준공제, 연금보험, 연금저축,납세조합, 증권저축)
     3.00      2002.01.16     유효성          근무지 필드 추가                                                       
                                              -개인별 인사마스터의 근무지를 넘긴다.   
     3.01      2003.01.29     parksh          DB명,테이블명,컬럼명,조직차수 수정                                                                                              
     4.00      2004.01.29.    강륜종(dsa2000) .세법변경에 따른 칼럼 추가.(H_SGONG_FOREIGNER, FOREIGNDED)
                                              .휴직자 부서코드를 프로그램에서 받아서 처리하도록 변경.
                                              .Fincode를 개발자가 수정 및 프로그램 실행까지 하던것을 
                                               사용자가 실행할수 있도록 재무용 근로/퇴직소득 자료추출(PKQ4130G)프로그램을 수정함.
    4.01      2004.02.26      강륜종(dsa2000) Oracle8i 업그레이드에 의한 관련 라이브러리 업그레이드.                                                         
              2004.04.06.     강륜종(dsa2000) 실제 지급일자로 하기 위해 v_paydate => subdate 로 변경, NBSS와 회의에 의거..
    5.00      2004.04.23      강륜종          MIS2 장비에 맞게 경로 및 환경 설정...     
    10.00     2004.11.        강륜종(dsa2000) Rexec대체 서비스를 위한 수정작업.
    11.00     2005.02.04.     dsa2000         2004년 귀속 연말정산 칼럼 반영.              
=============================================================================== */
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <ctype.h>
#include <time.h>
#include "hinsa_macro.h"
#include "hinsa_string.h"
#include "hinsa_date.h"
#include "hinsa_log.h"
#include "hinsa_oracle.h"
#include "hinsa_common.h"

void CreateLog(void);
void InitVariables(void);
void Initialize(void);
void WriteLog(char *message);
int  WriteControl(int gubun);
int  WriteEmployee(void);
/*int  Check_date(void); */


EXEC SQL INCLUDE sqlca;

EXEC SQL BEGIN DECLARE SECTION;
/****************************************************************************** 
  Interface Control Table Variables
******************************************************************************/ 
char	v_dt_create[9];			/* 생성일자 */
char	v_cd_data[5] = "TX04";		/* Employee Data Code */
int	v_no_crt_srl = 0;		/* 생성 일련번호 */
char	v_sscode[3+1] = "A10";		/* 일반/계약직구분 */
char	v_sscodeys[3+1] = "A20";	/* 연말정산,퇴직정산 */
char	v_sscodeil[3+1] = "A40";	/* 사원급여/계약직급여구분:3개월미만 */
char	v_ym_acct[7];			/* 회계년월 */
int	v_cnt_line = 0;			/* Line건수 */ 
char	v_ph_proc[2] = "A";		/* 처리단계 */
char	v_st_proc[2] = "P";		/* 처리상태 (P:Processing, N:Normal Termination, A:Abnormal Termination) */
char	v_cl_data_use[2] = "A";		/* Data 활용구분 */
char	v_id_crt_user[5];		/* 생성 UserID */
char	v_paydate[7];                   /* 지급년월 */
char	v_yyyymm[7];                    /* 지급년월 */
char    v_yyyy[5]; 			/* 지급년 */
char    v_mm[3];			/* 지급월 */
double  v_amttot = 0;                   /* 과세표준금액총액   */
double  v_amtin  = 0;			/* 결정소득세총액   */
double  v_amtju  = 0;			/* 결정주민세총액   */
double  v_amtnong  = 0;  		/* 결정주민세총액   */
char	v_orgnum[4];                    /* 휴직조직차수 dsa2000 */  
char	v_deptcode[6];                  /* 휴직부서코드 dsa2000 */

/****************************************************************************** 
  Interface Employee Table Variables
******************************************************************************/ 
char	v_rst_validation[2] = "A";

EXEC SQL END   DECLARE SECTION;

/****************************************************************************** 
  Other Variables
******************************************************************************/ 
/*char	logdir[100] = "/hper/insa/ERP/log/";*/
char    *HOMEDIR;
char	logfile[40];
char	logfile_fullname[140];
int	id;
char	buff[1000];

/*=== dsa2000 2004.12. Rexec대체 서비스를 위한 =============*/
char    log_rundate[16]     = ""; 
char    log_progid[16]      = "";
char    log_writeman[5]     = "";
char    log_buff[100]       = "";
int     seqno = 0; 

/***** Log File Pointer *****/
FILE *fp;	

void main(int argc, char *argv[])
{
       if (argc != 7) { /* pkmpyserp 200403 H07 EK140 D006 pkmp2erp1 2004110100000 */
	   printf("[Usage] : pkmpyserp 1.지급년월(YYYYMM) 2.휴직자orgnum 3.휴직자deptcode \n");
	   printf("[Usage] :           4.작업자 5.progid 6.시작시간\n");
	   fclose(fp);
	   exit(1);
	}        
	
	sprintf(v_paydate, argv[1]);	        /* 지급년월   */     
	
	
	/* Dsa2000  2004.02.23.	**********************************/
	/* DB_connect(id,0); */
	hinsa_log_print(0,"ERP 인터페이스 시작...");        
        hinsa_db_connect();  /*DB Connect 실시..*/
	/*dsa2000  수정..End......................................*/
	
	/*=== dsa2000 2004.11. Rexec대체 서비스를 위한 =============*/
	strcpy(log_writeman, argv[4]);
	strcpy(log_progid,   argv[5]);
	strcpy(log_rundate,  argv[6]);	
		
	EXEC SQL DECLARE log_db DATABASE;    
	hinsa_log_db_connect();
	/*========================================================*/
	
	InitVariables();		/* 변수 초기화 */
	Initialize();			/* 초기화 루틴 */
	CreateLog();
	
	printf("작업 시작......................................... >\n");

	sprintf(buff, "프로그램명 : %s\n", argv[0]);
	WriteLog(buff);
	sprintf(buff, "지급년월  : %s\n", argv[1]);
	WriteLog(buff);
	sprintf(buff, "휴직자 조직차수 : %s\n", argv[2]); /* 휴직자 조직차수  dsa2000  2004.01.29 추가*/     
	WriteLog(buff);
	sprintf(buff, "휴직자 부서코드 : %s\n", argv[3]); /* 휴직자 부서코드  dsa2000  2004.01.29 추가*/     
	WriteLog(buff);

	sprintf(v_paydate, argv[1]);	        /* 지급년월   */     
        sprintf(v_yyyy,"%4.4s",v_paydate);	/* 지급년   */     
        sprintf(v_mm  ,"%2s",v_paydate+4);	/* 지급월   */     
        sprintf(v_orgnum,      argv[2]);        /* 휴직자 조직차수  dsa2000  2004.01.29 추가*/     
	sprintf(v_deptcode,    argv[3]);        /* 휴직자 부서코드  dsa2000  2004.01.29 추가*/     
        sprintf(v_id_crt_user, argv[4]);	/* 작업자사번 */	
       
	if (WriteControl(0) == -1) {		/* 초기값 세팅 */
		fclose(fp);
		exit(1);
	}

	if (WriteEmployee() == -1)
	{
		WriteControl(2);	/* 비정상종료 */
		Write_batlog(seqno++, "ERROR ====== [작업 실패] =====\n");   /*dsa2000 Rexec 대체*/
		error_quit("ERROR ====== [작업 실패] =====\n");		/*Dsa2000*/
	}        
	else
	{
		WriteControl(1); 	/* 정상종료 */	
		fclose(fp);
        	printf("총  건  수    : %d\n", v_cnt_line);
		printf("차감소득세    : %0.0f\n", v_amttot);
		printf("소득세합계    : %0.0f\n", v_amtin);
		printf("주민세합계    : %0.0f\n", v_amtju);
		printf("농특세합계    : %0.0f\n", v_amtnong);				
		
		sprintf(log_buff, "총  건  수    : %d\n", v_cnt_line);
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		sprintf(log_buff, "차감소득세    : %0.0f\n", v_amttot);
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		sprintf(log_buff, "소득세합계    : %0.0f\n", v_amtin);
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		sprintf(log_buff, "주민세합계    : %0.0f\n", v_amtju);
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		sprintf(log_buff, "농특세합계    : %0.0f\n", v_amtnong);
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		
		Write_batlog(seqno++, "OK ====== [작업 완료] =====\n");   /*dsa2000 Rexec 대체*/
		hinsa_exit(0,"OK ====== [작업 완료] =====\n");		/*Dsa2000*/
	}
    
}


void CreateLog()
{	/*2004.04.23 logdir => HOMEDIR*/
	HOMEDIR = hinsa_home();
	strcat(HOMEDIR,"/log/ERPlog/");
	
	/* 로그파일명을 세팅 */
	sprintf(logfile_fullname, "%spkmpyserp%s%02d.log", HOMEDIR, v_dt_create, v_no_crt_srl);
	printf("logfile_fullname : %s \n", logfile_fullname);
	/* 로그파일 오픈 */
	fp = fopen(logfile_fullname, "w+");

	if (fp == NULL) {
		printf("로그파일오픈(%s) 에러\n", logfile_fullname);
		exit(1);
	}
}

void InitVariables(void)
{
	memset(logfile, NULL, sizeof(logfile));
	memset(logfile_fullname, NULL, sizeof(logfile_fullname));

	memset(v_dt_create, NULL, sizeof(v_dt_create));
	memset(v_ym_acct, NULL, sizeof(v_ym_acct));
}

void Initialize(void)
{
	EXEC SQL 
	SELECT	TO_CHAR(SYSDATE, 'YYYYMMDD') DT_CREATE,  
		TO_CHAR(SYSDATE, 'YYYYMM') YM_ACCT	
	INTO   
		:v_dt_create, :v_ym_acct
	FROM	DUAL;


	if (sqlca.sqlcode != 0)
	{
		printf("ORA-%05d - 현재날짜 가져오기  Error\n", sqlca.sqlcode);
		fclose(fp);
		exit(1);
	}

	EXEC SQL 
	SELECT	NVL(MAX(NO_CRT_SRL),0)
	INTO	:v_no_crt_srl	
	/*FROM	HIT_CTRL_TEST                /* 테스트시에 사용 */
	FROM	HIT_CTRL@HAIS                /* 20030129 parksh ERP -> HAIS로 DB명 변경*/
	WHERE	DT_CREATE = TO_DATE(:v_dt_create, 'YYYYMMDD')
	  AND	CD_DATA = :v_cd_data;

	if ((sqlca.sqlcode != 0) && (sqlca.sqlcode != -1403) && (sqlca.sqlcode != -1405)) {
		printf("ORA-%05d - MAX Seril# 가져오기  Error\n", sqlca.sqlcode);
		fclose(fp);
		exit(1);
	} 
	v_no_crt_srl++;	/* 현재날짜의 생성일련번호 + 1 */
}

void WriteLog(char *message)
{
	fprintf(fp, "%s", message);
}

int WriteControl(int gubun)
{
	sprintf(buff, "< WriteControl Starting (Gubun : %d) >----------------\n", gubun);
	
	if (gubun == 1)
		sprintf(v_st_proc, "N");
	else if (gubun == 2)
		sprintf(v_st_proc, "A");

	WriteLog(buff);
	sprintf(buff, "v_dt_create : (%s)\n", v_dt_create);
	WriteLog(buff);
	sprintf(buff, "v_cd_data : (%s)\n", v_cd_data);
	WriteLog(buff);
	sprintf(buff, "v_no_crt_srl : (%d)\n", v_no_crt_srl);
	WriteLog(buff);
	sprintf(buff, "v_ym_acct : (%s)\n", v_ym_acct);
	WriteLog(buff);
	sprintf(buff, "v_ph_proc : (%s)\n", v_ph_proc);
	WriteLog(buff);
	sprintf(buff, "v_st_proc : (%s)\n", v_st_proc);
	WriteLog(buff);
	sprintf(buff, "v_cl_data_use : (%s)\n", v_cl_data_use);
	WriteLog(buff);
	sprintf(buff, "v_id_crt_user : (%s)\n", v_id_crt_user);
	WriteLog(buff);
	sprintf(buff, "v_cnt_line : (%d)\n", v_cnt_line);
	WriteLog(buff);

	/*printf("v_dt_create : %s\n",v_dt_create);
	printf("v_cd_data : %s\n",v_cd_data);
	printf("v_no_crt_srl : %d\n",v_no_crt_srl);
	printf("v_ym_acct : %s\n",v_ym_acct);
	printf("v_ph_proc : %s\n",v_ph_proc);
	printf("v_st_proc : %s\n",v_st_proc);
	printf("v_cl_data_use : %s\n",v_cl_data_use);
	printf("v_id_crt_user : %s\n",v_id_crt_user);
	printf("v_cnt_line : %d\n",v_cnt_line); */
		
	if (gubun == 0) {	/* 작업시작시 Control Table Insert */

		EXEC SQL
		/*INSERT  INTO HIT_CTRL_TEST                       /* 테스트시에 사용 */
		INSERT  INTO HIT_CTRL@HAIS                       /* 20030129 parksh ERP -> HAIS로 DB명 변경*/
		       (DT_CREATE,  CD_DATA,   NO_CRT_SRL,      YM_ACCT,
		        PH_PROC,    ST_PROC,   CL_DATA_USE,	ID_CRT_USER)
		VALUES (TO_DATE(:v_dt_create, 'YYYYMMDD'), 
			:v_cd_data, :v_no_crt_srl, :v_ym_acct,
			:v_ph_proc, :v_st_proc, :v_cl_data_use,  :v_id_crt_user);
			
	} else if (gubun == 1) {	/* 정상종료시 Control Table Update */             

		EXEC SQL
		/*UPDATE	HIT_CTRL_TEST                     /* 테스트시에 사용 */
		UPDATE	HIT_CTRL@HAIS                     /* 20030129 parksh ERP -> HAIS로 DB명 변경*/
		SET	CNT_LINE = :v_cnt_line,		  /* 처리건수 */
			ST_PROC  = :v_st_proc,		  /* 처리상태 "N" */	
                        AMT_TOT  = :v_amttot,             /* 차감소득세 */
			DT_CRT_COMP = SYSDATE		  /* 작업완료일자 */
		WHERE	DT_CREATE = TO_DATE(:v_dt_create, 'YYYYMMDD')
		  AND	CD_DATA = :v_cd_data
		  AND	NO_CRT_SRL = :v_no_crt_srl;
	} else if (gubun == 2) {	/* 비정상종료시 Control Table Update */

		EXEC SQL
		/*UPDATE	HIT_CTRL_TEST                     /* 테스트시에 사용 */
		UPDATE	HIT_CTRL@HAIS                     /* 20030129 parksh ERP -> HAIS로 DB명 변경*/
		SET	ST_PROC = :v_st_proc,	          /* 처리상태를 "A"로 세팅 */	
                        AMT_TOT = :v_amttot               /* 차감소득세총액 */
		WHERE	DT_CREATE = TO_DATE(:v_dt_create, 'YYYYMMDD')
		  AND	CD_DATA = :v_cd_data
		  AND	NO_CRT_SRL = :v_no_crt_srl;
	}

	if (sqlca.sqlcode != 0) {
		sprintf(buff, "ORA-%05d - Control Table Error ( Gubun : %d )\n",sqlca.sqlcode, gubun);
		WriteLog(buff);

		printf("Fail Program End 1 ( Gubun : %d , sqlcode : %d).... >\n", gubun, sqlca.sqlcode);
		EXEC SQL ROLLBACK WORK;
		return(-1);
	} else {
		sprintf(buff, "< WriteControl Ending (Gubun : %d) >----------------------\n", gubun);
		WriteLog(buff);

		EXEC SQL COMMIT WORK;

		if (gubun == 1) 
			printf("OK Program End......................................... >\n");
		else if (gubun == 2)
			printf("Fail Program End 1 ( Gubun : %d , sqlcode : %d).... >\n", gubun, sqlca.sqlcode);

		return(0);
	}
}

int WriteEmployee(void)
{
	WriteLog("< WriteHTX_V_VAT04 Starting >-------------------------------\n");

	sprintf(buff, "v_dt_create : (%s)\n", v_dt_create);
	WriteLog(buff);
	sprintf(buff, "v_cd_data : (%s)\n", v_cd_data);
	WriteLog(buff);
	sprintf(buff, "v_no_crt_srl : (%d)\n", v_no_crt_srl);
	WriteLog(buff);
	sprintf(buff, "v_rst_validation : (%s)\n", v_rst_validation);
	WriteLog(buff);

	printf("생성일   v_dt_create  : %s\n",    v_dt_create);
	printf("자료구분 v_cd_data    : %s\n",    v_cd_data);
	printf("순서     v_no_crt_srl : %d\n",    v_no_crt_srl);
	printf("신고년월 v_yyyy       : %s %s\n", v_yyyy, v_mm);
	printf("생성일   v_orgnum     : %s %s\n", v_orgnum, v_deptcode);
	
        /* 20030129 PARKSH  HTX_W_HR01_W->HTX_V_VAT04로 변경*/
	EXEC SQL INSERT INTO HTX_V_VAT04 (
	     DT_CREATE           ,
	     CD_DATA             ,
	     NO_CRT_SRL          ,
	     H_YEAR              ,
	     H_MONTH             ,
	     H_SSCODE	         ,
	     H_JIGUB_YMD	 ,
	     H_UNIT	         ,
	     H_DEPT	         ,
	     H_EMPNO	         ,
	     H_JUMIN	         ,
	     H_ALIEN	         ,
	     H_JOSEO             ,
	     H_REGISTER          ,
	     H_BUNRI             ,
	     H_NAME              ,
	     H_POSTNO            ,
	     H_ADDRESS           ,
	     H_KSYMD_FROM        ,
	     H_KSYMD_TO          ,
	     H_KMYMD_FROM        ,
	     H_KMYMD_TO          ,
	     H_JOO_PAY           ,
	     H_JOO_BONUS         ,
	     H_JOO_INJUNG        ,
	     H_JOO_TEMP1         ,
	     H_JOO_TEMP2         ,
	     H_JOO_TOTAL         ,
	     H_FREE_OVERSEA      ,
	     H_FREE_NIGHT        ,
	     H_FREE_TECH         ,
	     H_FREE_TEMP1        ,
	     H_FREE_TEMP2        ,
	     H_FREE_TEMP3        ,
	     H_FREE_TOTAL        ,
	     H_WOLJUNG           ,
	     H_BASE_PAY          ,
	     H_LABOR_GONG        ,
	     H_LABOR_PAY         ,
	     H_BASE_ME           ,
	     H_BASE_MATE         ,
	     H_BASE_SUPPORT_SU   ,
	     H_BASE_SUPPORT_MONEY,
	     H_BASE_TEMP1        ,
	     H_BASE_TEMP2        ,
	     H_BASE_TEMP3        ,
	     H_BASE_TEMP4        ,
	     H_BASE_TEMP5        ,
	     H_BASE_TEMP6        ,
	     H_ADD_OLD_SU        ,
	     H_ADD_OLD_MONEY     ,
	     H_ADD_JANG_SU       ,
	     H_ADD_JANG_MONEY    ,
	     H_ADD_SON_SU        ,
	     H_ADD_SON_MONEY     ,
	     H_ADD_LADY          ,
	     H_ADD_TEMP1         ,
	     H_ADD_TEMP2         ,
	     H_ADD_TEMP3         ,
	     H_ADD_TEMP4         ,
	     H_ADD_TEMP5         ,
	     H_ADD_TEMP6         ,
	     H_SOSUGONG          ,
	     H_SPECIAL_INSURANCE ,
	     H_SPECIAL_MEDICAL   ,
	     H_SPECIAL_EDUCATE   ,
	     H_SPECIAL_HOUSE     ,
	     H_SPECIAL_DONATE    ,
	     H_SPECIAL_SIN       ,
	     H_SPECIAL_TEMP1     ,
	     H_SPECIAL_TEMP2     ,
	     H_SPECIAL_TEMP3     ,
	     H_SPECIAL_TEMP4     ,
	     H_SPECIAL_TEMP5     ,
	     H_SPECIAL_TEMP6     ,
	     H_SPECIAL_TOTAL     ,
	     H_CHAGAM            ,
	     H_PERSON_GONG       ,
	     H_WORKING_GONG      ,
	     H_JOHAB_GONG        ,
	     H_GONG_TEMP1        ,
	     H_GONG_TEMP2        ,
	     H_GONG_TEMP3        ,
	     H_GONG_TEMP4        ,
	     H_GONG_TEMP5        ,
	     H_GONG_TEMP6        ,
	     H_STANDARD          ,
	     H_SANCHUL           ,
	     H_SGONG_LABOR       ,
	     H_SGONG_ASSETS      ,
	     H_SGONG_HOUSE       ,
	     H_SGONG_OVERSEA     ,
	     H_SGONG_STOCK       ,
	     H_SGONG_TEMP1       ,
	     H_SGONG_TEMP2       ,
	     H_SGONG_TEMP3       ,
	     H_SGONG_TEMP4       ,
	     H_SGONG_TEMP5       ,
	     H_SGONG_TEMP6       ,
	     H_SGONG_TOTAL       ,
	     H_SGM_PAY           ,
	     H_SGM_JOGAM         ,
	     H_SGM_TEMP1         ,
	     H_SGM_TEMP2         ,
	     H_SGM_TEMP3         ,
	     H_SGM_TEMP4         ,
	     H_SGM_TEMP5         ,
	     H_SGM_TEMP6         ,
	     H_SGM_TOTAL         ,
	     H_DECIDE_SO         ,
	     H_DECIDE_NONG       ,
	     H_DECIDE_JOO        ,
	     H_DECIDE_TOTAL      ,
	     H_NAP_JONG_SO       ,
	     H_NAP_JONG_NONG     ,
	     H_NAP_JONG_JOO      ,
	     H_NAP_JONG_TOTAL    ,
	     H_NAP_HYUN_SO       ,
	     H_NAP_HYUN_NONG     ,
	     H_NAP_HYUN_JOO      ,
	     H_NAP_HYUN_TOTAL    ,
	     H_SIL_SO            ,
	     H_SIL_NONG          ,
	     H_SIL_JOO           ,
	     H_SIL_TOTAL         ,
	     RST_VALIDATION      ,	
/* ================================================================================
   Version    date(yy.mm.dd)     programmer      description
     2.00      2002.01.02         유효성         소득세법 개정에 따른 필드추가
                                                 (표준공제, 연금보험, 연금저축,납세조합, 증권저축)
   =============================================================================== */
             H_SPECIAL_STANDARD  ,
             H_SPECIAL_YK_BO     ,
             H_PERSON_SAVE       ,
             H_SGONG_JOHAP       ,
             H_SGONG_JUNGKEN     ,
/* ===========================================================================
   Version    date(yy.mm.dd)     programmer      description
     3.00       2002.01.16         유효성         근무지 필드 추가  -개인별 인사마스터의 근무지를 넘긴다.
============================================================================= */
             H_GUNMU             ,
             H_SGONG_FOREIGNER   , /*Dsa2000 2004.01.29. 세법변경에 따른 칼럼 추가.(외국인 추가공제)*/
             H_CORPNAME          , /*전근무지 관련 추가  dsa2000  2005.02.add*/
             H_CORPNAME1         , /*전근무지 관련 추가  dsa2000  2005.02. add*/         
             H_CORPNO            , /*전근무지 관련 추가  dsa2000  2005.02. add*/         
             H_CORPNO1           , /*전근무지 관련 추가  dsa2000  2005.02. add*/         
             H_PAYSUM            , /*전근무지 관련 추가  dsa2000  2005.02. add*/         
             H_PAYSUM1           , /*전근무지 관련 추가  dsa2000  2005.02. add*/         
             H_BONSUM            , /*전근무지 관련 추가  dsa2000  2005.02. add*/         
             H_BONSUM1           , /*전근무지 관련 추가  dsa2000  2005.02. add*/         
             H_BCOGBONSUM        , /*전근무지 관련 추가  dsa2000  2005.02. add*/         
             H_MEDAMT            , /*전근무지 관련 추가  dsa2000  2005.02. add*/         
             H_MEDAMT1           , /*전근무지 관련 추가  dsa2000  2005.02. add*/         
             H_HIREAMT           , /*전근무지 관련 추가  dsa2000  2005.02. add*/         
             H_HIREAMT1          , /*전근무지 관련 추가  dsa2000  2005.02. add*/         
             H_ANUAMT            , /*전근무지 관련 추가  dsa2000  2005.02. add*/         
             H_ANUAMT1           , /*전근무지 관련 추가  dsa2000  2005.02. add*/         
             H_FAMI70NO          , /*2004년 귀속  dsa2000  2005.02. add*/         
             H_SPECADDNO         , /*2004년 귀속  dsa2000  2005.02. add*/         
             H_SPECADDDED        , /*2004년 귀속  dsa2000  2005.02. add*/         
             H_SHOSAMT           , /*2004년 귀속  dsa2000  2005.02. add*/         
             H_HOUSEINTAMT2        /*2004년 귀속  dsa2000  2005.02. add*/             
        )	
	SELECT 	
	     TO_DATE(:v_dt_create, 'YYYYMMDD') DT_CREATE,/*생성일*/
	     :v_cd_data 	      CD_DATA,              /*자료구분*/	
	     :v_no_crt_srl	      NO_CRT_SRL,           /*순서*/
	     :v_yyyy    	      H_YEAR,               /*신고년*/     		
	     :v_mm      	      H_MONTH,              /*신고월*/		
	     'A20'                    H_SSCODE,	            /*소득관리코드*/
	     /*:v_paydate             H_JIGUB_YMD,	    /*지급일*/	/*dsa2000 2004.04.06. 회의결과에 따라 A.subdate로 변경*/
	     A.subdate                H_JIGUB_YMD,	    /*지급일*/	
	     '000'                    H_UNIT,	            /*사업장*/
	     /*20040128 Dsa2000 휴직자 조직차수/부서코드 아큐먼트로 처리토록 변경 */ 
	     /*decode(a.orgnum ,'H06',C.FINCODE,'1DB30')   H_DEPT,   /*부서*/
	     decode(a.orgnum , :v_orgnum, C.FINCODE, :v_deptcode)   H_DEPT,     /*휴직자 부서: 인력개발팀*/   
	     A.empno               H_EMPNO,	            /*사번*/		
	     nvl(A.juminid,B.juminid)   H_JUMIN,	    /*주민등록번호*/
	     '1'                   H_ALIEN,	            /*내외국인 구분*/	
	     '2'                   H_JOSEO,              /*지급조서제출구분*/	
	     '1'                   H_REGISTER,           /*거주자 구분*/		
	     '1'                   H_BUNRI,              /*분리과세구분*/	
	     A.korname             H_NAME,               /*성 명*/		
	     A.zipno               H_POSTNO,             /*우편번호*/		
	     SUBSTRB(A.ADDR,1,70)  H_ADDRESS,            /*주소*/		
	     A.YSFRDATE            H_KSYMD_FROM,         /*귀속일_from*/		
	     A.YSTODATE            H_KSYMD_TO,           /*귀속일_to*/		
	     A.YSFRDATE            H_KMYMD_FROM,         /*감면일_from*/             
	     A.YSTODATE            H_KMYMD_TO,           /*감면일_to*/          		
	     NVL(MPAYSUM, 0)       H_JOO_PAY,            /*주사업장-급여*/	
	     NVL(MBONSUM, 0)       H_JOO_BONUS,          /*주사업장-상여*/	
	     NVL(MCOGBONSUM, 0)    H_JOO_INJUNG,         /*주사업장-인정상여*/ 	
	     NVL(MGITASODK, 0)     H_JOO_TEMP1,          /*주사업장-temp1*/	
	     0                     H_JOO_TEMP2,          /*주사업장-temp2*/	
	     NVL(MPAYSUM,0) + NVL(MBONSUM,0)+ NVL(MCOGBONSUM,0)+ NVL(MGITASODK,0)  H_JOO_TOTAL,          /*주사업장-total*/	
	     0		      H_FREE_OVERSEA,
	     0                     H_FREE_NIGHT,         /*비과세 야간근로*/	
	     0                     H_FREE_TECH,          /*비과세 기술*/		
	     NVL(MNOTAX,0)         H_FREE_TEMP1,         /*비과세 temp1*/		
	     0                     H_FREE_TEMP2,         /*비과세 temp2*/		
	     0                     H_FREE_TEMP3,         /*비과세 temp3*/		
	     NVL(MNOTAX,0)         H_FREE_TOTAL,         /*비과세 계*/		
	     NVL(LASTMONPAY,0)     H_WOLJUNG,            /*월정급여액*/		
	     NVL(TAXGROSS,0)       H_BASE_PAY,           /*과세대상급여*/	
	     NVL(LABORDED,0)       H_LABOR_GONG,         /*근로소득공제*/	
	     NVL(LABORAMT,0)       H_LABOR_PAY,          /*근로소득급여*/	
	     NVL(SELFDED,0)        H_BASE_ME,            /*기본 본인*/		
	     NVL(MATEDED,0)        H_BASE_MATE,          /*기본 배우자*/		
	     NVL(FAMIDED,0)/1000000 H_BASE_SUPPORT_SU,    /*기본 부양가족 수*/	
	     NVL(FAMIDED,0)        H_BASE_SUPPORT_MONEY, /*기본 부양가족 액*/	
	     0                     H_BASE_TEMP1,         /*기본 TEMP1*/		
	     0                     H_BASE_TEMP2,         /*기본 TEMP2*/		
	     0                     H_BASE_TEMP3,         /*기본 TEMP3*/		
	     0                     H_BASE_TEMP4,         /*기본 TEMP4*/		
	     0                     H_BASE_TEMP5,         /*기본 TEMP5*/		
	     0                     H_BASE_TEMP6,         /*기본 TEMP6*/		
	     (FAMI65NO+FAMI70NO)   H_ADD_OLD_SU,         /*추가 경로우대 수*/  	
	     NVL(OLDDED,0)         H_ADD_OLD_MONEY,      /*추가 경로우대 금액*/	
	     NVL(OBSDED,0)/1000000 H_ADD_JANG_SU,        /*추가 장애자 수*/	
	     NVL(OBSDED,0)         H_ADD_JANG_MONEY,     /*추가 장애자 금액*/	
	     NVL(CHILDNO,0)        H_ADD_SON_SU,         /*추가 자녀 수*/       	
	     NVL(CHILDDED,0)       H_ADD_SON_MONEY,      /*추가 자녀 금액*/	
	     NVL(WOMANDED,0)       H_ADD_LADY,           /*추가 부녀자공제*/	
	     0              	      H_ADD_TEMP1,          /*추가 TEMP1*/		
	     0                     H_ADD_TEMP2,          /*추가 TEMP2*/		
	     0                     H_ADD_TEMP3,          /*추가 TEMP3*/		
	     0                     H_ADD_TEMP4,          /*추가 TEMP4*/		
	     0                     H_ADD_TEMP5,          /*추가 TEMP5*/		
	     0                     H_ADD_TEMP6,          /*추가 TEMP6*/		
             NVL(FEWDED, 0)        H_SOSUGONG,           /*소수공제액*/		
	     NVL(INSDED ,0)        H_SPECIAL_INSURANCE,  /*특별 보험료*/		
	     NVL(HOSDED, 0)        H_SPECIAL_MEDICAL,    /*특별 의료비*/		
	     NVL(EDUDED, 0)        H_SPECIAL_EDUCATE,    /*특별 교육비*/		
	     NVL(HOUSEDED,0)       H_SPECIAL_HOUSE,      /*특별 주택자금*/	
	     NVL(GIVEDED,0)        H_SPECIAL_DONATE,     /*특별 기부금*/		
	     NVL(CREDITDED, 0)     H_SPECIAL_SIN,        /*특별 신용카드*/	
	     0                     H_SPECIAL_TEMP1,      /*특별 TEMP1*/		
	     0                     H_SPECIAL_TEMP2,      /*특별 TEMP2*/		
	     0                     H_SPECIAL_TEMP3,      /*특별 TEMP3*/		
	     0                     H_SPECIAL_TEMP4,      /*특별 TEMP4*/		
	     0                     H_SPECIAL_TEMP5,      /*특별 TEMP5*/		
	     0                     H_SPECIAL_TEMP6,      /*특별 TEMP6*/		
	     NVL(SPECIALDED,0)     H_SPECIAL_TOTAL,      /*특별 계*/		
	     0                     H_CHAGAM,             /*차감소득*/		
	     NVL(PENDED, 0)        H_PERSON_GONG,        /*개인연금 소득*/	
	     0                     H_WORKING_GONG,       /*현장공제*/		
	     NVL(TINVESTDED,0)     H_JOHAB_GONG,         /*조합출자공제 parksh 20030129 INVESTDED->TINVESTDED */	
	     0                     H_GONG_TEMP1,         /*공제 TEMP1*/		
	     0                     H_GONG_TEMP2,         /*공제 TEMP2*/		
	     0                     H_GONG_TEMP3,         /*공제 TEMP3*/		
	     0                     H_GONG_TEMP4,         /*공제 TEMP4*/		
	     0                     H_GONG_TEMP5,         /*공제 TEMP5*/		
	     0                     H_GONG_TEMP6,         /*공제 TEMP6*/		
	     NVL(TAXLEVEL ,0)      H_STANDARD,           /*과세표준*/		
	     NVL(CALCTAX ,0)       H_SANCHUL,            /*산출세액*/		
	     NVL(INCOMTDED,0)      H_SGONG_LABOR,        /*세액공제 근로소득*/	
	     NVL(PROPDED, 0)       H_SGONG_ASSETS,       /*세액공제 재형저축*/	
	     NVL(HLOANDED, 0)      H_SGONG_HOUSE,        /*세액공제 주택차입*/	
	     NVL(FORIDED, 0)       H_SGONG_OVERSEA,      /*세액공제 외국납부*/	
	     NVL(STKDED , 0)       H_SGONG_STOCK,        /*세액공제 주식저축*/	
	     nvl(polided,0)        H_SGONG_TEMP1,        /*세액공제 정치자금 dsa2000  2004 add */	
	     0                     H_SGONG_TEMP2,        /*세액공제 TEMP2*/	
	     0                     H_SGONG_TEMP3,        /*세액공제 TEMP3*/	
	     0                     H_SGONG_TEMP4,        /*세액공제 TEMP4*/	
	     0                     H_SGONG_TEMP5,        /*세액공제 TEMP5*/	
	     0                     H_SGONG_TEMP6,        /*세액공제 TEMP6*/	
	     NVL(TDEDSUM,0)        H_SGONG_TOTAL,        /*세액공제 TOTAL*/	
	     0                     H_SGM_PAY,            /*세액감면 소득세법*/	
	     0                     H_SGM_JOGAM,          /*세액감면 조감법*/	
	     0                     H_SGM_TEMP1,          /*세액감면 TEMP1*/	
	     0                     H_SGM_TEMP2,          /*세액감면 TEMP2*/	
	     0                     H_SGM_TEMP3,          /*세액감면 TEMP3*/	
	     0                     H_SGM_TEMP4,          /*세액감면 TEMP4*/	
	     0                     H_SGM_TEMP5,          /*세액감면 TEMP5*/	
	     0                     H_SGM_TEMP6,          /*세액감면 TEMP6*/	
	     0                     H_SGM_TOTAL,          /*세액감면 TOTAL*/	
	     NVL(DINTAX,0)         H_DECIDE_SO,          /*결정 소득액*/		
	     NVL(DNONGTAX,0)       H_DECIDE_NONG,        /*결정 농특세*/		
	     NVL(DJUTAX,0)         H_DECIDE_JOO,         /*결정 주민세*/		
	     NVL(DINTAX,0)   + NVL(DJUTAX,0)   + NVL(DNONGTAX, 0)   H_DECIDE_TOTAL,      /*TOTAL*/		
	     NVL(BINTAX,0)   + NVL(BINTAX1,0)                       H_NAP_JONG_SO,       /*기납부 종 소득세*/	
	     NVL(BNONGTAX,0) + NVL(BNONGTAX1,0)                     H_NAP_JONG_NONG,     /*기납부 종 농특세*/	
	     NVL(BJUTAX,0)   + NVL(BJUTAX1,0)                       H_NAP_JONG_JOO,      /*기납부 종 주민세*/	
	     NVL(BINTAX,0)   + NVL(BJUTAX, 0)  + NVL(BNONGTAX, 0) +
	     NVL(BINTAX1,0)  + NVL(BJUTAX1, 0) + NVL(BNONGTAX1, 0)  H_NAP_JONG_TOTAL,    /*기납부 종 TOTAL*/
	     NVL(MINTAX,0)         H_NAP_HYUN_SO,        /*기납부 현 소득세*/	
	     NVL(MNONGTAX,0)       H_NAP_HYUN_NONG,      /*기납부 현 농특세*/	
	     NVL(MJUTAX ,0)        H_NAP_HYUN_JOO,       /*기납부 현 주민세*/	
	     NVL(MINTAX,0)   + NVL(MJUTAX, 0)  + NVL(MNONGTAX, 0)   H_NAP_HYUN_TOTAL,     /*기납부 현 TOTAL*/	
	     NVL(YINTAX ,0)        H_SIL_SO,             /*차감징수 소득세   control sum */	
	     NVL(YNONGTAX, 0)      H_SIL_NONG,           /*차감징수 농특세*/   	
	     NVL(YJUTAX ,0)        H_SIL_JOO,            /*차감징수 주민세*/   	
	     NVL(YINTAX, 0)  + NVL(YJUTAX,0)   + NVL(YNONGTAX,0)    H_SIL_TOTAL,          /*차감징수 TOTAL*/     
	     :v_rst_validation RST_VALIDATION,
/* ===========================================================================
   Version     date(yy.mm.dd)     programmer      description
     2.00      2002.01.02         유효성         소득세법 개정에 따른 필드추가
                                                 (표준공제, 연금보험, 연금저축,납세조합, 증권저축)
   ========================================================================== */
             NVL(STANDDED,0)       H_SPECIAL_STANDARD  ,  /*표준공제*/
             NVL(ANUDED,0)         H_SPECIAL_YK_BO     ,  /*연금보험*/
             NVL(NPENDED,0)        H_PERSON_SAVE       ,  /*연금저축*/
             0                     H_SGONG_JOHAP       ,  /*납세조합*/
             NVL(TLSTKDED,0)       H_SGONG_JUNGKEN     ,  /*증권저축 parksh 20030129 LSTKDED->TLSTKDED*/	
/* ===========================================================================
   Versiondate(yy.mm.dd)     programmer      description
     3.00   2002.01.16         유효성         근무지 필드 추가                                                       
                                                 -개인별 인사마스터의 근무지를 넘긴다.
============================================================================ */
             NVL(JOBPLACE, 'A1')   H_GUNMU             , /*근무지--널이면 본사로 */
             NVL(FOREIGNDED,0)     H_SGONG_FOREIGNER   , /*Dsa2000 2004.01.29. 세법변경에 따른 칼럼 추가.(외국인 추가공제)*/
             NVL(BCORPNAME,'')     H_CORPNAME          , /*2004년 귀속  dsa2000  2005.02.add*/
             NVL(BCORPNAME1,'')    H_CORPNAME1         , /*2004년 귀속  dsa2000  2005.02. add*/         
             NVL(BCORPNO,'')       H_CORPNO            , /*2004년 귀속  dsa2000  2005.02. add*/         
             NVL(BCORPNO1,'')      H_CORPNO1           , /*2004년 귀속  dsa2000  2005.02. add*/         
             NVL(BPAYSUM,0)        H_PAYSUM            , /*2004년 귀속  dsa2000  2005.02. add*/         
             NVL(BPAYSUM1,0)       H_PAYSUM1           , /*2004년 귀속  dsa2000  2005.02. add*/         
             NVL(BBONSUM,0)        H_BONSUM            , /*2004년 귀속  dsa2000  2005.02. add*/         
             NVL(BBONSUM1,0)       H_BONSUM1           , /*2004년 귀속  dsa2000  2005.02. add*/         
             NVL(BCOGBONSUM,0)     H_BCOGBONSUM        , /*전근무지 관련 추가  dsa2000  2005.02. add*/         
             NVL(BMEDAMT,0)        H_MEDAMT            , /*2004년 귀속  dsa2000  2005.02. add*/         
             NVL(BMEDAMT1,0)       H_MEDAMT1           , /*2004년 귀속  dsa2000  2005.02. add*/         
             NVL(BHIREAMT,0)       H_HIREAMT           , /*2004년 귀속  dsa2000  2005.02. add*/         
             NVL(BHIREAMT1,0)      H_HIREAMT1          , /*2004년 귀속  dsa2000  2005.02. add*/         
             NVL(BANUAMT,0)        H_ANUAMT            , /*2004년 귀속  dsa2000  2005.02. add*/         
             NVL(BANUAMT1,0)       H_ANUAMT1           , /*2004년 귀속  dsa2000  2005.02. add*/         
             NVL(FAMI70NO,0)       H_FAMI70NO          , /*2004년 귀속  dsa2000  2005.02. add*/         
             NVL(SPECADDNO,0)      H_SPECADDNO         , /*2004년 귀속  dsa2000  2005.02. add*/         
             NVL(SPECADDDED,0)     H_SPECADDDED        , /*2004년 귀속  dsa2000  2005.02. add*/         
             NVL(SHOSAMT,0)        H_SHOSAMT           , /*2004년 귀속  dsa2000  2005.02. add*/         
             NVL(HOUSEINTAMT2,0)   H_HOUSEINTAMT2       /*2004년 귀속  dsa2000  2005.02. add*/                          
	/*FROM    PYCDEPT C, pkmysmas A ,PKMPMAS B, PIMPMAS M */
	FROM    PYCDEPT C, PKHYSHIS A ,PKMPMAS B, PIMPMAS M  /*연말정산 이력에서 가져가도록 수정 DSA2000  2006.02.*/
	WHERE   A.EMPNO    = B.EMPNO	
	AND     A.EMPNO    = M.EMPNO(+) 
	AND	A.ORGNUM   = C.ORGNUM
	AND	A.DEPTCODE = C.DEPTCODE 
	AND     A.WORKYY   = :v_yyyy;                        /*연말정산 이력에서 가져가도록 수정 DSA2000  2006.02.*/
	
	if (sqlca.sqlcode != 0) {	/* 에러이면 */
		sprintf(log_buff, "ORA-%05d - Insert TEMP HTX_V_VAT04 Error--------\n", sqlca.sqlcode);
		WriteLog(log_buff);
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		EXEC SQL ROLLBACK WORK;
		return(-1);
		
	} else {			/* 에러가 아니면 */
		v_cnt_line = sqlca.sqlerrd[2];
		WriteLog("Insert TEMP HTX_V_VAT04 Success\n");
		sprintf(log_buff, "Process Count : %d\n", v_cnt_line);
		WriteLog(log_buff);
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		EXEC SQL COMMIT WORK;
	}
	
        /* 20030129 parksh ERP -> HAIS로 DB명 변경,HTX_W_HR01_W->HTX_V_VAT04*/
        /*EXEC SQL INSERT INTO HTX_V_VAT04_TEST (   /* 테스트시에 사용 */
	EXEC SQL INSERT INTO HTX_V_VAT04@HAIS (   /* */
	    DT_CREATE           ,
	    CD_DATA             ,
	    NO_CRT_SRL          ,
	    H_YEAR              ,
	    H_MONTH             ,
	    H_SSCODE	    ,
	    H_JIGUB_YMD	    ,
	    H_UNIT	            ,
	    H_DEPT	            ,
	    H_EMPNO	            ,
	    H_JUMIN	            ,
	    H_ALIEN	            ,
	    H_JOSEO             ,
	    H_REGISTER          ,
	    H_BUNRI             ,
	    H_NAME              ,
	    H_POSTNO            ,
	    H_ADDRESS           ,
	    H_KSYMD_FROM        ,
	    H_KSYMD_TO          ,
	    H_KMYMD_FROM        ,
	    H_KMYMD_TO          ,
	    H_JOO_PAY           ,
	    H_JOO_BONUS         ,
	    H_JOO_INJUNG        ,
	    H_JOO_TEMP1         ,
	    H_JOO_TEMP2         ,
	    H_JOO_TOTAL         ,
	    H_FREE_OVERSEA      ,
	    H_FREE_NIGHT        ,
	    H_FREE_TECH         ,
	    H_FREE_TEMP1        ,
	    H_FREE_TEMP2        ,
	    H_FREE_TEMP3        ,
	    H_FREE_TOTAL        ,
	    H_WOLJUNG           ,
	    H_BASE_PAY          ,
	    H_LABOR_GONG        ,
	    H_LABOR_PAY         ,
	    H_BASE_ME           ,
	    H_BASE_MATE         ,
	    H_BASE_SUPPORT_SU   ,
	    H_BASE_SUPPORT_MONEY,
	    H_BASE_TEMP1        ,
	    H_BASE_TEMP2        ,
	    H_BASE_TEMP3        ,
	    H_BASE_TEMP4        ,
	    H_BASE_TEMP5        ,
	    H_BASE_TEMP6        ,
	    H_ADD_OLD_SU        ,
	    H_ADD_OLD_MONEY     ,
	    H_ADD_JANG_SU       ,
	    H_ADD_JANG_MONEY    ,
	    H_ADD_SON_SU        ,
	    H_ADD_SON_MONEY     ,
	    H_ADD_LADY          ,
	    H_ADD_TEMP1         ,
	    H_ADD_TEMP2         ,
	    H_ADD_TEMP3         ,
	    H_ADD_TEMP4         ,
	    H_ADD_TEMP5         ,
	    H_ADD_TEMP6         ,
	    H_SOSUGONG          ,
	    H_SPECIAL_INSURANCE ,
	    H_SPECIAL_MEDICAL   ,
	    H_SPECIAL_EDUCATE   ,
	    H_SPECIAL_HOUSE     ,
	    H_SPECIAL_DONATE    ,
	    H_SPECIAL_SIN       ,
	    H_SPECIAL_TEMP1     ,
	    H_SPECIAL_TEMP2     ,
	    H_SPECIAL_TEMP3     ,
	    H_SPECIAL_TEMP4     ,
	    H_SPECIAL_TEMP5     ,
	    H_SPECIAL_TEMP6     ,
	    H_SPECIAL_TOTAL     ,
	    H_CHAGAM            ,
	    H_PERSON_GONG       ,
	    H_WORKING_GONG      ,
	    H_JOHAB_GONG        ,
	    H_GONG_TEMP1        ,
	    H_GONG_TEMP2        ,
	    H_GONG_TEMP3        ,
	    H_GONG_TEMP4        ,
	    H_GONG_TEMP5        ,
	    H_GONG_TEMP6        ,
	    H_STANDARD          ,
	    H_SANCHUL           ,
	    H_SGONG_LABOR       ,
	    H_SGONG_ASSETS      ,
	    H_SGONG_HOUSE       ,
	    H_SGONG_OVERSEA     ,
	    H_SGONG_STOCK       ,
	    H_SGONG_TEMP1       ,
	    H_SGONG_TEMP2       ,
	    H_SGONG_TEMP3       ,
	    H_SGONG_TEMP4       ,
	    H_SGONG_TEMP5       ,
	    H_SGONG_TEMP6       ,
	    H_SGONG_TOTAL       ,
	    H_SGM_PAY           ,
	    H_SGM_JOGAM         ,
	    H_SGM_TEMP1         ,
	    H_SGM_TEMP2         ,
	    H_SGM_TEMP3         ,
	    H_SGM_TEMP4         ,
	    H_SGM_TEMP5         ,
	    H_SGM_TEMP6         ,
	    H_SGM_TOTAL         ,
	    H_DECIDE_SO         ,
	    H_DECIDE_NONG       ,
	    H_DECIDE_JOO        ,
	    H_DECIDE_TOTAL      ,
	    H_NAP_JONG_SO       ,
	    H_NAP_JONG_NONG     ,
	    H_NAP_JONG_JOO      ,
	    H_NAP_JONG_TOTAL    ,
	    H_NAP_HYUN_SO       ,
	    H_NAP_HYUN_NONG     ,
	    H_NAP_HYUN_JOO      ,
	    H_NAP_HYUN_TOTAL    ,
	    H_SIL_SO            ,
	    H_SIL_NONG          ,
	    H_SIL_JOO           ,
	    H_SIL_TOTAL         ,
	    RST_VALIDATION      ,
/* ===============================================================================
   Version    date(yy.mm.dd)     programmer      description
     2.00      2002.01.02         유효성         소득세법 개정에 따른 필드추가
                                                (표준공제, 연금보험, 연금저축,납세조합, 증권저축)
   ============================================================================== */
            H_SPECIAL_STANDARD  ,  /*표준공제*/
            H_SPECIAL_YK_BO     ,  /*연금보험*/
            H_PERSON_SAVE       ,  /*연금저축*/
            H_SGONG_JOHAP       ,  /*납세조합*/
            H_SGONG_JUNGKEN     ,  /*증권저축*/		
            H_GUNMU             ,  /*근무지*/
            H_SGONG_FOREIGNER   ,  /*Dsa2000 2004.01.29. 세법변경에 따른 칼럼 추가.(외국인 추가공제)*/
            H_CORPNAME          ,  /*2004년 귀속  dsa2000  2005.02.add*/
            H_CORPNAME1         , 
            H_CORPNO            , 
            H_CORPNO1           , 
            H_PAYSUM            , 
            H_PAYSUM1           , 
            H_BONSUM            , 
            H_BONSUM1           ,
            H_BCOGBONSUM        , /*전근무지 관련 추가  dsa2000  2005.02. add*/          
            H_MEDAMT            , 
            H_MEDAMT1           , 
            H_HIREAMT           , 
            H_HIREAMT1          , 
            H_ANUAMT            , 
            H_ANUAMT1           , 
            H_FAMI70NO          , 
            H_SPECADDNO         , 
            H_SPECADDDED        , 
            H_SHOSAMT           , 
            H_HOUSEINTAMT2       /*2004년 귀속  dsa2000  2005.02. add*/            
	) SELECT
		DT_CREATE           ,
		CD_DATA             ,
		NO_CRT_SRL          ,
		H_YEAR              ,
		H_MONTH             ,
		H_SSCODE	    ,
		H_JIGUB_YMD	    ,
		H_UNIT	            ,
		H_DEPT	            ,
		H_EMPNO	            ,
		H_JUMIN	            ,
		H_ALIEN	            ,
		H_JOSEO             ,
		H_REGISTER          ,
		H_BUNRI             ,
		H_NAME              ,
		H_POSTNO            ,
		H_ADDRESS           ,
		H_KSYMD_FROM        ,
		H_KSYMD_TO          ,
		H_KMYMD_FROM        ,
		H_KMYMD_TO          ,
		H_JOO_PAY           ,
		H_JOO_BONUS         ,
		H_JOO_INJUNG        ,
		H_JOO_TEMP1         ,
		H_JOO_TEMP2         ,
		H_JOO_TOTAL         ,
		H_FREE_OVERSEA      ,
		H_FREE_NIGHT        ,
		H_FREE_TECH         ,
		H_FREE_TEMP1        ,
		H_FREE_TEMP2        ,
		H_FREE_TEMP3        ,
		H_FREE_TOTAL        ,
		H_WOLJUNG           ,
		H_BASE_PAY          ,
		H_LABOR_GONG        ,
		H_LABOR_PAY         ,
		H_BASE_ME           ,
		H_BASE_MATE         ,
		H_BASE_SUPPORT_SU   ,
		H_BASE_SUPPORT_MONEY,
		H_BASE_TEMP1        ,
		H_BASE_TEMP2        ,
		H_BASE_TEMP3        ,
		H_BASE_TEMP4        ,
		H_BASE_TEMP5        ,
		H_BASE_TEMP6        ,
		H_ADD_OLD_SU        ,
		H_ADD_OLD_MONEY     ,
		H_ADD_JANG_SU       ,
		H_ADD_JANG_MONEY    ,
		H_ADD_SON_SU        ,
		H_ADD_SON_MONEY     ,
		H_ADD_LADY          ,
		H_ADD_TEMP1         ,
		H_ADD_TEMP2         ,
		H_ADD_TEMP3         ,
		H_ADD_TEMP4         ,
		H_ADD_TEMP5         ,
		H_ADD_TEMP6         ,
		H_SOSUGONG          ,
		H_SPECIAL_INSURANCE ,
		H_SPECIAL_MEDICAL   ,
		H_SPECIAL_EDUCATE   ,
		H_SPECIAL_HOUSE     ,
		H_SPECIAL_DONATE    ,
		H_SPECIAL_SIN       ,
		H_SPECIAL_TEMP1     ,
		H_SPECIAL_TEMP2     ,
		H_SPECIAL_TEMP3     ,
		H_SPECIAL_TEMP4     ,
		H_SPECIAL_TEMP5     ,
		H_SPECIAL_TEMP6     ,
		H_SPECIAL_TOTAL     ,
		H_CHAGAM            ,
		H_PERSON_GONG       ,
		H_WORKING_GONG      ,
		H_JOHAB_GONG        ,
		H_GONG_TEMP1        ,
		H_GONG_TEMP2        ,
		H_GONG_TEMP3        ,
		H_GONG_TEMP4        ,
		H_GONG_TEMP5        ,
		H_GONG_TEMP6        ,
		H_STANDARD          ,
		H_SANCHUL           ,
		H_SGONG_LABOR       ,
		H_SGONG_ASSETS      ,
		H_SGONG_HOUSE       ,
		H_SGONG_OVERSEA     ,
		H_SGONG_STOCK       ,
		H_SGONG_TEMP1       ,
		H_SGONG_TEMP2       ,
		H_SGONG_TEMP3       ,
		H_SGONG_TEMP4       ,
		H_SGONG_TEMP5       ,
		H_SGONG_TEMP6       ,
		H_SGONG_TOTAL       ,
		H_SGM_PAY           ,
		H_SGM_JOGAM         ,
		H_SGM_TEMP1         ,
		H_SGM_TEMP2         ,
		H_SGM_TEMP3         ,
		H_SGM_TEMP4         ,
		H_SGM_TEMP5         ,
		H_SGM_TEMP6         ,
		H_SGM_TOTAL         ,
		H_DECIDE_SO         ,
		H_DECIDE_NONG       ,
		H_DECIDE_JOO        ,
		H_DECIDE_TOTAL      ,
		H_NAP_JONG_SO       ,
		H_NAP_JONG_NONG     ,
		H_NAP_JONG_JOO      ,
		H_NAP_JONG_TOTAL    ,
		H_NAP_HYUN_SO       ,
		H_NAP_HYUN_NONG     ,
		H_NAP_HYUN_JOO      ,
		H_NAP_HYUN_TOTAL    ,
		H_SIL_SO            ,
		H_SIL_NONG          ,
		H_SIL_JOO           ,
		H_SIL_TOTAL         ,
		RST_VALIDATION      ,
/* ===========================================================================
   Version    date(yy.mm.dd)     programmer      description
     2.00      2002.01.02         유효성         소득세법 개정에 따른 필드추가
                                                (표준공제, 연금보험, 연금저축,납세조합, 증권저축)
   ========================================================================== */
                H_SPECIAL_STANDARD  ,  /*표준공제*/
                H_SPECIAL_YK_BO     ,  /*연금보험*/
                H_PERSON_SAVE       ,  /*연금저축*/
                H_SGONG_JOHAP       ,  /*납세조합*/
                H_SGONG_JUNGKEN     ,  /*증권저축*/	
                H_GUNMU             ,  /*근무지*/
                H_SGONG_FOREIGNER   ,   /*Dsa2000 2004.01.29. 세법변경에 따른 칼럼 추가.(외국인 추가공제)*/		
                H_CORPNAME          ,  /*2004년 귀속  dsa2000  2005.02.add*/
                H_CORPNAME1         , 
                H_CORPNO            , 
                H_CORPNO1           , 
                H_PAYSUM            , 
                H_PAYSUM1           , 
                H_BONSUM           , 
                H_BONSUM1          , 
                H_BCOGBONSUM       , /*전근무지 관련 추가  dsa2000  2005.02. add*/          
                H_MEDAMT           , 
                H_MEDAMT1          , 
                H_HIREAMT          , 
                H_HIREAMT1         , 
                H_ANUAMT           , 
                H_ANUAMT1          , 
                H_FAMI70NO         , 
                H_SPECADDNO        , 
                H_SPECADDDED       , 
                H_SHOSAMT          , 
                H_HOUSEINTAMT2       /*2004년 귀속  dsa2000  2005.02. add*/                
	FROM	HTX_V_VAT04          /* PARKSH 20030129 HTX_W_HR01_W->HTX_V_VAT04로 변경*/
	WHERE	DT_CREATE = TO_DATE(:v_dt_create, 'YYYYMMDD')
	  AND	CD_DATA = :v_cd_data
	  AND	NO_CRT_SRL = :v_no_crt_srl;

	if (sqlca.sqlcode != 0) {	/* 에러이면 */
		v_cnt_line = 0;
		sprintf(log_buff, "ORA-%05d - Insert HAIS HTX_V_VAT04 Error\n", sqlca.sqlcode);
		WriteLog(log_buff);
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		EXEC SQL ROLLBACK WORK;		
		return(-1);
	} else {			/* 에러가 아니면 */
		if (v_cnt_line != sqlca.sqlerrd[2]) {
			printf("TEMP/ERP테이블에 Insert된 건수가 다릅니다.cnt%d err%d\n",
			        v_cnt_line , sqlca.sqlerrd[2]);	
			WriteLog("TEMP/ERP테이블에 Insert된 건수가 다릅니다.\n");
			sprintf(log_buff, "v_cnt_line : %05d\n", v_cnt_line);
			Write_batlog(seqno++, log_buff);
			sprintf(log_buff, "sqlca.sqlerrd[2] : %05d\n", sqlca.sqlerrd[2]);
			Write_batlog(seqno++, log_buff);
			Write_batlog(seqno++, "TEMP/ERP테이블에 Insert된 건수가 다릅니다");   /*dsa2000 Rexec 대체*/
			EXEC SQL ROLLBACK WORK; 
			return(-1);
		}
		
                EXEC SQL                
		SELECT  SUM(NVL(YINTAX,0)), SUM(NVL(YJUTAX,0)),SUM(NVL(YNONGTAX,0)), SUM(NVL(yintax,0))
		INTO	:v_amtin, :v_amtju, :v_amtnong, :v_amttot
		/*FROM 	PKMYSMAS A ,PKMPMAS B*/
		FROM 	PKHYSHIS A ,PKMPMAS B          /*연말정산 이력에서 가져가도록 수정 DSA2000  2006.02.*/
		WHERE   A.WORKYY = :v_yyyy
		AND	A.EMPNO  = B.EMPNO;
	
       		
	     if (sqlca.sqlcode != 0) {	/* 에러이면 */
		v_cnt_line = 0;
		sprintf(log_buff, "ORA-%05d - Fetch 통계_Error\n", sqlca.sqlcode);
		WriteLog(log_buff);
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		EXEC SQL ROLLBACK WORK;		
		return(-1);
	     }       		
		WriteLog("Insert HAIS HTX_V_VAT04 Success\n");
		sprintf(log_buff, "Process Count : %d\n", v_cnt_line);
		WriteLog(log_buff);
		Write_batlog(seqno++, log_buff);   /*dsa2000 Rexec 대체*/
		EXEC SQL COMMIT WORK;

		WriteLog("< WriteHTX_V_VAT04 Ending >-------------------------\n");
               
		return(0);
	}
}

/*int Check_date()
{
	EXEC SQL
	SELECT  nvl(PAYDATE,'000000'), SUBSTR(PAYDATE,1,4),  SUBSTR(PAYDATE, 5, 2)
	INTO	:v_yyyymm, :v_yyyy, :v_mm
	FROM	PKHPHIS
        WHERE   PAYDATE = :v_paydate
	  AND	ROWNUM = 1;

	if ( sqlca.sqlcode == -1403 )
	{	
		return(-1);
	}
	if ( sqlca.sqlcode != 0 )
	{	
		return(1);
	}              
               return(0);
} */

/*=== dsa2000 2004.12. Rexec대체 서비스를 위한 Write_batlog()  ===================*/
int Write_batlog(int seqno, char *message)
{
	
        EXEC SQL AT log_db 
        INSERT INTO PYBATLOG
        VALUES (:log_rundate, :log_progid, :seqno, :log_writeman, :message);

        if ((sqlca.sqlcode != 1403) && (sqlca.sqlcode != 0)) 
	{	
		printf("ERROR_CODE : %d, pybatlog Insert Error. \n", sqlca.sqlcode);
		return(-1);
	}                        
                        
        EXEC SQL AT log_db COMMIT WORK ;	
}
